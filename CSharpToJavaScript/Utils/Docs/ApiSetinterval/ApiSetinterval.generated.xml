<docs>
<SetInterval>
<summary>
The <strong><c>setInterval()</c></strong> method, offered on the <see cref="Window."/> and <see cref="WorkerGlobalScope."/> interfaces, repeatedly calls a function or executes a code snippet, with a fixed time delay between each call.
</summary>
<remarks>
<para>This method returns an interval ID which uniquely identifies the interval, so you can remove it later by calling <see cref="ClearInterval."/>.</para>
<para>-<see href="https://github.com/zloirock/core-js#settimeout-and-setinterval">Polyfill of <c>setInterval</c> which allows passing arguments to the callback in <c>core-js</c></see><br/>-<see cref="SetTimeout."/><br/>-<see cref="ClearTimeout."/><br/>-<see cref="ClearInterval."/><br/>-<see cref="Window.RequestAnimationFrame."/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/setInterval"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>The returned <c>intervalID</c> is a numeric, non-zero value which identifies the timer created by the call to <c>setInterval()</c>; this value can be passed to <see cref="ClearInterval."/> to cancel the interval.It may be helpful to be aware that <c>setInterval()</c> and <see cref="SetTimeout."/> share the same pool of IDs, and that <c>clearInterval()</c> and <see cref="ClearTimeout."/> can technically be used interchangeably.<br/>For clarity, however, you should try to always match them to avoid confusion when maintaining your code.<blockquote class="NOTE"><h5>NOTE</h5><strong>Note:</strong> The <c>delay</c> argument is converted to a signed 32-bit integer.<br/>This effectively limits <c>delay</c> to 2147483647 ms, since it&amp;apos;s specified as a signed integer in the IDL.</blockquote></returns>
</SetInterval>
</docs>