<docs>
<Blob>
<summary>
The <strong><c>Blob</c></strong> interface represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a <see cref="ReadableStream"/> so its methods can be used for processing the data.
</summary>
<remarks>
<para>Blobs can represent data that isn't necessarily in a JavaScript-native format. The <see cref="File"/> interface is based on <c>Blob</c>, inheriting blob functionality and expanding it to support files on the user&amp;apos;s system.</para>
<para>-<see cref="FileReader"/><br/>-<see cref="File"/><br/>-<see cref="URLcreateObjectURL"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob"> <em>See also on MDN</em> </seealso></para>
</remarks>
</Blob>
<BlobArrayBuffer>
<summary>
The <strong><c>arrayBuffer()</c></strong> method of the <see cref="Blob"/><br/>interface returns a <see cref="Promise"/> that resolves with the contents of the blob as<br/>binary data contained in an <see cref="ArrayBuffer"/>.
</summary>
<remarks>
<para>-<see cref="Response.ArrayBuffer"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API</see><br/>-<see cref="FileReader.ReadAsArrayBuffer"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A promise that resolves with an <see cref="ArrayBuffer"/> that contains the blob's<br/>data in binary form.</returns>
</BlobArrayBuffer>
<BlobBlob>
<summary>
The <strong><c>Blob()</c></strong> constructor returns a<br/>new <see cref="Blob"/> object. The content of the blob consists of the concatenation<br/>of the values given in the parameter <c>blobParts</c>.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A new <see cref="Blob"/> object containing the specified data.</returns>
</BlobBlob>
<BlobBytes>
<summary>
The <strong><c>bytes()</c></strong> method of the <see cref="Blob"/> interface returns a {{jsxref("Promise")}} that resolves with a {{jsxref("Uint8Array")}} containing the contents of the blob as an array of bytes.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/bytes"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with a <see cref="Uint8Array"/> object containing the blob data.</returns>
</BlobBytes>
<BlobSize>
<summary>
The <strong><c>size</c></strong> read-only property of the <see cref="Blob"/> interface returns<br/>the size of the <see cref="Blob"/> or <see cref="File"/> in bytes.
</summary>
<remarks>
<para>-<see cref="Blob"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/size"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The number of bytes of data contained within the <c>Blob</c> (or<br/><c>Blob</c>-based object, such as a <see cref="File"/>).</value>
</BlobSize>
<BlobSlice>
<summary>
The <strong><c>slice()</c></strong> method of the <see cref="Blob"/> interface<br/>creates and returns a new <c>Blob</c> object which contains data from a subset of<br/>the blob on which it&amp;apos;s called.
</summary>
<remarks>
<para>-<see cref="Blob"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A new <see cref="Blob"/> object containing the specified subset of the data contained<br/>within the blob on which this method was called. The original blob is not altered.</returns>
</BlobSlice>
<BlobStream>
<summary>
The <strong><c>stream()</c></strong> method of the <see cref="Blob"/> interface returns a <see cref="ReadableStream"/> which upon reading returns the data contained within the <c>Blob</c>.
</summary>
<remarks>
<para>-<see cref="Response.Body"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/stream"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="ReadableStream"/> which, upon reading, returns the contents of the<br/><c>Blob</c>.</returns>
</BlobStream>
<BlobText>
<summary>
The <strong><c>text()</c></strong> method of the<br/><see cref="Blob"/> interface returns a {{jsxref("Promise")}} that resolves with a<br/>string containing the contents of the blob, interpreted as UTF-8.
</summary>
<remarks>
<para>-<see cref="Response.Text"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API</see><br/>-<see cref="FileReader.ReadAsText"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/text"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A promise that resolves with a string which contains the blob&amp;apos;s data<br/>as a text string. The data is <strong>always</strong> presumed to be in UTF-8 format.</returns>
</BlobText>
<BlobType>
<summary>
The <strong><c>type</c></strong> read-only property of the <see cref="Blob"/> interface returns the {{Glossary("MIME type")}} of the file.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>Based on the current implementation, browsers won&amp;apos;t actually read the bytestream of a file to determine its media type.<br/>It is assumed based on the file extension; a PNG image file renamed to .txt would give &amp;quot;<strong>text/plain</strong>&amp;quot; and not &amp;quot;<strong>image/png</strong>&amp;quot;. Moreover, <c>blob.type</c> is generally reliable only for common file types like images, HTML documents, audio and video.<br/>Uncommon file extensions would return an empty string.<br/>Client configuration (for instance, the Windows Registry) may result in unexpected values even for common types. <strong>Developers are advised not to rely on this property as a sole validation scheme.</strong></para></blockquote>
<para>-<see cref="Blob"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/type"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the file&amp;apos;s MIME type, or an empty string if the<br/>type could not be determined.</value>
</BlobType>
</docs>