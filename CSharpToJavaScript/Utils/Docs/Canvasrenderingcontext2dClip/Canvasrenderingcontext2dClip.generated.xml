<docs>
<CanvasRenderingContext2DClip>
<summary>
The<br/><strong><c>CanvasRenderingContext2D.clip()</c></strong><br/>method of the Canvas 2D API turns the current or given path into the current clipping<br/>region. The previous clipping region, if any, is intersected with the current or given<br/>path to create the new clipping region.
</summary>
<remarks>
<para>In the image below, the red outline represents a clipping region shaped like a star.<br/>Only those parts of the checkerboard pattern that are within the clipping region get<br/>drawn.</para><para><see href="https://developer.mozilla.orgcanvas_clipping_path.png">Star-shaped clipping region</see></para><blockquote><para>Be aware that the clipping region is only constructed from<br/>shapes added to the path. It doesn&amp;apos;t work with shape primitives drawn directly to the<br/>canvas, such as <see cref="CanvasRenderingContext2D.FillRect"/>.<br/>Instead, you'd have to use <see cref="CanvasRenderingContext2D.Rect"/> to<br/>add a rectangular shape to the path before calling <c>clip()</c>.</para></blockquote><blockquote><para>Clip paths cannot be reverted directly. You must save your canvas state using <see cref="CanvasRenderingContext2D/save"/> before calling <c>clip()</c>, and restore it once you have finished drawing in the clipped area using <see cref="CanvasRenderingContext2D/restore"/>.</para></blockquote>
<para>-The interface defining this method: <see cref="CanvasRenderingContext2D"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clip"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</CanvasRenderingContext2DClip>
</docs>