<docs>
<CaptureController>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>CaptureController</c></strong> interface provides methods that can be used to further manipulate a captured display surface (captured via <see cref="MediaDevices.GetDisplayMedia"/>)
</summary>
<remarks>
<para>A <c>CaptureController</c> object is associated with a captured display surface by passing it into a <c>getDisplayMedia()</c> call as the value of the options object&amp;apos;s <c>controller</c> property.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Element_Region_Capture">Using the Element Capture and Region Capture APIs</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/>-<see href="https://developer.chrome.com/docs/web-platform/conditional-focus/">Better screen sharing with Conditional Focus</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CaptureController>
<CaptureControllerCaptureController>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> constructor creates a new <c>CaptureController</c> object instance.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.chrome.com/docs/web-platform/conditional-focus/">Better screen sharing with Conditional Focus</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/CaptureController"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CaptureControllerCaptureController>
<CaptureControllerDecreaseZoomLevel>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> interface's <strong><c>decreaseZoomLevel()</c></strong> method decreases the captured display surface&amp;apos;s zoom level by one increment.
</summary>
<remarks>
<para>The <c>decreaseZoomLevel()</c> method must be invoked via <see href="https://developer.mozilla.org/en-US/docs/Glossary/Transient_activation">transient activation</see>. In addition, the user is asked for permission to share tabs when screen capture is first attempted; if the user denies permission the zoom level cannot be changed even with transient activation.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/decreaseZoomLevel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with <see cref="Undefined"/>.</returns>
</CaptureControllerDecreaseZoomLevel>
<CaptureControllerForwardWheel>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> interface's <strong><c>forwardWheel()</c></strong> method starts forwarding <see cref="Element.Wheel"/> events fired on the referenced element to the viewport of an associated captured display surface.
</summary>
<remarks>
<para>The <c>forwardWheel()</c> method must be invoked via <see href="https://developer.mozilla.org/en-US/docs/Glossary/Transient_activation">transient activation</see>. Specifically, the only events that can successfully invoke it are <c>click</c> and <c>input</c>. In addition, the user is asked for permission to share tabs when screen capture is first attempted; if the user grants permission, this also includes permission to scroll captured tabs. If the relevant permission is already <c>&amp;quot;granted&amp;quot;</c>, transient activation is not needed.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/forwardWheel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with <see cref="Undefined"/>.</returns>
</CaptureControllerForwardWheel>
<CaptureControllerGetSupportedZoomLevels>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> interface's <strong><c>getSupportedZoomLevels()</c></strong> method returns the different zoom levels that the captured display surface supports.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/getSupportedZoomLevels"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An array of numbers representing the different zoom levels that the captured display surface supports.</returns>
</CaptureControllerGetSupportedZoomLevels>
<CaptureControllerIncreaseZoomLevel>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> interface's <strong><c>increaseZoomLevel()</c></strong> method increases the captured display surface&amp;apos;s zoom level by one increment.
</summary>
<remarks>
<para>The <c>increaseZoomLevel()</c> method must be invoked via <see href="https://developer.mozilla.org/en-US/docs/Glossary/Transient_activation">transient activation</see>. In addition, the user is asked for permission to share tabs when screen capture is first attempted; if the user denies permission the zoom level cannot be changed even with transient activation.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/increaseZoomLevel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with <see cref="Undefined"/>.</returns>
</CaptureControllerIncreaseZoomLevel>
<CaptureControllerResetZoomLevel>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> interface's <strong><c>resetZoomLevel()</c></strong> method resets the captured display surface&amp;apos;s zoom to its initial level, which is <c>100</c>.
</summary>
<remarks>
<para>The <c>resetZoomLevel()</c> method must be invoked via <see href="https://developer.mozilla.org/en-US/docs/Glossary/Transient_activation">transient activation</see>. In addition, the user is asked for permission to share tabs when screen capture is first attempted; if the user denies permission the zoom level cannot be changed even with transient activation.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/resetZoomLevel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with <see cref="Undefined"/>.</returns>
</CaptureControllerResetZoomLevel>
<CaptureControllerSetFocusBehavior>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <see cref="CaptureController"/> interface's <strong><c>setFocusBehavior()</c></strong> method controls whether the captured tab or window will be focused when an associated <see cref="MediaDevices.GetDisplayMedia"/> {{jsxref("Promise")}} fulfills, or whether the focus will remain with the tab containing the capturing app.
</summary>
<remarks>
<para>You can set this behavior multiple times before the <see cref="MediaDevices.GetDisplayMedia"/> call, or once immediately after its <c>Promise</c> resolves. After that, the focus behavior is said to be finalized, and can&amp;apos;t be changed.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.chrome.com/docs/web-platform/conditional-focus/">Better screen sharing with Conditional Focus</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/setFocusBehavior"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<c>undefined</c>).</returns>
</CaptureControllerSetFocusBehavior>
<CaptureControllerZoomLevel>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>zoomLevel</c></strong> read-only property of the <see cref="CaptureController"/> interface returns the captured display surface's current zoom level.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/zoomLevel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number representing the current zoom level of the captured display surface.</value>
</CaptureControllerZoomLevel>
<CaptureControllerZoomlevelchange>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>zoomlevelchange</c></strong> event of the <see cref="CaptureController"/> interface is fired when the captured display surface's zoom level changes.
</summary>
<remarks>
<para>Specifically, this occurs when:</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see cref="MediaDevices.GetDisplayMedia"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control">Using the Captured Surface Control API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CaptureController/zoomlevelchange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CaptureControllerZoomlevelchange>
</docs>