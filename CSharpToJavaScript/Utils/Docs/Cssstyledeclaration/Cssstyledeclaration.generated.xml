<docs>
<CSSStyleDeclaration>
<summary>
The <strong><c>CSSStyleDeclaration</c></strong> interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties.
</summary>
<remarks>
<para>A <c>CSSStyleDeclaration</c> object can be exposed using three different APIs:</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CSSStyleDeclaration>
<CSSStyleDeclarationCssFloat>
<summary>
The <strong><c>cssFloat</c></strong> property of the <see cref="CSSStyleDeclaration"/> interface returns the result of invoking <see cref="CSSStyleDeclaration.GetPropertyValue"/> with <c>float</c> as an argument.
</summary>
<remarks>
<para>When setting, it invokes <see cref="CSSStyleDeclaration.SetProperty"/> with <c>float</c> as the first argument, and the given value as the second argument. The given value must be a valid value for the <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/float">float</see> property.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssFloat"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.When set to the <c>null</c> value, that <c>null</c> value is converted to the empty string (<c>&amp;quot;&amp;quot;</c>), so <c>csd.cssFloat = null</c> is equivalent to <c>csd.cssFloat = &amp;quot;&amp;quot;</c>.</value>
</CSSStyleDeclarationCssFloat>
<CSSStyleDeclarationCssText>
<summary>
The <strong><c>cssText</c></strong> property of the <see cref="CSSStyleDeclaration"/> interface returns or sets the text of the element's <strong>inline</strong> style declaration only.
</summary>
<remarks>
<para>To be able to set a <strong>stylesheet</strong> rule dynamically, see <see href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Using_dynamic_styling_information">Using dynamic styling information</see>.</para><para>Not to be confused with stylesheet style-rule <see cref="CSSRule.CssText"/>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the text of the element&amp;apos;s inline style declaration.</value>
</CSSStyleDeclarationCssText>
<CSSStyleDeclarationGetPropertyCSSValue>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong>CSSStyleDeclaration.getPropertyCSSValue()</strong><br/>method interface returns a <see cref="'CSSValue'"/> containing the CSS value for a<br/>property. Note that it returns <c>null</c> if the property name is a<br/>shorthand property.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>This interface was part of an attempt to create a typed CSS Object Model. This attempt has been abandoned, and most browsers do<br/>not implement it.</para><para>To achieve your purpose, you can use:</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyCSSValue"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="'CSSValue'"/> containing the CSS value for a property. If none exists, returns <c>null</c>.</returns>
</CSSStyleDeclarationGetPropertyCSSValue>
<CSSStyleDeclarationGetPropertyPriority>
<summary>
The <strong>CSSStyleDeclaration.getPropertyPriority()</strong> method interface returns<br/>a string that provides all explicitly set priorities on the CSS<br/>property.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyPriority"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A string that represents the priority (e.g., <c>&amp;quot;important&amp;quot;</c>) if one exists.<br/>If none exists, returns the empty string.</returns>
</CSSStyleDeclarationGetPropertyPriority>
<CSSStyleDeclarationGetPropertyValue>
<summary>
The <strong>CSSStyleDeclaration.getPropertyValue()</strong> method interface returns a string containing the value of a specified CSS property.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A string containing the value of the property. If not set, returns the empty string.The property value is dynamically computed, not what was originally specified in the declaration. The serialization happens in the following way:In essence, the property value is <strong>canonicalized</strong>, ensuring that two property values with the same rendering effect compare equal even when they are declared differently.</returns>
</CSSStyleDeclarationGetPropertyValue>
<CSSStyleDeclarationItem>
<summary>
The <c>CSSStyleDeclaration.item()</c><br/>method interface returns a CSS property name from a <see cref="'CSSStyleDeclaration'"/><br/>by index.
</summary>
<remarks>
<para>This method doesn&amp;apos;t throw exceptions as long as you provide<br/>arguments; the empty string is returned if the index is out of range and a<br/><see cref="TypeError"/> is thrown if no argument is provided.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/item"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A string that is the name of the CSS property at the specified index.JavaScript has a special simpler syntax for obtaining an item from a NodeList by index:</returns>
</CSSStyleDeclarationItem>
<CSSStyleDeclarationLength>
<summary>
The read-only property returns an integer that represents the<br/>number of style declarations in this CSS declaration block.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/length"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An integer that provides the number of styles explicitly set on the parent of<br/>the instance.</value>
</CSSStyleDeclarationLength>
<CSSStyleDeclarationParentRule>
<summary>
The <strong>CSSStyleDeclaration.parentRule</strong> read-only<br/>property returns a <see cref="'CSSRule'"/> that is the parent of this style<br/>block, e.g., a <see cref="'CSSStyleRule'"/> representing the style for a CSS<br/>selector.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/parentRule"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The CSS rule that contains this declaration block or <c>null</c> if this<br/><see cref="'CSSStyleDeclaration'"/> is not attached to a <see cref="'CSSRule'"/>.</value>
</CSSStyleDeclarationParentRule>
<CSSStyleDeclarationRemoveProperty>
<summary>
The <strong><c>CSSStyleDeclaration.removeProperty()</c></strong> method interface<br/>removes a property from a CSS style declaration object.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A string equal to the value of the CSS property before it was removed.</returns>
</CSSStyleDeclarationRemoveProperty>
<CSSStyleDeclarationSetProperty>
<summary>
The<br/><strong><c>CSSStyleDeclaration.setProperty()</c></strong> method interface sets<br/>a new value for a property on a CSS style declaration object.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</CSSStyleDeclarationSetProperty>
</docs>