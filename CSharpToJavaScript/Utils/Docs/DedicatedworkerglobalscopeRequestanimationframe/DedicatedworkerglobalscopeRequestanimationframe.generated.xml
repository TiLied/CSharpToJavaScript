<docs>
<DedicatedWorkerGlobalScopeRequestAnimationFrame>
<summary>
The <strong><c>requestAnimationFrame()</c></strong> method of the <see cref="DedicatedWorkerGlobalScope"/> interface tells the browser you wish to perform an animation frame request and call a user-supplied callback function before the next repaint.
</summary>
<remarks>
<para>The frequency of calls to the callback function will generally match the display refresh rate. The most common refresh rate is 60 Hz, (60 cycles/frames per second), though 75 Hz, 120 Hz, and 144 Hz are also widely used. <c>requestAnimationFrame()</c> calls are paused in most browsers when running in background tabs or hidden <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see>s, to improve performance and battery life.</para><para>A call to the <c>requestAnimationFrame()</c> method schedules only one single call to the callback function. If you want to animate another frame, your callback function must call <c>requestAnimationFrame()</c> again.</para><blockquote><para>Be sure always to use the first argument (or some other method for getting the current time) to calculate how much the animation will progress in a frame â€” <strong>otherwise, the animation will run faster on high refresh-rate screens</strong>. For ways to do that, see the examples below.</para></blockquote><para>Calling the <c>requestAnimationFrame()</c> method requires the current worker to have an associated owner <see cref="Window"/>. That means that the current worker must be created by <see cref="Window"/> or by a dedicated worker that also has an associated owner <see cref="Window"/>.</para>
<para>-<see cref="DedicatedWorkerGlobalScope.CancelAnimationFrame"/><br/>-<see cref="Window.RequestAnimationFrame"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <c>long</c> integer value that is the request ID uniquely identifying the entry<br/>in the callback list. This is a non-zero value, but you may not make any other<br/>assumptions about it. You can pass this value to<br/><see cref="DedicatedWorkerGlobalScope.CancelAnimationFrame"/> to cancel the refresh callback request, the cancel action must have been made in the same worker.</returns>
</DedicatedWorkerGlobalScopeRequestAnimationFrame>
</docs>