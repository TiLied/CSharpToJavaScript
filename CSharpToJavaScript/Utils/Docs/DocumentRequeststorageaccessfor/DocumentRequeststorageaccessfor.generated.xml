<docs>
<DocumentRequestStorageAccessFor>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>requestStorageAccessFor()</c></strong> method of the <see cref="Document"/> interface allows top-level sites to request third-party cookie access on behalf of embedded content originating from another site in the same <see href="https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API/Related_website_sets">related website set</see>. It returns a <see cref="Promise"/> that resolves if the access was granted, and rejects if access was denied.
</summary>
<remarks>
<para>-<see cref="Document.HasStorageAccess"/>, <see cref="Document.HasUnpartitionedCookieAccess"/>, <see cref="Document.RequestStorageAccess"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API/Using">Using the Storage Access API</see><br/>-<see href="https://webkit.org/blog/8124/introducing-storage-access-api/">Introducing Storage Access API</see> (WebKit blog)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Document/requestStorageAccessFor"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with <c>undefined</c> if the access to third-party cookies was granted and rejects if access was denied.<c>requestStorageAccessFor()</c> requests are automatically denied unless the top-level content is currently processing a user gesture such as a tap or click (<see href="https://developer.mozilla.org/en-US/docs/Glossary/transient activation">transient activation</see>), or unless permission was already granted previously. If permission was not previously granted, they must run inside a user gesture-based event handler. The user gesture behavior depends on the state of the promise:</returns>
</DocumentRequestStorageAccessFor>
</docs>