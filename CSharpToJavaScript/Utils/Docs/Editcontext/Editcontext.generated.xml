<docs>
<EditContext>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>EditContext</c></strong> interface represents the text edit context of an element that was made editable by using the {{domxref(&amp;quot;EditContext API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}.
</summary>
<remarks>
<para>The {{domxref(&amp;quot;EditContext API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, "nocode")}} can be used to build rich text editors on the web that support advanced text input experiences, such as <see href="https://developer.mozilla.org/en-US/docs/Glossary/Input Method Editor">Input Method Editor</see> (IME) composition, emoji picker, or any other platform-specific editing-related UI surfaces.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContext>
<EditContextAttachedElements>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>attachedElements()</c></strong> method of the <see cref="EditContext"/> interface returns an {{jsxref("Array")}} that contains only one item. This item is the element that's associated with the <c>EditContext</c> object.
</summary>
<remarks>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/attachedElements"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An {{jsxref("Array")}} containing one <see cref="HTMLElement"/> object.There can only be one element associated to an <c>EditContext</c> instance, so the returned array will always contain one element. If the API is extended in the future to support multiple associated elements, the return value will be an array containing multiple elements.</returns>
</EditContextAttachedElements>
<EditContextCharacterBounds>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>characterBounds()</c></strong> method of the <see cref="EditContext"/> interface returns an {{jsxref("Array")}} containing the list of bounding rectangles for the characters in the <c>EditContext</c> object.
</summary>
<remarks>
<para>The position and size of the characters in an <c>EditContext</c> object is used by the operating system to correctly position platform-specific editing-related UI surfaces such as an <see href="https://developer.mozilla.org/en-US/docs/Glossary/Input Method Editor">Input Method Editor</see> (IME) window when needed. This is especially important in situations where the operating system can't automatically detect the position and size of the characters, such as when rendering text in a <c>&amp;lt;canvas&amp;gt;</c> element.</para><para>Web developers will most likely be interested in using the <see cref="EditContext.Characterboundsupdate"/> event together with the <see cref="EditContext.UpdateCharacterBounds"/> method to update the character bounds when the operating system indicates that it requires information about the position and size of the characters.</para><para>The <c>characterBounds()</c> method returns the list of character bounds that were last updated with <c>updateCharacterBounds()</c>. The list doesn&amp;apos;t contain an item for every character in the <c>EditContext</c> object, only for the characters that were updated with <c>updateCharacterBounds()</c>. To know where the characters are located in the <c>EditContext</c> object, use the <see cref="EditContext.CharacterBoundsRangeStart"/> property.</para>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/characterBounds"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An {{jsxref("Array")}} containing <see cref="DOMRect"/> objects.</returns>
</EditContextCharacterBounds>
<EditContextCharacterBoundsRangeStart>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>characterBoundsRangeStart</c></strong> read-only property of the <see cref="EditContext"/> interface indicates the index of the character, within the editable text content, that corresponds to the first item in the <see cref="EditContext.CharacterBounds"/> array.
</summary>
<remarks>
<para>For example, if the <c>EditContent</c> contains the characters <c>abc</c>, and if <c>characterBoundRangeStart</c> is <c>1</c>, the first item in the <c>characterBounds</c> array contains the bounds for the character <c>b</c>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/characterBoundsRangeStart"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Number"/>.</value>
</EditContextCharacterBoundsRangeStart>
<EditContextCharacterboundsupdate>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <c>characterboundsupdate</c> event fires when the operating system needs to know the bounds of certain characters within editable text region of the <c>EditContext</c> object.
</summary>
<remarks>
<para>This happens when the operating system needs to display a platform-specific editing-related UI surface such as an <see href="https://developer.mozilla.org/en-US/docs/Glossary/Input Method Editor">Input Method Editor</see> (IME) window.</para><para>When the <c>characterboundsupdate</c> event fires, you should calculate the character bounds for the text, and then call the <see cref="EditContext.UpdateCharacterBounds"/> method to give the operating system the information it needs.</para><para>See the documentation of the <see cref="EditContext.UpdateCharacterBounds"/> method for more information about when and how to use the <c>characterboundsupdate</c> event.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/characterboundsupdate"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContextCharacterboundsupdate>
<EditContextCompositionend>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <c>compositionend</c> event of the <see cref="EditContext"/> interface fires when composition using a {{glossary("Input Method Editor")}} (IME) window ends.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/compositionend"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContextCompositionend>
<EditContextCompositionstart>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <c>compositionstart</c> event of the <see cref="EditContext"/> interface fires when composition using a {{glossary("Input Method Editor")}} (IME) window starts.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/compositionstart"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContextCompositionstart>
<EditContextEditContext>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>EditContext()</c></strong> constructor returns a new <see cref="EditContext"/> object.
</summary>
<remarks>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/EditContext"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContextEditContext>
<EditContextSelectionEnd>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>selectionEnd</c></strong> read-only property of the <see cref="EditContext"/> refers to the offset, within the editable text content, of the end of the current selection.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/selectionEnd"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Number"/></value>
</EditContextSelectionEnd>
<EditContextSelectionStart>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>selectionStart</c></strong> read-only property of the <see cref="EditContext"/> refers to the offset, within the editable text content, of the start of the current selection.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/selectionStart"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Number"/></value>
</EditContextSelectionStart>
<EditContextText>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>text</c></strong> read-only property of the <see cref="EditContext"/> interface represents the editable content of the element.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/text"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the current editable content of the element that&amp;apos;s attached to the <c>EditContext</c> object. Its initial value is the empty string.This string may or may not be equal to the value of the <see cref="Node.TextContent"/> property of the DOM element that's associated to the <c>EditContext</c>. The associated element might, for example, be a <c>&amp;lt;canvas&amp;gt;</c> element, which doesn&amp;apos;t have a <c>textContent</c> property. Or, the associated element might be a <c>&amp;lt;div&amp;gt;</c> element that contains text that&amp;apos;s different than the <c>EditContext.text</c> value, for more advanced rendering.The <c>text</c> property of the <c>EditContext</c> object can be used as the model for the editable text region. Other properties of the <c>EditContext</c> object, such as <c>selectionStart</c> and <c>selectionEnd</c> refer to offsets within the <c>text</c> string.</value>
</EditContextText>
<EditContextTextformatupdate>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <c>textformatupdate</c> event of the <see cref="EditContext"/> interface fires when composition using a {{glossary("Input Method Editor")}} (IME) window is happening.
</summary>
<remarks>
<para>The event is fired when the IME decides that certain parts of the text being composed should be formatted differently to indicate the composition state.</para><para>The following screenshot shows an example of text being written in the Notepad app on Windows, by using the Japanese IME. The text is formatted with a thick underline to indicate that it&amp;apos;s been composed from one of the IME&amp;apos;s suggestions.</para><para><see href="https://developer.mozilla.org./ime-notepad.png">Notepad on Windows with some Japanese text being composed from the IME window</see></para><para>As a web developer, you should listen for the <c>textformatupdate</c> event and update the formatting of the text displayed in your editable region accordingly.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/textformatupdate"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContextTextformatupdate>
<EditContextTextupdate>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <c>textupdate</c> event of the <see cref="EditContext"/> interface fires when the user has made changes to the text or selection of an editable region that's attached to an <c>EditContext</c> instance.
</summary>
<remarks>
<para>This event makes it possible to render the updated text and selection in the UI, in response to user input.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/textupdate"> <em>See also on MDN</em> </seealso></para>
</remarks>
</EditContextTextupdate>
<EditContextUpdateCharacterBounds>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>EditContext.updateCharacterBounds()</c></strong> method of the <see cref="EditContext"/> interface should be called as response to a <see cref="EditContext.Characterboundsupdate"/> event to inform the operating system about the position and size of the characters in the <c>EditContext</c> object.
</summary>
<remarks>
<para>The <c>characterboundsupdate</c> event is the only time you need to call the <c>updateCharacterBounds()</c> method.</para><para>The character bounds information is then used by the operating system to correctly position the <see href="https://developer.mozilla.org/en-US/docs/Glossary/Input Method Editor">Input Method Editor</see> (IME) window when needed. This is especially important in situations where the operating system can't automatically detect the position and size of the characters, such as when rendering text in a <c>&amp;lt;canvas&amp;gt;</c> element.</para>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/updateCharacterBounds"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<c>undefined</c>).</returns>
</EditContextUpdateCharacterBounds>
<EditContextUpdateControlBounds>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>EditContext.updateControlBounds()</c></strong> method of the <see cref="EditContext"/> interface is used to inform the operating system about the position and size of the editable text region of the <c>EditContext</c> object.
</summary>
<remarks>
<para>Call this method to tell the operating system the bounds of the current editable region. You should call it when initializing the EditContext, and whenever the editable region's bounds change such as when the webpage is resized. These bounds are used to position platform-specific editing-related UI surfaces such as an <see href="https://developer.mozilla.org/en-US/docs/Glossary/Input Method Editor">Input Method Editor</see> (IME) window.</para>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/updateControlBounds"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<c>undefined</c>).</returns>
</EditContextUpdateControlBounds>
<EditContextUpdateSelection>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>updateSelection()</c></strong> method of the <see cref="EditContext"/> interface updates the internal state of the selection within the editable text context. This method is used to update the selection state when the user interacts with the text rendering in the <c>EditContext</c>&amp;apos;s associated element, such as by clicking or dragging the mouse, or by using the keyboard.
</summary>
<remarks>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/updateSelection"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<c>undefined</c>).</returns>
</EditContextUpdateSelection>
<EditContextUpdateSelectionBounds>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>EditContext.updateSelectionBounds()</c></strong> method of the <see cref="EditContext"/> interface is used to inform the operating system about the bounds of the text selection within the editable region that's associated with the <c>EditContext</c> object.
</summary>
<remarks>
<para>Call this method to tell the operating system the bounds of the user&amp;apos;s current selection. You should call the method whenever the user&amp;apos;s selection changes in the editable region. The selection bounds are used by the operating system to help position the IME window or any other platform-specific editing-related UI surfaces.</para>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/updateSelectionBounds"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<c>undefined</c>).</returns>
</EditContextUpdateSelectionBounds>
<EditContextUpdateText>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>updateText()</c></strong> method of the <see cref="EditContext"/> interface updates the internal text content of an <c>EditContext</c> object.
</summary>
<remarks>
<para>This method doesn&amp;apos;t need to be used when the user types text in the associated element. The <c>EditContext</c> object will automatically update its internal text content, and will fire <see cref="EditContext.Textupdate"/> events as needed.</para><para>This method can, however, be used when the user interacts with the text content in other ways, such as when pasting text from the clipboard.</para>
<para>-The <see cref="EditContext"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EditContext/updateText"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<c>undefined</c>).</returns>
</EditContextUpdateText>
</docs>