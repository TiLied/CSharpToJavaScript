<docs>
<ElementGetBoundingClientRect>
<summary>
The <strong><c>Element.getBoundingClientRect()</c></strong> method returns a<br/><see cref="DOMRect"/> object providing information about the size of an element and its<br/>position relative to the <see href="https://developer.mozilla.org/en-US/docs/Glossary/Viewport">viewport</see>.
</summary>
<remarks>
<para>-<see cref="Element.GetClientRects"/><br/>-<see href="https://msdn.microsoft.com/library/ms536433(VS.85).aspx">MSDN: <c>getBoundingClientRect</c></see><br/>-<see href="https://msdn.microsoft.com/library/hh826029(VS.85).aspx">MSDN: <c>ClientRect</c></see>, an earlier version of <c>DOMRect</c><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>The returned value is a <see cref="DOMRect"/> object which is the smallest rectangle<br/>which contains the entire element, including its padding and border-width. The<br/><c>left</c>, <c>top</c>, <c>right</c>, <c>bottom</c>,<br/><c>x</c>, <c>y</c>, <c>width</c>, and <c>height</c> properties<br/>describe the position and size of the overall rectangle in pixels. Properties other than<br/><c>width</c> and <c>height</c> are relative to the top-left of the viewport.<see href="https://developer.mozilla.orgelement-box-diagram.png">DOMRect object that is the smallest rectangle containing the entire element.</see>The <c>width</c> and <c>height</c> properties of the <see cref="DOMRect"/><br/>object returned by the method include the <c>padding</c> and<br/><c>border-width</c>, not only the content width/height. In the standard box model,<br/>this would be equal to the <c>width</c> or <c>height</c> property of the<br/>element + <c>padding</c> + <c>border-width</c>. But<br/>if <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing"><c>box-sizing: border-box</c></see> is<br/>set for the element this would be directly equal to its <c>width</c> or<br/><c>height</c>.The returned value can be thought of as the union of the rectangles returned by<br/><see cref="Element.GetClientRects"/> for the element, i.e., the CSS<br/>border-boxes associated with the element.Empty border-boxes are completely ignored. If all the element&amp;apos;s border-boxes are empty,<br/>then a rectangle is returned with a <c>width</c> and <c>height</c> of zero<br/>and where the <c>top</c> and <c>left</c> are the top-left of the border-box<br/>for the first CSS box (in content order) for the element.The amount of scrolling that has been done of the viewport area (or any other<br/>scrollable element) is taken into account when computing the bounding rectangle. This<br/>means that the rectangle&amp;apos;s boundary edges (<c>top</c>, <c>right</c>,<br/><c>bottom</c>, <c>left</c>) change their values every time the scrolling<br/>position changes (because their values are relative to the viewport and not absolute).If you need the bounding rectangle relative to the top-left corner of the document,<br/>just add the current scrolling position to the <c>top</c> and <c>left</c><br/>properties (these can be obtained using <see cref="Window.ScrollY"/> and<br/><see cref="Window.ScrollX"/>) to get a bounding rectangle which is independent from the<br/>current scrolling position.</returns>
</ElementGetBoundingClientRect>
</docs>