<docs>
<EventTargetAddEventListener>
<summary>
The <strong><c>addEventListener()</c></strong> method of the <see cref="EventTarget"/> interface<br/>sets up a function that will be called whenever the specified event is delivered to the target.
</summary>
<remarks>
<para>Common targets are <see cref="Element"/>, or its children, <see cref="Document"/>, and <see cref="Window"/>,<br/>but the target may be any object that supports events (such as <see cref="XMLHttpRequest"/>).</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> The <c>addEventListener()</c> method is the <strong>recommended</strong> way to register an event listener. The benefits are as follows:</para></blockquote><para>The method <c>addEventListener()</c> works by adding a function, or an object that implements<br/><see cref="EventTarget.AddEventListener"/>, to the list of event listeners for the specified event type<br/>on the <see cref="EventTarget"/> on which it's called. If the function or object is already in the list of event listeners for this target, the function or object is not added a second time.</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> If a particular anonymous function is in the list of event listeners registered for a certain target, and then later in the code, an identical anonymous function is given in an <c>addEventListener</c> call, the second function will <strong>also</strong> be added to the list of event listeners for that target.</para><para>Indeed, anonymous functions are not identical even if defined using<br/>the <strong>same</strong> unchanging source-code called repeatedly, <strong>even if in a loop</strong>.</para><para>Repeatedly defining the same unnamed function in such cases can be<br/>problematic. (See <see href="https://developer.mozilla.org#memory_issues">Memory issues</see>, below.)</para></blockquote><para>If an event listener is added to an <see cref="EventTarget"/> from inside another listener —<br/>that is, during the processing of the event —<br/>that event will not trigger the new listener.<br/>However, the new listener may be triggered during a later stage of event flow,<br/>such as during the bubbling phase.</para>
<para>-<see cref="EventTarget.RemoveEventListener"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events">Creating and triggering custom events</see><br/>-<see href="https://www.quirksmode.org/js/this.html">More details on the use of <c>this</c> in event handlers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</EventTargetAddEventListener>
</docs>