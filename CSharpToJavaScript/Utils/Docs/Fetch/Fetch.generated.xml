<docs>
<Fetch_APIUsing_Fetch>
<summary>
The <see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see> provides a JavaScript interface for accessing and manipulating parts of the <see href="https://developer.mozilla.org/en-US/docs/Glossary/Protocol">protocol</see>, such as requests and responses. It also provides a global <see cref="Fetch"/> method that provides an easy, logical way to fetch resources asynchronously across the network.
</summary>
<remarks>
<para>Unlike <see cref="XMLHttpRequest"/> that is a callback-based API, Fetch is promise-based and provides a better alternative that can be easily used in <see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">service workers</see>. Fetch also integrates advanced HTTP concepts such as <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">CORS</see> and other extensions to HTTP.</para><para>A basic fetch request looks like this:</para><para>Here we are fetching a JSON file across the network, parsing it, and printing the data to the console. The simplest use of <c>fetch()</c> takes one argument — the path to the resource you want to fetch — and does not directly return the JSON response body but instead returns a promise that resolves with a <see cref="Response"/> object.</para><para>The <see cref="Response"/> object, in turn, does not directly contain the actual JSON response body but is instead a representation of the entire HTTP response. So, to extract the JSON body content from the <see cref="Response"/> object, we use the <see cref="Response.Json"/> method, which returns a second promise that resolves with the result of parsing the response body text as JSON.</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> See the <see href="https://developer.mozilla.org#body">Body</see> section for similar methods to extract other types of body content.</para></blockquote><para>Fetch requests are controlled by the <c>connect-src</c> directive of <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content Security Policy</see> rather than the directive of the resources it&amp;apos;s retrieving.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/>-<see href="https://github.com/github/fetch">Fetch polyfill</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/fetch">Fetch examples on GitHub</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"> <em>See also on MDN</em> </seealso></para>
</remarks>
</Fetch_APIUsing_Fetch>
</docs>