<docs>
<FetchEvent>
<summary>
This is the event type for <c>fetch</c> events dispatched on the {{domxref(&amp;quot;ServiceWorkerGlobalScope&amp;quot;, &amp;quot;service worker global scope&amp;quot;, &amp;quot;&amp;quot;, 1)}}. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the <see cref="FetchEvent.RespondWith"/> method, which allows us to provide a response to this fetch.
</summary>
<remarks>
<para></para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch_event"><c>fetch</c> event</see><br/>-<see cref="Promise"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FetchEvent>
<FetchEventClientId>
<summary>
The <strong><c>clientId</c></strong> read-only property of the<br/><see cref="FetchEvent"/> interface returns the id of the <see cref="Client"/> that the<br/>current service worker is controlling.
</summary>
<remarks>
<para>The <see cref="Clients.Get"/> method could then be passed this ID to retrieve the<br/>associated client.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/clientId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string that represents the client ID.</value>
</FetchEventClientId>
<FetchEventFetchEvent>
<summary>
The <strong><c>FetchEvent()</c></strong> constructor creates a new <see cref="FetchEvent"/> object.
</summary>
<remarks>
<para>-<see cref="Promise"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/FetchEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A new <see cref="FetchEvent"/> object.</returns>
</FetchEventFetchEvent>
<FetchEventHandled>
<summary>
The <strong><c>handled</c></strong> property of the <see cref="FetchEvent"/> interface returns a promise indicating if the event has been handled by the fetch algorithm or not. This property allows executing code after the browser has consumed a response, and is usually used together with the <see cref="ExtendableEvent.WaitUntil"/> method.
</summary>
<remarks>
<para>-<see cref="ExtendableEvent.WaitUntil"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/handled"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Promise"/> that is pending while the event has not been handled, and fulfilled once it has.</value>
</FetchEventHandled>
<FetchEventIsReload>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>isReload</c></strong> read-only property of the<br/><see cref="FetchEvent"/> interface returns <c>true</c> if the event was<br/>dispatched by the user attempting to reload the page, and <c>false</c> otherwise.<br/>Pressing the refresh button is a reload while clicking a link and pressing the back<br/>button is not.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/isReload"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value.</value>
</FetchEventIsReload>
<FetchEventPreloadResponse>
<summary>
The <strong><c>preloadResponse</c></strong> read-only property of the <see cref="FetchEvent"/> interface returns a {{jsxref("Promise")}} that resolves to the navigation preload <see cref="Response"/> if <see href="https://developer.mozilla.org/en-US/docs/Web/API/NavigationPreloadManager">navigation preload</see> was triggered, or <c>undefined</c> otherwise.
</summary>
<remarks>
<para>Navigation preload is triggered if <see href="https://developer.mozilla.org/en-US/docs/Web/API/NavigationPreloadManager/enable">navigation preload is enabled</see>, the request is a <c>GET</c> request, and the request is a navigation request (generated by the browser when loading pages and iframes).</para><para>A service worker can wait on this promise in its fetch event handler in order to track completion of a fetch request made during service-worker boot.</para>
<para>-<see href="https://web.dev/blog/navigation-preload">Speed up Service Worker with Navigation Preloads</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/preloadResponse"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A {{jsxref("Promise")}} that resolves to a <see cref="Response"/> or otherwise to <c>undefined</c>.</value>
</FetchEventPreloadResponse>
<FetchEventReplacesClientId>
<summary>
The <strong><c>replacesClientId</c></strong> read-only property of the<br/><see cref="FetchEvent"/> interface is the <see cref="Client.Id"/> of the<br/><see cref="Client"/> that is being replaced during a page navigation.
</summary>
<remarks>
<para>For example, when navigating from page A to page B <c>replacesClientId</c> is the<br/>ID of the client associated with page A. It can be an empty string when navigating from<br/><c>about:blank</c> to another page, as <c>about:blank</c>&amp;apos;s client will be<br/>reused, rather than be replaced.</para><para>Additionally, if the fetch isn&amp;apos;t a navigation, <c>replacesClientId</c> will be an<br/>empty string. This could be used to access/communicate with a client that will<br/>imminently be replaced, right before a navigation.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/replacesClientId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.</value>
</FetchEventReplacesClientId>
<FetchEventRequest>
<summary>
The <strong><c>request</c></strong> read-only property of the<br/><see cref="FetchEvent"/> interface returns the <see cref="Request"/> that triggered<br/>the event handler.
</summary>
<remarks>
<para>This property is non-nullable (since version 46, in the case of Firefox.) If a request<br/>is not provided by some other means, the constructor <c>options</c> object must<br/>contain a request (see <see cref="FetchEvent.FetchEvent"/>.)</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/request"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Request"/> object.</value>
</FetchEventRequest>
<FetchEventRespondWith>
<summary>
The <strong><c>respondWith()</c></strong> method of<br/><see cref="FetchEvent"/> prevents the browser's default fetch handling, and<br/>allows you to provide a promise for a <see cref="Response"/> yourself.
</summary>
<remarks>
<para>In most cases you can provide any response that the receiver understands. For example,<br/>if an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/'img'">'img'</see> initiates the request, the response body needs to be<br/>image data. For security reasons, there are a few global rules:</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/respondWith"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</FetchEventRespondWith>
<FetchEventResultingClientId>
<summary>
The <strong><c>resultingClientId</c></strong> read-only property of the<br/><see cref="FetchEvent"/> interface is the <see cref="Client.Id"/> of the<br/><see cref="Client"/> that replaces the previous client during a page<br/>navigation.
</summary>
<remarks>
<para>For example, when navigating from page A to page B <c>resultingClientId</c> is<br/>the ID of the client associated with page B.</para><para>If the fetch request is a subresource request or the request&amp;apos;s<br/><see href="https://developer.mozilla.org/en-US/docs/Web/API/Request/destination"><c>destination</c></see> is<br/><c>report</c>, <c>resultingClientId</c> will be an empty string.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/resultingClientId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.</value>
</FetchEventResultingClientId>
</docs>