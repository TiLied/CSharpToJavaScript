<docs>
<FileReader>
<summary>
The <strong><c>FileReader</c></strong> interface lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using <see cref="File"/> or <see cref="Blob"/> objects to specify the file or data to read.
</summary>
<remarks>
<para>File objects may be obtained from a <see cref="FileList"/> object returned as a result of a user selecting files using the <c>&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;</c> element, or from a drag and drop operation's <see cref="DataTransfer"/> object. <c>FileReader</c> can only access the contents of files that the user has explicitly selected; it cannot be used to read a file by pathname from the user&amp;apos;s file system. To read files on the client&amp;apos;s file system by pathname, use the <see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System Access API</see>. To read server-side files, use <see cref="Windowfetch"/>, with <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">CORS</see> permission if reading cross-origin.</para><para></para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see><br/>-<see cref="File"/><br/>-<see cref="Blob"/><br/>-<see cref="FileReaderSync"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReader>
<FileReaderAbort>
<summary>
The <strong><c>abort()</c></strong> method of the <see cref="FileReader"/> interface aborts the read operation. Upon return,<br/>the <see cref="FileReader.ReadyState"/> will be <c>DONE</c>.
</summary>
<remarks>
<para>-<see cref="FileReader"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</FileReaderAbort>
<FileReaderAbort>
<summary>
The <strong><c>abort</c></strong> event of the <see cref="FileReader"/> interface is fired when a read has been aborted: for instance because the program called <see cref="FileReader.Abort"/>.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-Related events: <see cref="FileReader.Loadstart"/>, <see cref="FileReader.Loadend"/>, <see cref="FileReader.Progress"/>, <see cref="FileReader.Error"/>, <see cref="FileReader.Load"/>.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderAbort>
<FileReaderError>
<summary>
The <strong><c>error</c></strong> read-only property of the <see cref="FileReader"/> interface returns the<br/>error that occurred while reading the file.
</summary>
<remarks>
<para>-<see cref="FileReader"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMException"/> containing the relevant error.</value>
</FileReaderError>
<FileReaderError>
<summary>
The <strong><c>error</c></strong> event of the <see cref="FileReader"/> interface is fired when the read failed due to an error (for example, because the file was not found or not readable).
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-Related events: <see cref="FileReader.Loadstart"/>, <see cref="FileReader.Loadend"/>, <see cref="FileReader.Progress"/>, <see cref="FileReader.Load"/>, <see cref="FileReader.Abort"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderError>
<FileReaderFileReader>
<summary>
The <strong><c>FileReader()</c></strong> constructor creates a new <c>FileReader</c>.
</summary>
<remarks>
<para>For details about how to use <c>FileReader</c>, see <see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications">Using files from web applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/FileReader"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderFileReader>
<FileReaderLoadend>
<summary>
The <strong><c>loadend</c></strong> event of the <see cref="FileReader"/> interface is fired when a file read has completed, successfully or not.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-Related events: <see cref="FileReader.Loadstart"/>, <see cref="FileReader.Load"/>, <see cref="FileReader.Progress"/>, <see cref="FileReader.Error"/>, <see cref="FileReader.Abort"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadend"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderLoadend>
<FileReaderLoadstart>
<summary>
The <strong><c>loadstart</c></strong> event of the <see cref="FileReader"/> interface is fired when a file read operation has begun.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-Related events: <see cref="FileReader.Loadend"/>, <see cref="FileReader.Load"/>, <see cref="FileReader.Progress"/>, <see cref="FileReader.Error"/>, <see cref="FileReader.Abort"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadstart"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderLoadstart>
<FileReaderLoad>
<summary>
The <strong><c>load</c></strong> event of the <see cref="FileReader"/> interface is fired when a file has been read successfully.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-Related events: <see cref="FileReader.Loadstart"/>, <see cref="FileReader.Loadend"/>, <see cref="FileReader.Progress"/>, <see cref="FileReader.Error"/>, <see cref="FileReader.Abort"/>.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/load"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderLoad>
<FileReaderProgress>
<summary>
The <strong><c>progress</c></strong> event of the <see cref="FileReader"/> interface is fired periodically as the <c>FileReader</c> reads data.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-Related events: <see cref="FileReader.Loadstart"/>, <see cref="FileReader.Loadend"/>, <see cref="FileReader.Load"/>, <see cref="FileReader.Error"/>, <see cref="FileReader.Abort"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/progress"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileReaderProgress>
<FileReaderReadAsArrayBuffer>
<summary>
The <strong><c>readAsArrayBuffer()</c></strong> method of the <see cref="FileReader"/> interface is used to start reading the<br/>contents of a specified <see cref="Blob"/> or <see cref="File"/>. When the read<br/>operation is finished, the <see cref="FileReader.ReadyState"/> property becomes<br/><c>DONE</c>, and the <see cref="FileReaderloadend"/> event is<br/>triggered. At that time, the <see cref="FileReader.Result"/> property<br/>contains an <see cref="ArrayBuffer"/> representing the file's data.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The <see cref="Blob.ArrayBuffer"/> method is a newer promise-based API to read a<br/>file as an array buffer.</para></blockquote>
<para>-<see cref="FileReader"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsArrayBuffer"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</FileReaderReadAsArrayBuffer>
<FileReaderReadAsBinaryString>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> <blockquote class="NOTE"><h5>NOTE</h5>This method is deprecated in favor of <see cref="FileReader.ReadAsArrayBuffer"/>.</blockquote>
</summary>
<remarks>
<para>The <strong><c>readAsBinaryString()</c></strong> method of the <see cref="FileReader"/> interface is used to start reading the contents of the<br/>specified <see cref="Blob"/> or <see cref="File"/>. When the read operation is<br/>finished, the <see cref="FileReader.ReadyState"/> property becomes<br/><c>DONE</c>, and the <see cref="FileReaderloadend"/> event is triggered. At that time, the<br/><see cref="FileReader.Result"/> property contains the raw binary data from<br/>the file.</para><para>Note that this method was once removed from the File API specification, but<br/>re-introduced for backward compatibility.<br/>Using <see cref="FileReader.ReadAsArrayBuffer"/> is recommended.</para>
<para>-<see cref="FileReader"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsBinaryString"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</FileReaderReadAsBinaryString>
<FileReaderReadAsDataURL>
<summary>
The <strong><c>readAsDataURL()</c></strong> method of the <see cref="FileReader"/> interface is used to read the contents of the specified<br/><see cref="Blob"/> or <see cref="File"/>. When the read operation is finished, the<br/><see cref="FileReader.ReadyState"/> property becomes <c>DONE</c>, and the<br/><see cref="FileReaderloadend"/> event is triggered. At that time, the<br/><see cref="FileReader.Result"/> attribute contains the data as a <see href="https://developer.mozilla.org/en-US/docs/Web/URI/Reference/Schemes/data">data: URL</see> representing the<br/>file&amp;apos;s data as a base64 encoded string.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The blob's <see cref="FileReader.Result"/> cannot be<br/>directly decoded as Base64 without first removing the Data-URL declaration preceding<br/>the Base64-encoded data. To retrieve only the Base64 encoded string, first<br/>remove <c>data:*/*;base64,</c> from the result.</para></blockquote>
<para>-<see cref="FileReader"/><br/>-<see cref="URL.CreateObjectURL"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</FileReaderReadAsDataURL>
<FileReaderReadAsText>
<summary>
The <strong><c>readAsText()</c></strong> method of the <see cref="FileReader"/> interface is used to read the contents of the specified <see cref="Blob"/> or <see cref="File"/>.<br/>When the read operation is complete, the <see cref="FileReader.ReadyState"/> property is changed to <c>DONE</c>,<br/>the <see cref="FileReaderloadend"/> event is triggered, and the <see cref="FileReader.Result"/> property contains the contents of the file as a text string.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The <see cref="Blob.Text"/> method is a newer promise-based API to read a file as text.</para></blockquote><blockquote class="NOTE"><h5>NOTE</h5><para>This method loads the entire file's content into memory and is not suitable for large files. Prefer <see cref="FileReader.ReadAsArrayBuffer"/> for large files.</para></blockquote>
<para>-<see cref="FileReader"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsText"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</FileReaderReadAsText>
<FileReaderReadyState>
<summary>
The <strong><c>readyState</c></strong> read-only property of the <see cref="FileReader"/> interface provides the current state of the reading operation.<br/>This will be one of the states: <c>EMPTY</c>, <c>LOADING</c>, or <c>DONE</c>.
</summary>
<remarks>
<para>-<see cref="Blob"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number which is one of the three possible state constants defined on the <see cref="FileReader"/> interface:</value>
</FileReaderReadyState>
<FileReaderResult>
<summary>
The <strong><c>result</c></strong> read-only property of the <see cref="FileReader"/> interface returns the<br/>file&amp;apos;s contents. This property is only valid after the read operation is complete, and<br/>the format of the data depends on which of the methods was used to initiate the read<br/>operation.
</summary>
<remarks>
<para>-<see cref="FileReader"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader/result"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An appropriate string or <see cref="ArrayBuffer"/> based on which of the reading methods<br/>was used to initiate the read operation. The value is <c>null</c> if the reading<br/>is not yet complete or was unsuccessful.The result types are described below.</value>
</FileReaderResult>
</docs>