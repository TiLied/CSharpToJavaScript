<docs>
<FileSystemHandle>
<summary>
The <strong><c>FileSystemHandle</c></strong> interface of the <see cref="'File System API'"/> is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with <c>FileSystemHandle</c> directly but rather its child interfaces <see cref="'FileSystemFileHandle'"/> and <see cref="'FileSystemDirectoryHandle'"/>.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileSystemHandle>
<FileSystemHandleIsSameEntry>
<summary>
The <strong><c>isSameEntry()</c></strong> method of the<br/><see cref="FileSystemHandle"/> interface compares two <see cref="FileSystemHandle"/> to see if the associated entries (either a file or directory) match.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle/isSameEntry"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A Promise that fulfills with a <see cref="'Boolean'"/>.</returns>
</FileSystemHandleIsSameEntry>
<FileSystemHandleKind>
<summary>
The <strong><c>kind</c></strong> read-only property of the<br/><see cref="FileSystemHandle"/> interface returns the type of entry. This is<br/><c>&amp;apos;file&amp;apos;</c> if the associated entry is a file or <c>&amp;apos;directory&amp;apos;</c>. It is<br/>used to distinguish files from directories when iterating over the contents of a<br/>directory.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle/kind"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string that can be:</value>
</FileSystemHandleKind>
<FileSystemHandleName>
<summary>
The <strong><c>name</c></strong> read-only property of the<br/><see cref="FileSystemHandle"/> interface returns the name of the entry represented by<br/>handle.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle/name"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.</value>
</FileSystemHandleName>
<FileSystemHandleQueryPermission>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>queryPermission()</c></strong> method of the<br/><see cref="FileSystemHandle"/> interface queries the current permission state of the<br/>current handle.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle/queryPermission"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that resolves with <see cref="'PermissionStatus.State'"/> which is one of <c>&amp;apos;granted&amp;apos;</c>, <c>&amp;apos;denied&amp;apos;</c> or <c>&amp;apos;prompt&amp;apos;</c>. It may also reject with one of the exceptions below.If this resolves with &amp;quot;prompt&amp;quot;, the website will have to call <c>requestPermission()</c> before any<br/>operations on the handle can be done. If this resolves with &amp;quot;denied&amp;quot; any operations will<br/>reject. Usually handles returned by the local file system handle factories will<br/>initially resolves with &amp;quot;granted&amp;quot; for their read permission state. However, other than through<br/>the user revoking permission, a handle retrieved from IndexedDB is also likely to resolves with<br/>&amp;quot;prompt&amp;quot;.</returns>
</FileSystemHandleQueryPermission>
<FileSystemHandleRemove>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> The <strong><c>remove()</c></strong> method of the <see cref="FileSystemHandle"/> interface requests removal of the entry represented by the handle from the underlying file system.
</summary>
<remarks>
<para>The <c>remove()</c> method allows you to remove a file or directory directly from its handle. Without this method, you would have to obtain the handle of the parent directory, then call <see cref="FileSystemDirectoryHandle.RemoveEntry"/> on that to remove it.</para><para>You can also call <c>remove()</c> on the root directory of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API/Origin_private_file_system">Origin Private File System</see> to clear its contents, after which a new empty OPFS is created.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle/remove"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with a value of <c>undefined</c>.</returns>
</FileSystemHandleRemove>
<FileSystemHandleRequestPermission>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>requestPermission()</c></strong> method of the<br/><see cref="FileSystemHandle"/> interface requests read or readwrite permissions for the<br/>file handle.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle/requestPermission"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that resolves with <see cref="'PermissionStatus.State'"/> which is one of <c>&amp;apos;granted&amp;apos;</c>, <c>&amp;apos;denied&amp;apos;</c> or <c>&amp;apos;prompt&amp;apos;</c>. It may also reject with one of the exceptions below.</returns>
</FileSystemHandleRequestPermission>
</docs>