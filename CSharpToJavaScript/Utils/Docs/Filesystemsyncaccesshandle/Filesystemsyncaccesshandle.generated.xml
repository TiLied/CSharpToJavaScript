<docs>
<FileSystemSyncAccessHandle>
<summary>
The <strong><c>FileSystemSyncAccessHandle</c></strong> interface of the {{domxref(&amp;quot;File System API&amp;quot;, &amp;quot;File System API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} represents a synchronous handle to a file system entry.
</summary>
<remarks>
<para>This class is only accessible inside dedicated <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API">Web Workers</see> (so that its methods do not block execution on the main thread) for files within the <see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API/Origin_private_file_system">origin private file system</see>, which is not visible to end-users.</para><para>As a result, its methods are not subject to the same security checks as methods running on files within the user-visible file system, and so are much more performant. This makes them suitable for significant, large-scale file updates such as <see href="https://sqlite.org/wasm">SQLite</see> database modifications.</para><para>The interface is accessed through the <see cref="'FileSystemFileHandle.CreateSyncAccessHandle'"/> method.</para><blockquote class="NOTE"><h5>NOTE</h5><para>In earlier versions of the spec, <see cref="FileSystemSyncAccessHandle.Close"/>, <see cref="FileSystemSyncAccessHandle.Flush"/>, <see cref="FileSystemSyncAccessHandle.GetSize"/>, and <see cref="FileSystemSyncAccessHandle.Truncate"/> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle"> <em>See also on MDN</em> </seealso></para>
</remarks>
</FileSystemSyncAccessHandle>
<FileSystemSyncAccessHandleClose>
<summary>
The <strong><c>close()</c></strong> method of the<br/><see cref="FileSystemSyncAccessHandle"/> interface closes an open synchronous file handle, disabling any further operations on it and releasing the exclusive lock previously put on the file associated with the file handle.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>In earlier versions of the spec, <c>close()</c>, <see cref="FileSystemSyncAccessHandle.Flush"/>, <see cref="FileSystemSyncAccessHandle.GetSize"/>, and <see cref="FileSystemSyncAccessHandle.Truncate"/> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle/close"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="'undefined'"/>).</returns>
</FileSystemSyncAccessHandleClose>
<FileSystemSyncAccessHandleFlush>
<summary>
The <strong><c>flush()</c></strong> method of the<br/><see cref="FileSystemSyncAccessHandle"/> interface persists any changes made to the file associated with the handle via the <see cref="'FileSystemSyncAccessHandle.Write'"/> method to disk.
</summary>
<remarks>
<para>Bear in mind that you only need to call this method if you need the changes committed to disk at a specific time, otherwise you can leave the underlying operating system to handle this when it sees fit, which should be OK in most cases.</para><blockquote class="NOTE"><h5>NOTE</h5><para>In earlier versions of the spec, <see cref="FileSystemSyncAccessHandle.Close"/>, <c>flush()</c>, <see cref="FileSystemSyncAccessHandle.GetSize"/>, and <see cref="FileSystemSyncAccessHandle.Truncate"/> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle/flush"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="'undefined'"/>).</returns>
</FileSystemSyncAccessHandleFlush>
<FileSystemSyncAccessHandleGetSize>
<summary>
The <strong><c>getSize()</c></strong> method of the<br/><see cref="FileSystemSyncAccessHandle"/> interface returns the size of the file associated with the handle in bytes.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>In earlier versions of the spec, <see cref="FileSystemSyncAccessHandle.Close"/>, <see cref="FileSystemSyncAccessHandle.Flush"/>, <c>getSize()</c>, and <see cref="FileSystemSyncAccessHandle.Truncate"/> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle/getSize"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A number representing the size of the file in bytes.</returns>
</FileSystemSyncAccessHandleGetSize>
<FileSystemSyncAccessHandleRead>
<summary>
The <strong><c>read()</c></strong> method of the<br/><see cref="FileSystemSyncAccessHandle"/> interface reads the content of the file associated with the handle into a specified buffer, optionally at a given offset.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle/read"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A number representing the number of bytes read from the file.</returns>
</FileSystemSyncAccessHandleRead>
<FileSystemSyncAccessHandleTruncate>
<summary>
The <strong><c>truncate()</c></strong> method of the<br/><see cref="FileSystemSyncAccessHandle"/> interface resizes the file associated with the handle to a specified number of bytes.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>In earlier versions of the spec, <see cref="FileSystemSyncAccessHandle.Close"/>, <see cref="FileSystemSyncAccessHandle.Flush"/>, <see cref="FileSystemSyncAccessHandle.GetSize"/>, and <c>truncate()</c> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle/truncate"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="'undefined'"/>).</returns>
</FileSystemSyncAccessHandleTruncate>
<FileSystemSyncAccessHandleWrite>
<summary>
The <strong><c>write()</c></strong> method of the<br/><see cref="FileSystemSyncAccessHandle"/> interface writes the content of a specified buffer to the file associated with the handle, optionally at a given offset.
</summary>
<remarks>
<para>Files within the <see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API/Origin_private_file_system">origin private file system</see> are not visible to end-users, therefore are not subject to the same security checks as methods running on files within the user-visible file system. As a result, writes performed using <c>FileSystemSyncAccessHandle.write()</c> are much more performant. This makes them suitable for significant, large-scale file updates such as <see href="https://sqlite.org/wasm">SQLite</see> database modifications.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">File System API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/file-system-access">The File System Access API: simplifying access to local files</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle/write"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A number representing the number of bytes written to the file.</returns>
</FileSystemSyncAccessHandleWrite>
</docs>