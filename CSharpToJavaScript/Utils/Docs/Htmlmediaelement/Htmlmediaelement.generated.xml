<docs>
<HTMLMediaElement>
<summary>
The <strong><c>HTMLMediaElement</c></strong> interface adds to <see cref="HTMLElement"/> the properties and methods needed to support basic media-related capabilities that are common to audio and video.
</summary>
<remarks>
<para>The <see cref="HTMLVideoElement"/> and <see cref="HTMLAudioElement"/> elements both inherit this interface.</para><para></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElement>
<HTMLMediaElementAbort>
<summary>
The <strong><c>abort</c></strong> event is fired when the resource was not fully loaded, but not as the result of an error.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/abort"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementAbort>
<HTMLMediaElementAddTextTrack>
<summary>
The <strong><c>addTextTrack()</c></strong> method of the <see cref="HTMLMediaElement"/> interface creates a new <see cref="TextTrack"/> object and adds it to the media element. It fires an <see cref="TextTrackListaddtrack"/> event on this media element's <see cref="HTMLMediaElementtextTracks"/>. This method can't be used on a <see cref="TextTrackList"/> interface, only an <see cref="HTMLMediaElement"/>.
</summary>
<remarks>
<para>-<see cref="TextTrack"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API">WebVTT API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media">Web media technologies</see><br/>-Learning: <see href="https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Structuring_content/HTML_video_and_audio">Video and audio content</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API">Using the Web Audio API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/addTextTrack"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>The newly created <see cref="TextTrack"/> object.</returns>
</HTMLMediaElementAddTextTrack>
<HTMLMediaElementAudioTracks>
<summary>
The read-only <strong><c>audioTracks</c></strong><br/>property on <see cref="HTMLMediaElement"/> objects returns<br/>an <see cref="AudioTrackList"/> object listing all of the <see cref="AudioTrack"/><br/>objects representing the media element&amp;apos;s audio tracks.
</summary>
<remarks>
<para>The media element may be<br/>either an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see> element or a <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see> element.</para><para>The returned list is <strong>live</strong>; that is, as tracks are added to and removed from<br/>the media element, the list&amp;apos;s contents change dynamically. Once you have a reference to<br/>the list, you can monitor it for changes to detect when new audio tracks are added or<br/>existing ones removed. See <see href="https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList#events">AudioTrackList events</see><br/>to learn more about watching for changes to a media element&amp;apos;s track list.</para>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.audioTracks</c> property<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see>, <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see cref="AudioTrack"/>, <see cref="AudioTrackList"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/audioTracks"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="AudioTrackList"/> object representing the list of audio tracks included<br/>in the media element. The list of tracks can be accessed using array notation, or using<br/>the object's <see cref="AudioTrackList.GetTrackById"/> method.Each track is represented by an <see cref="AudioTrack"/> object which provides<br/>information about the track.</value>
</HTMLMediaElementAudioTracks>
<HTMLMediaElementAutoplay>
<summary>
The <strong><c>HTMLMediaElement.autoplay</c></strong><br/>property reflects the <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#autoplay"><c>autoplay</c></see> HTML attribute, indicating<br/>whether playback should automatically begin as soon as enough media is available to do<br/>so without interruption.
</summary>
<remarks>
<para>A media element whose source is a <see cref="MediaStream"/> and whose<br/><c>autoplay</c> property is <c>true</c> will begin playback when it becomes<br/>active (that is, when <see cref="MediaStream.Active"/> becomes <c>true</c>).</para><blockquote class="NOTE"><h5>NOTE</h5><para>Sites which automatically play audio (or videos with an audio<br/>track) can be an unpleasant experience for users, so it should be avoided when<br/>possible. If you must offer autoplay functionality, you should make it opt-in<br/>(requiring a user to specifically enable it). However, autoplay can be useful when<br/>creating media elements whose source will be set at a later time, under user control.</para></blockquote><para>For a much more in-depth look at autoplay, autoplay blocking, and how to respond when<br/>autoplay is blocked by the user&amp;apos;s browser, see our article <see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Autoplay">Autoplay guide for media and Web Audio APIs</see>.</para>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.autoplay</c> property<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see>, <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/autoplay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value which is <c>true</c> if the media element will<br/>begin playback as soon as enough content has loaded to allow it to do so without<br/>interruption.<blockquote class="NOTE"><h5>NOTE</h5>Some browsers offer users the ability to override<br/><c>autoplay</c> in order to prevent disruptive audio or video from playing<br/>without permission or in the background. Do not rely on <c>autoplay</c> actually<br/>starting playback and instead use <see cref="HTMLMediaElement.Play"/><br/>event.</blockquote></value>
</HTMLMediaElementAutoplay>
<HTMLMediaElementBuffered>
<summary>
The <strong><c>buffered</c></strong> read-only property of <see cref="HTMLMediaElement"/> objects returns a new static <see href="https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges#normalized_timeranges_objects">normalized <c>TimeRanges</c> object</see> that represents the ranges of the media resource, if any, that the user agent has buffered at the moment the <c>buffered</c> property is accessed.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.buffered</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A new static <see href="https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges#normalized_timeranges_objects">normalized TimeRanges object</see> that represents the ranges of the media resource, if any, that the user agent has buffered at the moment the <c>buffered</c> property is accessed.</value>
</HTMLMediaElementBuffered>
<HTMLMediaElementCanplaythrough>
<summary>
The <c>canplaythrough</c> event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementCanplaythrough>
<HTMLMediaElementCanPlayType>
<summary>
The <see cref="HTMLMediaElement"/> method <strong><c>canPlayType()</c></strong> reports how likely it is that the current browser will be able to play media of a given <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/MIME_types">MIME type</see>.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.canPlayType()</c> method<br/>-<see cref="MediaCapabilities"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Formats/Support_issues">Handling media support issues in web content</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Formats">Media type and format guide</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Formats/codecs_parameter">Codecs in common media types</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A string indicating how likely it is that the media can be played.<br/>The string will be one of the following values:</returns>
</HTMLMediaElementCanPlayType>
<HTMLMediaElementCanplay>
<summary>
The <c>canplay</c> event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementCanplay>
<HTMLMediaElementCaptureStream>
<summary>
The <strong><c>captureStream()</c></strong> method of the <see cref="HTMLMediaElement"/> interface returns a <see cref="'MediaStream'"/> object which is streaming a real-time capture of the content being rendered in the media element.
</summary>
<remarks>
<para>This can be used, for example, as a source for a <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see> <see cref="RTCPeerConnection"/>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element">Recording a media element</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Recording_API">MediaStream Recording API</see><br/>-<see cref="HTMLCanvasElement.CaptureStream"/><br/>-<see cref="MediaStream"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/captureStream"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="'MediaStream'"/> object which can be used as a source for audio and/or<br/>video data by other media processing code, or as a source for <see href="https://developer.mozilla.org/en-US/docs/Glossary/WebRTC">WebRTC</see>.</returns>
</HTMLMediaElementCaptureStream>
<HTMLMediaElementController>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>HTMLMediaElement.controller</c></strong> property represents the media controller assigned to the element.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/controller"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>MediaController</c> object or <c>null</c> if no media controller is assigned to the element. The default is <c>null</c>.</value>
</HTMLMediaElementController>
<HTMLMediaElementControls>
<summary>
The <strong><c>HTMLMediaElement.controls</c></strong> property reflects the<br/><see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#controls"><c>controls</c></see> HTML attribute, which controls whether user<br/>interface controls for playing the media item will be displayed.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.controls</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/controls"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value. A value of <c>true</c> means controls will be<br/>displayed.</value>
</HTMLMediaElementControls>
<HTMLMediaElementControlsList>
<summary>
The <strong><c>controlsList</c></strong> property of the<br/><see cref="HTMLMediaElement"/> interface returns a DOMTokenList that helps the user<br/>agent select what controls to show on the media element whenever the user agent shows<br/>its own set of controls. The DOMTokenList takes one or more of three possible values:<br/><c>nodownload</c>, <c>nofullscreen</c>, and <c>noremoteplayback</c>.
</summary>
<remarks>
<para>-<see href="https://googlechrome.github.io/samples/media/controlslist.html">Chrome HTMLMediaElement controlsList Sample</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/controlsList"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMTokenList"/>.The value of <c>controlsList</c> can be set by passing a string representing the <c>DOMTokenList</c>'s <see cref="DOMTokenListvalue"/> property.</value>
</HTMLMediaElementControlsList>
<HTMLMediaElementCrossOrigin>
<summary>
The <strong><c>HTMLMediaElement.crossOrigin</c></strong> property is the CORS setting for this media element. See <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Attributes/crossorigin">CORS settings attributes</see> for details.
</summary>
<remarks>
<para>-<see cref="HTMLImageElement.CrossOrigin"/><br/>-<see cref="HTMLLinkElement.CrossOrigin"/><br/>-<see cref="HTMLScriptElement.CrossOrigin"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/crossOrigin"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string of a keyword specifying the CORS mode to use when fetching the resource. Possible values are:If the <c>crossOrigin</c> property is specified with any other value, it is the same as specifying as the <c>anonymous</c>.If the <c>crossOrigin</c> property is not specified, the resource is fetched without CORS (the <c>no-cors</c> {{domxref(&amp;quot;Request.mode&amp;quot;, &amp;quot;mode&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} and the <c>same-origin</c> {{domxref(&amp;quot;Request.credentials&amp;quot;, &amp;quot;credentials&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} mode).</value>
</HTMLMediaElementCrossOrigin>
<HTMLMediaElementCurrentSrc>
<summary>
The <strong><c>HTMLMediaElement.currentSrc</c></strong> property contains the<br/>absolute URL of the chosen media resource. This could happen, for example, if the web<br/>server selects a media file based on the resolution of the user&amp;apos;s display. The value<br/>is an empty string if the <c>networkState</c> property is <c>EMPTY</c>.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.currentSrc</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentSrc"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the absolute URL of the chosen media<br/>source; this may be an empty string if <c>networkState</c> is <c>EMPTY</c>;<br/>otherwise, it will be one of the resources listed by the<br/><see cref="HTMLSourceElement"/> contained within the media element, or the value or src<br/>if no <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source">source</see> element is provided.</value>
</HTMLMediaElementCurrentSrc>
<HTMLMediaElementCurrentTime>
<summary>
The <see cref="HTMLMediaElement"/> interface's<br/><strong><c>currentTime</c></strong> property specifies the current playback time<br/>in seconds.
</summary>
<remarks>
<para>Changing the value of <c>currentTime</c> seeks the media to<br/>the new time.</para>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.currentTime</c> property<br/>-<see cref="HTMLMediaElement.FastSeek"/>: Another way to set the time<br/>-<see cref="HTMLMediaElement.Duration"/>: The duration of the media in seconds<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentTime"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A double-precision floating-point value indicating the current playback time in<br/>seconds.If the media is not yet playing, the value of <c>currentTime</c> indicates the<br/>time position within the media at which playback will begin once the<br/><see cref="HTMLMediaElement.Play"/> method is called.Setting <c>currentTime</c> to a new value seeks the media to the given time, if<br/>the media is available.For media without a known duration—such as media being streamed live—it&amp;apos;s possible that<br/>the browser may not be able to obtain parts of the media that have expired from the<br/>media buffer. Also, media whose timeline doesn&amp;apos;t begin at 0 seconds cannot be seeked to<br/>a time before its timeline&amp;apos;s earliest time.The length of the media in seconds can be determined using the<br/><see cref="HTMLMediaElement.Duration"/> property.</value>
</HTMLMediaElementCurrentTime>
<HTMLMediaElementDefaultMuted>
<summary>
The <strong><c>HTMLMediaElement.defaultMuted</c></strong> property reflects the <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#muted"><c>muted</c></see> HTML attribute, which indicates whether the media element's audio output should be muted by default. This property has no dynamic effect. To mute and unmute the audio output, use the <see cref="HTMLMediaElement.Muted"/> property.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.defaultMuted</c> property<br/>-<see cref="HTMLMediaElement.Muted"/><br/>-<see cref="HTMLMediaElement.Volume"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/defaultMuted"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value. A value of <c>true</c> means that the audio output will be muted by default.</value>
</HTMLMediaElementDefaultMuted>
<HTMLMediaElementDefaultPlaybackRate>
<summary>
The <strong><c>HTMLMediaElement.defaultPlaybackRate</c></strong> property indicates the default playback rate for the media.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.defaultPlaybackRate</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/defaultPlaybackRate"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A double. <c>1.0</c> is &amp;quot;normal speed,&amp;quot; values lower than <c>1.0</c> make the media play slower than normal, higher values make it play faster.</value>
</HTMLMediaElementDefaultPlaybackRate>
<HTMLMediaElementDisableRemotePlayback>
<summary>
The <strong><c>disableRemotePlayback</c></strong> property of the <see cref="HTMLMediaElement"/> interface determines whether the media element is allowed to have a remote playback UI.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/audio#disableremoteplayback">The <c>disableremoteplayback</c> attribute of the <c>&amp;lt;audio&amp;gt;</c> element</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#disableremoteplayback">The <c>disableremoteplayback</c> attribute of the <c>&amp;lt;video&amp;gt;</c> element</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/disableRemotePlayback"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value indicating whether the media element may have a remote playback<br/>UI. (<c>false</c> means &amp;quot;not disabled&amp;quot;, which means &amp;quot;enabled&amp;quot;)</value>
</HTMLMediaElementDisableRemotePlayback>
<HTMLMediaElementDuration>
<summary>
The <strong>read-only</strong> <see cref="HTMLMediaElement"/><br/>property <strong><c>duration</c></strong> indicates the length of the element&amp;apos;s<br/>media in seconds.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media">Web media technologies</see><br/>-<see cref="HTMLMediaElement.CurrentTime"/>: The current playback position of the<br/>media<br/>-The <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see> and <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see> elements<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/duration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A double-precision floating-point value indicating the duration of the media in<br/>seconds. If no media data is available, the value <c>NaN</c> is returned. If the<br/>element&amp;apos;s media doesn&amp;apos;t have a known duration—such as for live media streams—the value<br/>of <c>duration</c> is <c>Infinity</c>.</value>
</HTMLMediaElementDuration>
<HTMLMediaElementDurationchange>
<summary>
The <c>durationchange</c> event is fired when the <c>duration</c> attribute has been updated.
</summary>
<remarks>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementDurationchange>
<HTMLMediaElementEmptied>
<summary>
The <c>emptied</c> event is fired when the media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the <c>load()</c> method is called to reload it.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementEmptied>
<HTMLMediaElementEncrypted>
<summary>
The <c>encrypted</c> event is fired when initialization data is found in the media that indicates it is encrypted.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see cref="MediaEncryptedEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/encrypted"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementEncrypted>
<HTMLMediaElementEnded>
<summary>
The <strong><c>HTMLMediaElement.ended</c></strong> property indicates whether the media<br/>element has ended playback.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.ended</c> property<br/>-<see cref="MediaStream"/><br/>-<see cref="MediaStream.Active"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value which is <c>true</c> if the media contained in the<br/>element has finished playing.If the source of the media is a <see cref="MediaStream"/>, this value is<br/><c>true</c> if the value of the stream's <see cref="MediaStream.Active"/> property is <c>false</c>.</value>
</HTMLMediaElementEnded>
<HTMLMediaElementEnded>
<summary>
The <c>ended</c> event is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available.
</summary>
<remarks>
<para>This event occurs based upon <see cref="HTMLMediaElement"/> ({{HTMLElement("audio")}} and {{HTMLElement("video")}}) fire <c>ended</c> when playback reaches the end of the media.</para><para>This event is not cancelable and does not bubble.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The <c>ended</c> event doesn&amp;apos;t fire if the <see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loop"><c>loop</c></see> property is <c>true</c> and <see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playbackRate"><c>playbackRate</c></see> is non-negative.</para></blockquote>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API">Media Capture and Streams</see>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event"><c>MediaStreamTrack</c>: <c>ended</c> event</see><br/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API">Web Audio API</see>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event">Web audio API: ended event</see><br/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementEnded>
<HTMLMediaElementError>
<summary>
The <strong><c>HTMLMediaElement.error</c></strong> property is the<br/><see cref="MediaError"/> object for the most recent error, or <c>null</c> if<br/>there has not been an error. When an <see cref="HTMLMediaElementerror"/> event is received by the<br/>element, you can determine details about what happened by examining this object.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.error</c> property<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see> and <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/error"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="MediaError"/> object describing the most recent error to occur on the<br/>media element or <c>null</c> if no errors have occurred.</value>
</HTMLMediaElementError>
<HTMLMediaElementError>
<summary>
The <strong><c>error</c></strong> event is fired when the resource could not be loaded due to an error (for example, a network connectivity problem).
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/error"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementError>
<HTMLMediaElementFastSeek>
<summary>
The <strong><c>HTMLMediaElement.fastSeek()</c></strong> method quickly seeks the<br/>media to the new time with precision tradeoff.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>If you need to seek with precision, you should set <see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentTime"><c>HTMLMediaElement.currentTime</c></see><br/>instead.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentTime">HTMLMediaElement.currentTime</see><br/>for seeking without precision tradeoff<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/fastSeek"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HTMLMediaElementFastSeek>
<HTMLMediaElementLoad>
<summary>
The <see cref="HTMLMediaElement"/> method<br/><strong><c>load()</c></strong> resets the media element to its initial state and<br/>begins the process of selecting a media source and loading the media in preparation<br/>for playback to begin at the beginning.
</summary>
<remarks>
<para>The amount of media data that is<br/>prefetched is determined by the value of the element&amp;apos;s <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#preload"><c>preload</c></see> attribute.</para><para>This method is generally only useful when you&amp;apos;ve made dynamic changes to the set of<br/>sources available for the media element, either by changing the element&amp;apos;s<br/><see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#src"><c>src</c></see> attribute or by adding or removing<br/><see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source">source</see> elements nested within the media element itself.<br/><c>load()</c> will reset the element and rescan the available sources, thereby<br/>causing the changes to take effect.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/load"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HTMLMediaElementLoad>
<HTMLMediaElementLoadeddata>
<summary>
The <strong><c>loadeddata</c></strong> event is fired when the frame at the current playback position of the media has finished loading; often the first frame.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>This event will not fire in mobile/tablet devices if data-saver is on in browser settings.</para></blockquote>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementLoadeddata>
<HTMLMediaElementLoadedmetadata>
<summary>
The <c>loadedmetadata</c> event is fired when the metadata has been loaded.
</summary>
<remarks>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementLoadedmetadata>
<HTMLMediaElementLoadstart>
<summary>
The <strong><c>loadstart</c></strong> event is fired when the browser has started to load a resource.
</summary>
<remarks>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementLoadstart>
<HTMLMediaElementLoop>
<summary>
The <strong><c>HTMLMediaElement.loop</c></strong> property reflects the <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video#loop"><c>loop</c></see> HTML attribute, which controls whether the media element should start over when it reaches the end.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.loop</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loop"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value.</value>
</HTMLMediaElementLoop>
<HTMLMediaElementMediaGroup>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>HTMLMediaElement.mediaGroup</c></strong> property reflects the <c>mediagroup</c> HTML attribute, which indicates the name of the group of elements it belongs to. A group of media elements shares a common <c>controller</c>.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.mediaGroup</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/mediaGroup"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.</value>
</HTMLMediaElementMediaGroup>
<HTMLMediaElementMediaKeys>
<summary>
The read-only <strong><c>HTMLMediaElement.mediaKeys</c></strong> property returns a <see cref="MediaKeys"/> object, that is a set of keys that the element can use for decryption of media data during playback.
</summary>
<remarks>
<para>-<see cref="MediaKeys"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/mediaKeys"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="MediaKeys"/> object, or <c>null</c> if no key is available.</value>
</HTMLMediaElementMediaKeys>
<HTMLMediaElementMuted>
<summary>
The <strong><c>HTMLMediaElement.muted</c></strong> property indicates whether the media<br/>element is muted.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.muted</c> property<br/>-<see cref="HTMLMediaElement.DefaultMuted"/><br/>-<see cref="HTMLMediaElement.Volume"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/muted"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value. <c>true</c> means muted and <c>false</c> means<br/>not muted.</value>
</HTMLMediaElementMuted>
<HTMLMediaElementNetworkState>
<summary>
The<br/><strong><c>HTMLMediaElement.networkState</c></strong> property indicates the<br/>current state of the fetching of media over the network.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.networkState</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/networkState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <c>unsigned short</c>. Possible values are:<table><tr><td>Constant</td><td>Value</td><td>Description</td></tr><tr><td><c>NETWORK_EMPTY</c></td><td>0</td><td>There is no data yet. Also, <c>readyState</c> is <c>HAVE_NOTHING</c>.</td></tr><tr><td><c>NETWORK_IDLE</c></td><td>1</td><td>HTMLMediaElement is active and has selected a resource, but is not using the network.</td></tr><tr><td><c>NETWORK_LOADING</c></td><td>2</td><td>The browser is downloading HTMLMediaElement data.</td></tr><tr><td><c>NETWORK_NO_SOURCE</c></td><td>3</td><td>No HTMLMediaElement src found.</td></tr></table></value>
</HTMLMediaElementNetworkState>
<HTMLMediaElementPause>
<summary>
The <strong><c>HTMLMediaElement.pause()</c></strong> method will pause playback<br/>of the media, if the media is already in a paused state this method will have no effect.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HTMLMediaElementPause>
<HTMLMediaElementPaused>
<summary>
The read-only <strong><c>HTMLMediaElement.paused</c></strong> property<br/>tells whether the media element is paused.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.paused</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/paused"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value. <c>true</c> is paused and <c>false</c> is not<br/>paused.</value>
</HTMLMediaElementPaused>
<HTMLMediaElementPause>
<summary>
The <c>pause</c> event is sent when a request to pause an activity is handled and the activity has entered its paused state, most commonly after the media has been paused through a call to the element's <see cref="HTMLMediaElement.Pause"/> method.
</summary>
<remarks>
<para>The event is sent once the <c>pause()</c> method returns and after the media element's <see cref="HTMLMediaElement.Paused"/> property has been changed to <c>true</c>.</para><para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see cref="SpeechSynthesisUtterance"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementPause>
<HTMLMediaElementPlay>
<summary>
The <see cref="HTMLMediaElement"/><br/><strong><c>play()</c></strong> method attempts to begin playback of the media.<br/>It returns a <see cref="Promise"/> which is resolved when playback has been<br/>successfully started.
</summary>
<remarks>
<para>Failure to begin playback for any reason, such as<br/>permission issues, result in the promise being rejected.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media">Web media technologies</see><br/>-Learning: <see href="https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Structuring_content/HTML_video_and_audio">HTML video and audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Autoplay">Autoplay guide for media and Web Audio APIs</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API">Using the Web Audio API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> which is resolved when playback has been started, or is<br/>rejected if for any reason playback cannot be started.<blockquote class="NOTE"><h5>NOTE</h5>Browsers released before 2019 may not return a value from<br/><c>play()</c>.</blockquote></returns>
</HTMLMediaElementPlay>
<HTMLMediaElementPlaybackRate>
<summary>
The <strong><c>HTMLMediaElement.playbackRate</c></strong> property sets the rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed.
</summary>
<remarks>
<para>A negative <c>playbackRate</c> value indicates that the media should be played backwards, but support for this is not yet widespread. (See <see href="https://developer.mozilla.org#browser_compatibility">browser compatibility</see> for details.)</para><para>The audio is muted when the fast forward or slow motion is outside a useful range (for example, Gecko mutes the sound outside the range <c>0.25</c> to <c>4.0</c>).</para><para>The pitch of the audio is corrected by default. You can disable pitch correction using the <see cref="HTMLMediaElement.PreservesPitch"/> property.</para>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.playbackRate</c> property<br/>-Browser bug reports to support negative <c>playbackRate</c> in <see href="https://bugzil.la/1468019">Firefox</see> and <see href="https://crbug.com/40410591">Blink</see> (Chrome, etc.)<br/>-The Web Hypertext Application Technology Working Group (WHATWG) <see href="https://github.com/whatwg/html/issues/3754">issue to require support for negative <c>playbackRate</c></see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playbackRate"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see href="https://en.wikipedia.org/wiki/Double-precision_floating-point_format"><c>double</c></see>. <c>1.0</c> is &amp;quot;normal speed,&amp;quot; values lower than <c>1.0</c> make the media play slower than normal, higher values make it play faster. (<strong>Default:</strong> <c>1.0</c>)</value>
</HTMLMediaElementPlaybackRate>
<HTMLMediaElementPlayed>
<summary>
The <strong><c>played</c></strong> read-only property of the <see cref="HTMLMediaElement"/> interface indicates the time ranges the resource, an {{htmlelement("audio")}} or {{htmlelement("video")}} media file, has played. It returns a new <see cref="TimeRanges"/> object that contains the ranges of the media source that the browser has played, if any, at the time the attribute is evaluated.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement.Seeked"/> event<br/>-<see cref="HTMLMediaElement.Progress"/> event<br/>-<see cref="HTMLMediaElement.Seekable"/><br/>-<see cref="HTMLMediaElement.Buffered"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see cref="HTMLAudioElement"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/played"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="TimeRanges"/> object; representing the time ranges that have been played.</value>
</HTMLMediaElementPlayed>
<HTMLMediaElementPlaying>
<summary>
The <c>playing</c> event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementPlaying>
<HTMLMediaElementPlay>
<summary>
The <c>play</c> event is fired when the <c>paused</c> property is changed from <c>true</c> to <c>false</c>, as a result of the <c>play</c> method, or the <c>autoplay</c> attribute.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementPlay>
<HTMLMediaElementPreload>
<summary>
The <strong><c>preload</c></strong> property of the <see cref="HTMLMediaElement"/> interface is a string that provides a hint to the browser about what the author thinks will lead to the best user experience.
</summary>
<remarks>
<para>It reflects the <c>preload</c> attribute of the <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see> element and the <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see> element.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/preload"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string. Possible values are as follows:</value>
</HTMLMediaElementPreload>
<HTMLMediaElementPreservesPitch>
<summary>
The <strong><c>HTMLMediaElement.preservesPitch</c></strong> property determines whether or not the browser should adjust the pitch of the audio to compensate for changes to the playback rate made by setting <see cref="HTMLMediaElement.PlaybackRate"/>.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement.PlaybackRate"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Audio_and_video_delivery/WebAudio_playbackRate_explained">Web Audio playbackRate explained</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/preservesPitch"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value defaulting to <c>true</c>.</value>
</HTMLMediaElementPreservesPitch>
<HTMLMediaElementProgress>
<summary>
The <strong><c>progress</c></strong> event is fired periodically as the browser loads a resource.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/progress"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementProgress>
<HTMLMediaElementRatechange>
<summary>
The <c>ratechange</c> event is fired when the playback rate has changed.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementRatechange>
<HTMLMediaElementReadyState>
<summary>
The <strong><c>HTMLMediaElement.readyState</c></strong> property indicates the<br/>readiness state of the media.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.readyState</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number which is one of the five possible state constants defined on the <see cref="HTMLMediaElement"/> interface:</value>
</HTMLMediaElementReadyState>
<HTMLMediaElementRemote>
<summary>
The <strong><c>remote</c></strong> read-only property of the <see cref="HTMLMediaElement"/> interface returns the <see cref="RemotePlayback"/> object associated with the media element. The <c>RemotePlayback</c> object allow the control of remote devices playing the media.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/remote"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="RemotePlayback"/> object associated with the media element.</value>
</HTMLMediaElementRemote>
<HTMLMediaElementSeekable>
<summary>
The <strong><c>seekable</c></strong> read-only property of <see cref="HTMLMediaElement"/> objects returns a new static <see href="https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges#normalized_timeranges_objects">normalized <c>TimeRanges</c> object</see> that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time <c>seekable</c> property is accessed.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.seekable</c> property<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API">Media Source API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Audio_and_video_delivery/buffering_seeking_time_ranges">Media buffering, seeking, and time ranges</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seekable"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A new static <see href="https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges#normalized_timeranges_objects">normalized TimeRanges object</see> that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time <c>seekable</c> property is accessed.</value>
</HTMLMediaElementSeekable>
<HTMLMediaElementSeeked>
<summary>
The <c>seeked</c> event is fired when a seek operation completed, the current playback position has changed, and the Boolean <c>seeking</c> attribute is changed to <c>false</c>.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeked"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementSeeked>
<HTMLMediaElementSeeking>
<summary>
The <strong><c>seeking</c></strong> read-only property of the <see cref="HTMLMediaElement"/> interface is a Boolean indicating whether the resource, the {{htmlelement("audio")}} or {{htmlelement("video")}}, is in the process of seeking to a new position.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement.Seeking"/> event<br/>-<see cref="HTMLMediaElement.Seeked"/> event<br/>-<see cref="HTMLVideoElement"/><br/>-<see cref="HTMLAudioElement"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value.</value>
</HTMLMediaElementSeeking>
<HTMLMediaElementSeeking>
<summary>
The <c>seeking</c> event is fired when a seek operation starts, meaning the Boolean <c>seeking</c> attribute has changed to <c>true</c> and the media is seeking a new position.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementSeeking>
<HTMLMediaElementSeekToNextFrame>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>HTMLMediaElement.seekToNextFrame()</c></strong> method<br/>asynchronously advances the current play position to the next frame in the media.
</summary>
<remarks>
<blockquote class="WARNING"><h5>WARNING</h5><para>This non-standard method is part of an experimentation process around support for<br/>non-real-time access to media for tasks including filtering, editing, and so forth.<br/>You should <strong>not</strong> use this method in production code, because its implementation<br/>may change—or be removed outright—without notice. You are, however, invited to<br/>experiment with it.</para></blockquote><para>This method lets you access frames of video media without the media being performed in<br/>real time. This also lets you access media using frames as a seek unit rather than<br/>timecodes (albeit only by seeking one frame at a time until you get to the frame you<br/>want). Possible uses for this method include filtering and editing of video content.</para><para>This method returns immediately, returning a <see cref="Promise"/>, whose fulfillment<br/>handler is called when the seek operation is complete. In addition, a<br/><see cref="HTMLMediaElementseeked"/> event is sent to let interested parties know that a seek has taken<br/>place. If the seek fails because the media is already at the last frame, a<br/><see cref="HTMLMediaElementseeked"/> event occurs, followed immediately by an <see cref="HTMLMediaElementended"/> event.</para><para>If there is no video on the media element, or the media isn&amp;apos;t seekable, nothing<br/>happens.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seekToNextFrame"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> which is fulfilled once the seek operation has completed.</returns>
</HTMLMediaElementSeekToNextFrame>
<HTMLMediaElementSetMediaKeys>
<summary>
The <strong><c>setMediaKeys()</c></strong> method of the <see cref="HTMLMediaElement"/> interface sets the <see cref="MediaKeys"/> that will be used to decrypt media during playback.
</summary>
<remarks>
<para>It returns a <see cref="Promise"/> that fulfils if the new keys are successfully set, or rejects if keys cannot be set.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setMediaKeys"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that fulfills with <see cref="'undefined'"/>.</returns>
</HTMLMediaElementSetMediaKeys>
<HTMLMediaElementSetSinkId>
<summary>
The <strong><c>setSinkId()</c></strong> method of the <see cref="HTMLMediaElement"/> interface sets the ID of the audio device to use for output and returns a {{jsxref("Promise")}}.
</summary>
<remarks>
<para>This only works when the application is permitted to use the specified device.<br/>For more information see the <see href="https://developer.mozilla.org#security_requirements">security requirements</see> below.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Audio_Output_Devices_API">Audio Output Devices API</see><br/>-<see cref="MediaDevices.SelectAudioOutput"/><br/>-<see cref="HTMLMediaElement.SinkId"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to <see cref="Undefined"/>.</returns>
</HTMLMediaElementSetSinkId>
<HTMLMediaElementSinkId>
<summary>
The <strong><c>sinkId</c></strong> read-only property of the <see cref="HTMLMediaElement"/> interface returns a string that is the unique ID of the device to be used for playing audio output.
</summary>
<remarks>
<para>This ID should be one of the <see cref="MediaDeviceInfo.DeviceId"/> values returned from <see cref="MediaDevices.EnumerateDevices"/>.<br/>If the user agent default device is being used, it returns an empty string.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Audio_Output_Devices_API">Audio Output Devices API</see><br/>-<see cref="MediaDevices.SelectAudioOutput"/><br/>-<see cref="HTMLMediaElement.SetSinkId"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/sinkId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string indicating the current audio output device, or the empty string if the default user agent output device is being used.</value>
</HTMLMediaElementSinkId>
<HTMLMediaElementSrc>
<summary>
The <strong><c>HTMLMediaElement.src</c></strong> property reflects the value of<br/>the HTML media element&amp;apos;s <c>src</c> attribute, which indicates the URL of a media<br/>resource to use in the element.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The best way to know the URL of the media resource currently<br/>in active use in this element is to look at the value of the<br/><see cref="HTMLMediaElement.CurrentSrc"/> attribute, which also takes<br/>into account selection of a best or preferred media resource from a list provided in<br/>an <see cref="HTMLSourceElement"/> (which represents a {{HTMLElement("source")}}<br/>element).</para></blockquote>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.src</c> property<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/src"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the URL of a media resource to use in the<br/>element; this property reflects the value of the HTML element&amp;apos;s <c>src</c><br/>attribute.</value>
</HTMLMediaElementSrc>
<HTMLMediaElementSrcObject>
<summary>
The <strong><c>srcObject</c></strong> property of the<br/><see cref="HTMLMediaElement"/> interface sets or returns the object which serves as<br/>the source of the media associated with the <see cref="HTMLMediaElement"/>, or <c>null</c> if not assigned.
</summary>
<remarks>
<para>The object can be a <see cref="MediaStream"/>, a <see cref="MediaSource"/>, a<br/><see cref="Blob"/>, or a <see cref="File"/> (which inherits from <c>Blob</c>).</para><blockquote class="NOTE"><h5>NOTE</h5><para>As of March 2020, only Safari has full support for <c>srcObject</c>, i.e., using <c>MediaSource</c>, <c>MediaStream</c>, <c>Blob</c>, and <c>File</c> objects as values. Other browsers support <c>MediaStream</c> objects; until they catch up, consider falling back to creating a URL with <see cref="URL.CreateObjectURL"/> and assigning it to <see cref="HTMLMediaElement.Src"/> (see below for an example). In addition, as of version 108 Chromium supports attaching a dedicated worker <c>MediaSource</c> object by assigning that object's <see cref="MediaSourceHandle"/> instance (transferred from the worker) to <c>srcObject</c>.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="'MediaStream'"/>, <see cref="'MediaSource'"/>, <see cref="'Blob'"/>, or<br/><see cref="'File'"/> object (though see the compatibility table for what is actually<br/>supported), or <c>null</c> if not assigned.</value>
</HTMLMediaElementSrcObject>
<HTMLMediaElementStalled>
<summary>
The <c>stalled</c> event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementStalled>
<HTMLMediaElementSuspend>
<summary>
The <c>suspend</c> event is fired when the user agent is intentionally not fetching media data, in which case <see cref="HTMLMediaElement.NetworkState"/> is set to <c>HTMLMediaElement.NETWORK_IDLE</c>. This can happen if there&amp;apos;s no more data to load, or if loading is unnecessary; for example, the browser may decide to only buffer 5 minutes of a video in advance, in which case loading is suspended until the user watches more of the video.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API">Web Audio API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementSuspend>
<HTMLMediaElementTextTracks>
<summary>
The read-only <strong><c>textTracks</c></strong><br/>property on <see cref="HTMLMediaElement"/> objects returns a<br/><see cref="TextTrackList"/> object listing all of the <see cref="TextTrack"/><br/>objects representing the media element&amp;apos;s text tracks, in the same order as in<br/>the list of text tracks.
</summary>
<remarks>
<para>You can detect when tracks are added to and removed from an<br/><see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/audio"><c>&amp;lt;audio&amp;gt;</c></see> or<br/><see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video"><c>&amp;lt;video&amp;gt;</c></see> element<br/>using the <c>addtrack</c> and <c>removetrack</c> events. However, these<br/>events aren&amp;apos;t sent directly to the media element itself. Instead, they&amp;apos;re sent to the<br/>track list object of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement"><c>HTMLMediaElement</c></see><br/>that corresponds to the type of track that was added to the element</para><para>The returned list is <strong>live</strong>; that is, as tracks are added to and removed from<br/>the media element, the list&amp;apos;s contents change dynamically. Once you have a reference to<br/>the list, you can monitor it for changes to detect when new text tracks are added or<br/>existing ones removed.</para><para>See <see href="https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList#events">TextTrackList events</see> to learn<br/>more about watching for changes to a media element&amp;apos;s track list.</para>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.textTracks</c> property<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see>, <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see cref="AudioTrack"/>, <see cref="AudioTrackList"/><br/>-<see cref="VideoTrack"/>, <see cref="VideoTrackList"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/addtrack_event"><c>addtrack</c></see>,<br/><see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/change_event"><c>change</c></see>,<br/><see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/removetrack_event"><c>removetrack</c></see>: AudioTrackList events<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/addtrack_event"><c>addtrack</c></see>,<br/><see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/change_event"><c>change</c></see>,<br/><see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/removetrack_event"><c>removetrack</c></see>: VideoTrackList events<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="TextTrackList"/> object representing the list of text tracks included in the media element. The list of tracks can be accessed using <c>textTracks[n]</c> to get the n-th text track from the object&amp;apos;s list of text tracks, or using the <see href="https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/getTrackById"><c>textTracks.getTrackById()</c></see><br/>method.Each track is represented by a <see cref="TextTrack"/> object which provides<br/>information about the track.</value>
</HTMLMediaElementTextTracks>
<HTMLMediaElementTimeupdate>
<summary>
The <c>timeupdate</c> event is fired when the time indicated by the <c>currentTime</c> attribute has been updated.
</summary>
<remarks>
<para>The event frequency is dependent on the system load, but will be thrown between about 4Hz and 66Hz (assuming the event handlers don&amp;apos;t take longer than 250ms to run). User agents are encouraged to vary the frequency of the event based on the system load and the average cost of processing the event each time, so that the UI updates are not any more frequent than the user agent can comfortably handle while decoding the video.</para><para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementTimeupdate>
<HTMLMediaElementVideoTracks>
<summary>
The read-only <strong><c>videoTracks</c></strong><br/>property on <see cref="HTMLMediaElement"/> objects returns a<br/><see cref="VideoTrackList"/> object listing all of the <see cref="VideoTrack"/><br/>objects representing the media element&amp;apos;s video tracks.
</summary>
<remarks>
<para>The returned list is <strong>live</strong>; that is, as tracks are added to and removed from<br/>the media element, the list&amp;apos;s contents change dynamically. Once you have a reference to<br/>the list, you can monitor it for changes to detect when new video tracks are added or<br/>existing ones removed. See <see href="https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList#events">VideoTrackList events</see><br/>to learn more about watching for changes to a media element&amp;apos;s track list.</para>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.videoTracks</c> property<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-<see cref="VideoTrack"/>, <see cref="VideoTrackList"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/videoTracks"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="VideoTrackList"/> object representing the list of video tracks included<br/>in the media element. The list of tracks can be accessed using array notation, or using<br/>the object's <see cref="VideoTrackList.GetTrackById"/> method.Each track is represented by a <see cref="VideoTrack"/> object which provides<br/>information about the track.</value>
</HTMLMediaElementVideoTracks>
<HTMLMediaElementVolume>
<summary>
The <strong><c>HTMLMediaElement.volume</c></strong> property sets the volume at<br/>which the media will be played.
</summary>
<remarks>
<para>-<see cref="HTMLMediaElement"/>: Interface used to define the <c>HTMLMediaElement.volume</c> property<br/>-<see cref="HTMLMediaElement.Muted"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volume"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A double values must fall between 0 and 1, where 0 is effectively muted and 1 is the<br/>loudest possible value.</value>
</HTMLMediaElementVolume>
<HTMLMediaElementVolumechange>
<summary>
The <c>volumechange</c> event is fired when either the <see cref="HTMLMediaElement.Volume"/> attribute or the <see cref="HTMLMediaElement.Muted"/> attribute has changed.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementVolumechange>
<HTMLMediaElementWaitingforkey>
<summary>
The <c>waitingforkey</c> event is fired at a media element when it is first unable to play because it needs a key to decode the following data, and playback is stopped.
</summary>
<remarks>
<para>If the video frame and/or audio data for the current playback position have been decoded, <see cref="HTMLMediaElement.ReadyState"/> is set to <see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState#htmlmediaelement.have_current_data"><c>HAVE_CURRENT_DATA</c></see>.<br/>Otherwise, including if the data was previously available but isn&amp;apos;t anymore, the <c>readyState</c> is set to <see href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState#htmlmediaelement.have_metadata"><c>HAVE_METADATA</c></see>.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waitingforkey"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementWaitingforkey>
<HTMLMediaElementWaiting>
<summary>
The <c>waiting</c> event is fired when playback has stopped because of a temporary lack of data.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="HTMLAudioElement"/><br/>-<see cref="HTMLVideoElement"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTMLMediaElementWaiting>
</docs>