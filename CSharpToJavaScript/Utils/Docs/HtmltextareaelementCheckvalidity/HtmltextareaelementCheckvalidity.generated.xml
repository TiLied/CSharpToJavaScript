<docs>
<HTMLTextAreaElementCheckValidity>
<summary>
The <strong><c>checkValidity()</c></strong> method of the <see cref="HTMLTextAreaElement"/> interface returns a boolean value which indicates if the element meets any <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation">constraint validation</see> rules applied to it. If false, the method also fires an <see cref="HTMLElement/invalid_event"/> event on the element. Because there's no default browser behavior for <c>checkValidity()</c>, canceling this <c>invalid</c> event has no effect.
</summary>
<remarks>
<blockquote><para>An HTML {{htmlelement("textarea")}} element with a non-null <see cref="HTMLTextAreaElement.ValidationMessage"/> is considered invalid, will match the CSS {{cssxref(":invalid")}} pseudo-class, and will cause <c>checkValidity()</c> to return false. Use the <see cref="HTMLTextAreaElement.SetCustomValidity"/> method to set the <see cref="HTMLTextAreaElement.ValidationMessage"/> to the empty string to set the <see cref="HTMLTextAreaElement.Validity"/> state to be valid.</para></blockquote>
<para>-<see cref="HTMLTextAreaElement.ReportValidity"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea">textarea</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form">form</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Forms/Form_validation">Learn: Client-side form validation</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation">Guide: Constraint validation</see><br/>-CSS <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/:valid">:valid</see> and <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid">:invalid</see> pseudo-classes<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement/checkValidity"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>Returns <c>true</c> if the element&amp;apos;s value has no validity problems; otherwise, returns <c>false</c>.</returns>
</HTMLTextAreaElementCheckValidity>
</docs>