<docs>
<HTTPCORS>
<summary>
<strong>Cross-Origin Resource Sharing</strong> (<see href="https://developer.mozilla.org/en-US/docs/Glossary/CORS">CORS</see>) is an <see href="https://developer.mozilla.org/en-US/docs/Glossary/HTTP">HTTP</see>-header based mechanism that allows a server to indicate any <see href="https://developer.mozilla.org/en-US/docs/Glossary/origin">origin</see> (domain, scheme, or port) other than its own from which a browser should permit loading resources. CORS also relies on a mechanism by which browsers make a "preflight" request to the server hosting the cross-origin resource, in order to check that the server will permit the actual request. In that preflight, the browser sends headers that indicate the HTTP method and headers that will be used in the actual request.
</summary>
<remarks>
<para>An example of a cross-origin request: the front-end JavaScript code served from <c>https://domain-a.com</c> uses <see cref="XMLHttpRequest."/> to make a request for <c>https://domain-b.com/data.json</c>.</para><para>For security reasons, browsers restrict cross-origin HTTP requests initiated from scripts. For example, <c>XMLHttpRequest</c> and the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see> follow the <see href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy">same-origin policy</see>. This means that a web application using those APIs can only request resources from the same origin the application was loaded from unless the response from other origins includes the right CORS headers.</para><para><see href="https://developer.mozilla.orgcors_principle.png">Diagrammatic representation of CORS mechanism</see></para><para>The CORS mechanism supports secure cross-origin requests and data transfers between browsers and servers. Modern browsers use CORS in APIs such as <c>XMLHttpRequest</c> or <see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch</see> to mitigate the risks of cross-origin HTTP requests.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors">CORS errors</see><br/>-<see href="https://enable-cors.org/server.html">Enable CORS: I want to add CORS support to my server</see><br/>-<see cref="XMLHttpRequest."/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see><br/>-<see href="https://httptoolkit.com/will-it-cors/">Will it CORS?</see> - an interactive CORS explainer &amp; generator<br/>-<see href="https://alfilatov.com/posts/run-chrome-without-cors/">How to run Chrome browser without CORS</see><br/>-<see href="https://www.telerik.com/blogs/using-cors-with-all-modern-browsers">Using CORS with All (Modern) Browsers</see><br/>-<see href="https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141">Stack Overflow answer with &amp;quot;how to&amp;quot; info for dealing with common problems</see>:-How to avoid the CORS preflight<br/>-How to use a CORS proxy to get around <strong>&amp;quot;No Access-Control-Allow-Origin header&amp;quot;</strong><br/>-How to fix <strong>&amp;quot;Access-Control-Allow-Origin header must not be the wildcard&amp;quot;</strong><br/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTTPCORS>
</docs>