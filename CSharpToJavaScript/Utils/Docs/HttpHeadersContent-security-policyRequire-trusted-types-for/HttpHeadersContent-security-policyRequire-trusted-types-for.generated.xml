<docs>
<HTTPHeadersContent-Security-PolicyRequire-trusted-types-for>
<summary>
When used, those functions only accept non-spoofable, typed values created by Trusted Type policies, and reject strings. Together with <strong><see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types"><c>trusted-types</c></see></strong> directive, which guards creation of Trusted Type policies, this allows authors to define rules guarding writing values to the DOM and thus reducing the DOM XSS attack surface to small, isolated parts of the web application codebase, facilitating their monitoring and code review.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">Content-Security-Policy</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting">Cross-Site Scripting (XSS)</see><br/>-<see href="https://w3c.github.io/trusted-types/dist/spec/#injection-sinks">DOM XSS injection sinks covered by Trusted Types</see><br/>-<see href="https://web.dev/articles/trusted-types">Prevent DOM-based cross-site scripting vulnerabilities with Trusted Types</see><br/>-Trusted Types with <see href="https://github.com/cure53/DOMPurify#what-about-dompurify-and-trusted-types">DOMPurify</see> XSS sanitizer<br/>-<see href="https://github.com/w3c/trusted-types#polyfill">Trusted Types polyfill</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for"> <em>See also on MDN</em> </seealso></para>
</remarks>
</HTTPHeadersContent-Security-PolicyRequire-trusted-types-for>
</docs>