<docs>
<IdleDeadlineTimeRemaining>
<summary>
The <strong><c>timeRemaining()</c></strong> method<br/>on the <see cref="IdleDeadline"/> interface returns the estimated number of<br/>milliseconds remaining in the current idle period. The callback can call this method at<br/>any time to determine how much time it can continue to work before it must return. For<br/>example, if the callback finishes a task and has another one to begin, it can call<br/><c>timeRemaining()</c> to see if there&amp;apos;s enough time to complete the next task. If<br/>there isn&amp;apos;t, the callback can just return immediately, or look for other work to do with<br/>the remaining time.
</summary>
<remarks>
<para>By the time <c>timeRemaining()</c> reaches 0, it is suggested that the callback<br/>should return control to the user agent&amp;apos;s event loop.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Tasks_API">Collaborative Scheduling of Background Tasks</see><br/>-<see cref="IdleDeadline"/><br/>-<see cref="Window.RequestIdleCallback"/><br/>-<see cref="Window.CancelIdleCallback"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/timeRemaining"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="DOMHighResTimeStamp"/> value (which is a floating-point number)<br/>representing the number of milliseconds the user agent estimates are left in the current<br/>idle period. The value is ideally accurate to within about 5 microseconds.If the <see cref="IdleDeadline"/> object's {{domxref("IdleDeadline.didTimeout",<br/>&amp;quot;didTimeout&amp;quot;)}} property is true, this method returns zero.</returns>
</IdleDeadlineTimeRemaining>
</docs>