<docs>
<IntersectionObserverThresholds>
<summary>
The <see cref="IntersectionObserver"/> interface's read-only<br/><strong><c>thresholds</c></strong> property returns the list of intersection<br/>thresholds that was specified when the observer was instantiated with<br/><see cref="IntersectionObserver.IntersectionObserver"/>. If<br/>only one threshold ratio was provided when instantiating the object, this will be an<br/>array containing that single value.
</summary>
<remarks>
<para>See the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#thresholds">Intersection Observer</see> page to<br/>learn how thresholds work.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An array of intersection thresholds, originally specified using the<br/><c>threshold</c> property when instantiating the observer. If only one observer<br/>was specified, without being in an array, this value is a one-entry array containing<br/>that threshold. Regardless of the order your original <c>threshold</c> array was<br/>in, this one is always sorted in numerically increasing order.If no <c>threshold</c> option was included when<br/><c>IntersectionObserver()</c> was used to instantiate the observer, the value of<br/><c>thresholds</c> is <c>[0]</c>.<blockquote class="NOTE"><h5>NOTE</h5><strong>Note:</strong> Although the <c>options</c> object you can specify when creating an<br/><see cref="IntersectionObserver"/> has a field named<br/><see cref="IntersectionObserver.Threshold"/>, this property is called<br/><c>thresholds</c>. Confusing? Yes. If you accidentally use<br/><c>thresholds</c> as the name of the field in your <c>options</c>, the<br/><c>thresholds</c> array will wind up being <c>[0.0]</c>, which is likely<br/>not what you expect. Debugging chaos may ensue.</blockquote></value>
</IntersectionObserverThresholds>
</docs>