<docs>
<JavaScriptReferenceStatementsTry...catch>
<summary>
The <strong><c>try...catch</c></strong> statement is comprised of a <c>try</c> block and either a <c>catch</c> block, a <c>finally</c> block, or both. The code in the <c>try</c> block is executed first, and if it throws an exception, the code in the <c>catch</c> block will be executed. The code in the <c>finally</c> block will always be executed before control flow exits the entire construct.
</summary>
<remarks>
<para>EmbedInteractiveExample("pages/js/statement-trycatch.html")</para>
<para>-<see cref="Error"/><br/>-<see cref="Statements/throw"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>If the <c>finally</c> block returns a value, this value becomes the return value of the entire <c>try-catch-finally</c> statement, regardless of any <c>return</c> statements in the <c>try</c> and <c>catch</c> blocks. This includes exceptions thrown inside of the <c>catch</c> block:The outer &amp;quot;oops&amp;quot; is not thrown because of the return in the <c>finally</c> block. The same would apply to any value returned from the <c>catch</c> block.</returns>
</JavaScriptReferenceStatementsTry...catch>
</docs>