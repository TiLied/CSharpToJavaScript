<docs>
<LockManagerRequest>
<summary>
The <strong><c>request()</c></strong> method of the <see cref="LockManager"/> interface requests a <see cref="'Lock'"/> object with parameters specifying its name and characteristics.<br/>The requested <c>Lock</c> is passed to a callback, while the function itself returns a <see cref="'Promise'"/> that resolves with <see cref="'undefined'"/>.
</summary>
<remarks>
<para>The <c>mode</c> property of the <c>options</c> parameter may be either <c>&amp;quot;exclusive&amp;quot;</c> or <c>&amp;quot;shared&amp;quot;</c>.</para><para>Request an <c>&amp;quot;exclusive&amp;quot;</c> lock when it should only be held by one code instance at a time.<br/>This applies to code in both tabs and workers. Use this to represent mutually exclusive access to a resource.<br/>When an <c>&amp;quot;exclusive&amp;quot;</c> lock for a given name is held, no other lock with the same name can be held.</para><para>Request a <c>&amp;quot;shared&amp;quot;</c> lock when multiple instances of the code can share access to a resource.<br/>When a <c>&amp;quot;shared&amp;quot;</c> lock for a given name is held, other <c>&amp;quot;shared&amp;quot;</c> locks for the same name can be granted, but no <c>&amp;quot;exclusive&amp;quot;</c> locks with that name can be held or granted.</para><para>This shared/exclusive lock pattern is common in database transaction architecture, for example to allow multiple simultaneous readers (each requests a <c>&amp;quot;shared&amp;quot;</c> lock) but only one writer (a single <c>&amp;quot;exclusive&amp;quot;</c> lock).<br/>This is known as the readers-writer pattern.<br/>In the <see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API">IndexedDB API</see>, this is exposed as <c>&amp;quot;readonly&amp;quot;</c> and <c>&amp;quot;readwrite&amp;quot;</c> transactions which have the same semantics.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="'Promise'"/> that resolves (or rejects) with the result of the callback after the lock is released, or rejects if the request is aborted.</returns>
</LockManagerRequest>
</docs>