<docs>
<MediaRecorderStart>
<summary>
The <see cref="MediaRecorder"/> method<br/><strong><c>start()</c></strong>, which is part of the MediaStream Recording API,<br/>begins recording media into one or more <see cref="Blob"/> objects.
</summary>
<remarks>
<para>You can<br/>record the entire duration of the media into a single <c>Blob</c> (or until you<br/>call <see cref="MediaRecorder.RequestData"/>), or you can specify the<br/>number of milliseconds to record at a time. Then, each time that amount of media has<br/>been recorded, an event will be delivered to let you act upon the recorded media, while<br/>a new <c>Blob</c> is created to record the next slice of the media.</para><para>Assuming the <c>MediaRecorder</c>'s <see cref="MediaRecorder.State"/><br/>is <c>inactive</c>, <c>start()</c> sets the <c>state</c> to<br/><c>recording</c>, then begins capturing media from the input stream. A<br/><c>Blob</c> is created and the data is collected in it until the time slice period<br/>elapses or the source media ends. Each time a <c>Blob</c> is filled up to that<br/>point (the timeslice duration or the end-of-media, if no slice duration was provided), a<br/><see cref="MediaRecorder.Dataavailable_event"/> event is sent to the <c>MediaRecorder</c> with the<br/>recorded data. If the source is still playing, a new <c>Blob</c> is created and<br/>recording continues into that, and so forth.</para><para>When the source stream ends, <c>state</c> is set to <c>inactive</c> and<br/>data gathering stops. A final <see cref="MediaRecorder.Dataavailable_event"/> event is sent to the<br/><c>MediaRecorder</c>, followed by a <see cref="MediaRecorder/stop_event"/> event.</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> If the browser is unable to start recording or continue<br/>recording, it will raise a <see cref="DOMError"/> event, followed by a<br/><see cref="MediaRecorder.Dataavailable_event"/> event containing the <c>Blob</c> it<br/>has gathered, followed by the <see cref="MediaRecorder/stop_event"/> event.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API">Using the MediaStream Recording API</see><br/>-<see href="https://mdn.github.io/dom-examples/media/web-dictaphone/">Web Dictaphone</see>: MediaRecorder +<br/>getUserMedia + Web Audio API visualization demo, by <see href="https://twitter.com/chrisdavidmills">Chris Mills</see> (<see href="https://github.com/mdn/dom-examples/tree/main/media/web-dictaphone">source on GitHub</see>.)<br/>-<see href="https://simpl.info/mediarecorder/">simpl.info MediaStream Recording demo</see>, by <see href="https://twitter.com/sw12">Sam Dutton</see>.<br/>-<see cref="MediaDevices.GetUserMedia"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</MediaRecorderStart>
</docs>