<docs>
<MediaStreamTrack>
<summary>
The <strong><c>MediaStreamTrack</c></strong> interface of the {{domxref(&amp;quot;Media Capture and Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.
</summary>
<remarks>
<para>Some user agents subclass this interface to provide more precise information or functionality, such as <see cref="CanvasCaptureMediaStreamTrack"/>.</para><para></para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API">Media Capture and Streams API</see><br/>-<see cref="MediaStream"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MediaStreamTrack>
<MediaStreamTrackApplyConstraints>
<summary>
The <strong><c>applyConstraints()</c></strong> method of the <see cref="MediaStreamTrack"/> interface applies a set of constraints to the track; these constraints let the website or app establish ideal values and acceptable ranges of values for the constrainable properties of the track, such as frame rate, dimensions, echo cancellation, and so forth.
</summary>
<remarks>
<para>Constraints can be used to ensure that the media meets certain guidelines you prefer.<br/>For example, you may prefer high-density video but require that the frame rate be a little low to help keep the data rate low enough not overtax the network.<br/>Constraints can also specify ideal and/or acceptable sizes or ranges of sizes.<br/>See <see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints#applying_constraints">Applying constraints</see> in <see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints">Capabilities, constraints, and settings</see> for more information on how to apply your preferred constraints.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Image_Capture_API">MediaStream Image Capture API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/applyConstraints"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> which resolves when the constraints have been successfully applied.<br/>If the constraints cannot be applied, the promise is rejected with a <see cref="OverconstrainedError"/> that is a <see cref="DOMException"/> whose name is <c>OverconstrainedError</c> with additional parameters, and, to indicate that the constraints could not be met.<br/>This can happen if the specified constraints are too strict to find a match when attempting to configure the track.</returns>
</MediaStreamTrackApplyConstraints>
<MediaStreamTrackClone>
<summary>
The <strong><c>clone()</c></strong> method of the <see cref="MediaStreamTrack"/><br/>interface creates a duplicate of the <c>MediaStreamTrack</c>. This new<br/><c>MediaStreamTrack</c> object is identical except for its unique<br/><see cref="MediaStreamTrack.Id"/>.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/clone"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A new <see cref="MediaStreamTrack"/> instance which is identical to the one<br/><c>clone()</c> was called, except for its new unique<br/><see cref="MediaStreamTrack.Id"/>.</returns>
</MediaStreamTrackClone>
<MediaStreamTrackContentHint>
<summary>
The <strong><c>contentHint</c></strong> property of the <see cref="MediaStreamTrack"/> interface is a string that hints at the type of content the track contains. Allowable values depend on the value of the <see cref="MediaStreamTrack.Kind"/> property.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/contentHint"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string with one of the following values:</value>
</MediaStreamTrackContentHint>
<MediaStreamTrackEnabled>
<summary>
The <strong><c>enabled</c></strong> property of the<br/><see cref="MediaStreamTrack"/> interface is a Boolean value which is<br/><c>true</c> if the track is allowed to render the source stream or<br/><c>false</c> if it is not. This can be used to intentionally mute a<br/>track.
</summary>
<remarks>
<para>When enabled, a track&amp;apos;s data is output from the source to the<br/>destination; otherwise, empty frames are output.</para><para>In the case of audio, a disabled track generates frames of silence (that is, frames in<br/>which every sample&amp;apos;s value is 0). For video tracks, every frame is filled entirely with<br/>black pixels.</para><para>The value of <c>enabled</c>, in essence, represents what a typical user would<br/>consider the muting state for a track, whereas the <see cref="MediaStreamTrack.Muted"/><br/>property indicates a state in which the track is temporarily unable to output<br/>data, such as a scenario in which frames have been lost in transit.</para><blockquote class="NOTE"><h5>NOTE</h5><para>If the track has been disconnected, the value of this property<br/>can be changed, but has no effect.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API">Media Capture and Streams API</see><br/>-<see cref="MediaStream"/><br/>-<see cref="MediaStreamTrack"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/enabled"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>When <c>true</c>, <c>enabled</c> indicates that the track is permitted to<br/>render its actual media to the output. When <c>enabled</c> is set to<br/><c>false</c>, the track only generates empty frames.Empty audio frames have every sample&amp;apos;s value set to 0. Empty video frames have every<br/>pixel set to black.<blockquote class="NOTE"><h5>NOTE</h5>When implementing a mute/unmute feature, you should use the<br/><c>enabled</c> property.</blockquote></value>
</MediaStreamTrackEnabled>
<MediaStreamTrackEnded>
<summary>
The <strong><c>ended</c></strong> event of the <see cref="MediaStreamTrack"/> interface is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-The HTMLMediaElement <see cref="HTMLMediaElement.Playing"/> event<br/>-The HTMLMediaElement <see cref="HTMLMediaElement.Waiting"/> event<br/>-The HTMLMediaElement <see cref="HTMLMediaElement.Seeking"/> event<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">audio</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">video</see><br/>-The HTMLMediaElement <see cref="HTMLMediaElement.Ended"/> event<br/>-The AudioScheduledSourceNode <see cref="AudioScheduledSourceNode.Ended"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MediaStreamTrackEnded>
<MediaStreamTrackGetCapabilities>
<summary>
The <strong><c>getCapabilities()</c></strong> method of<br/>the <see cref="MediaStreamTrack"/> interface returns an object detailing the accepted values or value range for each constrainable property of the associated <c>MediaStreamTrack</c>, based upon the platform and <see href="https://developer.mozilla.org/en-US/docs/Glossary/user agent">user agent</see>.
</summary>
<remarks>
<para>Once you know what the browser&amp;apos;s capabilities are, your script can use<br/><see cref="MediaStreamTrack.ApplyConstraints"/> to ask for the<br/>track to be configured to match ideal or acceptable settings. See <see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints">Capabilities, constraints, and settings</see> for details of how to work with constrainable properties.</para>
<para>-<see cref="InputDeviceInfo.GetCapabilities"/>, which also return a <c>MediaTrackCapabilities</c> object.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getCapabilities"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <c>MediaTrackCapabilities</c> object which specifies the accepted value or range of values supported for each of the user agent&amp;apos;s constrainable properties. This can contain the following members:</returns>
</MediaStreamTrackGetCapabilities>
<MediaStreamTrackGetConstraints>
<summary>
The <strong><c>getConstraints()</c></strong> method of<br/>the <see cref="MediaStreamTrack"/> interface returns a<br/><see cref="'MediaTrackConstraints'"/> object containing the set of constraints most<br/>recently established for the track using a prior call to<br/><see cref="MediaStreamTrack.ApplyConstraints"/>. These<br/>constraints indicate values and ranges of values that the website or application has<br/>specified are required or acceptable for the included constrainable properties.
</summary>
<remarks>
<para>Constraints can be used to ensure that the media meets certain guidelines you prefer.<br/>For example, you may prefer high definition video but require that the frame rate be a<br/>little low to help keep the data rate low enough not overtax the network. Constraints<br/>can also specify ideal and/or acceptable sizes or ranges of sizes. See <see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints">Capabilities, constraints, and settings</see> for details on how to work with constrainable properties.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getConstraints"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="'MediaTrackConstraints'"/> object which indicates the constrainable<br/>properties the website or app most recently set using<br/><see cref="MediaStreamTrack.ApplyConstraints"/>. The properties<br/>in the returned object are listed in the same order as when they were set, and only<br/>properties specifically set by the site or app are included.<blockquote class="NOTE"><h5>NOTE</h5>The returned set of constraints doesn&amp;apos;t necessarily describe<br/>the actual state of the media. Even if any of the constraints couldn&amp;apos;t be met, they<br/>are still included in the returned object as originally set by the site&amp;apos;s code. To get<br/>the currently active settings for all constrainable properties, you should instead<br/>call <see cref="MediaStreamTrack.GetSettings"/>.</blockquote></returns>
</MediaStreamTrackGetConstraints>
<MediaStreamTrackGetSettings>
<summary>
The <strong><c>getSettings()</c></strong> method of the<br/><see cref="MediaStreamTrack"/> interface returns a <see cref="MediaTrackSettings"/><br/>object containing the current values of each of the constrainable properties for the<br/>current <c>MediaStreamTrack</c>.
</summary>
<remarks>
<para>See <see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints">Capabilities, constraints, and settings</see> for details on how to work with constrainable properties.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getSettings"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="MediaTrackSettings"/> object describing the current configuration of the<br/>track&amp;apos;s constrainable properties.<blockquote class="NOTE"><h5>NOTE</h5>The returned object identifies the current values of every<br/>constrainable property, including those which are platform defaults rather than having<br/>been expressly set by the site&amp;apos;s code. To instead fetch the most-recently established<br/>constraints for the track&amp;apos;s properties, as specified by the site&amp;apos;s code, use<br/><see cref="MediaStreamTrack.GetConstraints"/>.</blockquote></returns>
</MediaStreamTrackGetSettings>
<MediaStreamTrackId>
<summary>
The <strong><c>id</c></strong> read-only property of the <see cref="MediaStreamTrack"/> interface returns a<br/>string containing a unique identifier (GUID) for the track, which is<br/>generated by the <see href="https://developer.mozilla.org/en-US/docs/Glossary/user agent">user agent</see>.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/id"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MediaStreamTrackId>
<MediaStreamTrackKind>
<summary>
The <strong><c>kind</c></strong> read-only property of the <see cref="MediaStreamTrack"/> interface returns a string set to <c>&amp;quot;audio&amp;quot;</c> if the track is an audio track and to <c>&amp;quot;video&amp;quot;</c> if it is a video track.<br/>It doesn&amp;apos;t change if the track is disassociated from its source.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/kind"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The possible values are a string with one of the following values:</value>
</MediaStreamTrackKind>
<MediaStreamTrackLabel>
<summary>
The <strong><c>label</c></strong> read-only property of the <see cref="MediaStreamTrack"/> interface returns a string containing a {{glossary("user agent")}}-assigned label that identifies the track source, as in <c>&amp;quot;internal microphone&amp;quot;</c>.
</summary>
<remarks>
<para>The string may be left empty and is empty as long as no source has been connected.<br/>When the track is disassociated from its source, the label is not changed.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/label"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MediaStreamTrackLabel>
<MediaStreamTrackMuted>
<summary>
The <strong><c>muted</c></strong> read-only property of the<br/><see cref="MediaStreamTrack"/> interface returns a boolean value<br/>indicating whether or not the track is currently unable to provide media output.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>To implement a way for users to mute and unmute a track, use the<br/><see cref="MediaStreamTrack.Enabled"/> property. When a track is disabled<br/>by setting <c>enabled</c> to <c>false</c>, it generates only empty frames<br/>(audio frames in which every sample is 0, or video frames in which every pixel is<br/>black).</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/muted"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean which is <c>true</c> if the track is currently muted, or<br/><c>false</c> if the track is currently unmuted.<blockquote class="NOTE"><h5>NOTE</h5>When possible, avoid polling <c>muted</c> to monitor the track&amp;apos;s muting status.<br/>Instead, add event listeners for the <see cref="MediaStreamTrack.Mute"/> and <see cref="MediaStreamTrack.Unmute"/> events.</blockquote></value>
</MediaStreamTrackMuted>
<MediaStreamTrackMute>
<summary>
The <strong><c>mute</c></strong> event is sent to a <see cref="MediaStreamTrack"/> when the track's source is temporarily unable to provide media data.
</summary>
<remarks>
<para>When the track is once again able to produce media output, an <see cref="MediaStreamTrackunmute"/> event is sent.</para><para>During the time between the <c>mute</c> event and the <c>unmute</c> event, the value of the track's <see cref="MediaStreamTrack.Muted"/> property is <c>true</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The condition that most people think of as "muted" (that is, a user-toggled state of silencing a track) is actually managed using the <see cref="MediaStreamTrack.Enabled"/> property, for which there are no events.</para></blockquote><para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="MediaStreamTrackunmute"/> event<br/>-<see cref="RTCRtpTransceiver.Direction"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/mute"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MediaStreamTrackMute>
<MediaStreamTrackReadyState>
<summary>
The <strong><c>readyState</c></strong> read-only property of the <see cref="MediaStreamTrack"/> interface returns an enumerated value giving the status of the track.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API">Media Capture and Streams API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see><br/>-The <see cref="MediaStreamTrack.Ended"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/readyState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>It takes one of the following values:</value>
</MediaStreamTrackReadyState>
<MediaStreamTrackStop>
<summary>
The <strong><c>stop()</c></strong> method of the <see cref="MediaStreamTrack"/> interface stops the track.
</summary>
<remarks>
<para>-<see cref="MediaStreamTrack"/>, the interface it belongs to.<br/>-<see cref="MediaStreamTrack.ReadyState"/><br/>-<see cref="MediaStreamTrackended"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/stop"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</MediaStreamTrackStop>
<MediaStreamTrackUnmute>
<summary>
The <strong><c>unmute</c></strong> event is sent to a <see cref="MediaStreamTrack"/> when the track's source is once again able to provide media data after a period of not being able to do so.
</summary>
<remarks>
<para>This ends the <see cref="MediaStreamTrack.Muted"/> state that began with the <see cref="MediaStreamTrackmute"/> event.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The condition that most people think of as "muted" (that is, a user-controllable way to silence a track) is actually managed using the <see cref="MediaStreamTrack.Enabled"/> property, for which there are no events.</para></blockquote><para>This event is not cancelable and does not bubble.</para>
<para>-The <see cref="MediaStreamTrackmute"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/unmute"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MediaStreamTrackUnmute>
</docs>