<docs>
<MimeTypeArray>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>MimeTypeArray</c></strong> interface returns an array of <see cref="'MimeType'"/> instances, each of which contains information about a supported browser plugins. This object is returned by <see cref="Navigator.MimeTypes"/>.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> This interface was an <see href="https://stackoverflow.com/questions/74630989/why-use-domstringlist-rather-than-an-array/74641156#74641156">attempt to create an unmodifiable list</see> and only continues to be supported to not break code that&amp;apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only).</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MimeTypeArray"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MimeTypeArray>
</docs>