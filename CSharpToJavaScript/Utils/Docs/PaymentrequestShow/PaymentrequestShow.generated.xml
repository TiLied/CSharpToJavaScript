<docs>
<PaymentRequestShow>
<summary>
The <strong><see cref="'PaymentRequest'"/></strong> interface&amp;apos;s<br/><strong><c>show()</c></strong> method instructs the user agent to begin the<br/>process of showing and handling the user interface for the payment request to the<br/>user.
</summary>
<remarks>
<para>Only one payment request can be in the process of being handled at once, across all<br/>documents. Once one <c>PaymentRequest</c>&amp;apos;s <c>show()</c> method has been<br/>called, any other call to <c>show()</c> will by rejected with an<br/><c>AbortError</c> until the returned promise has been concluded, either by being<br/>fulfilled with a <see cref="PaymentResponse"/> indicating the results of the payment<br/>request, or by being rejected with an error.</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> In reality, despite the fact that the specification says this<br/>can&amp;apos;t be done, some browsers, including Firefox, support multiple active payment<br/>requests at a time.</para></blockquote><para>If your architecture doesn&amp;apos;t necessarily have all of the data ready to go at the moment<br/>it instantiates the payment interface by calling <c>show()</c>, specify the<br/><c>detailsPromise</c> parameter, providing a <see cref="Promise"/> that is<br/>fulfilled once the data is ready. If this is provided, <c>show()</c> will not<br/>allow the user to interact with the payment interface until the promise is fulfilled, so<br/>that data can be updated prior to the user engaging with the payment process.</para><para>Processing the result and, if necessary, calling <see cref="PaymentResponse.Retry"/><br/>to retry a failed payment can all be done either asynchronously or synchronously,<br/>depending on your needs. For the best user experience, asynchronous solutions are<br/>typically the best way to go. Most examples on MDN and elsewhere use<br/><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"><c>async</c></see>/<see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await"><c>await</c></see><br/>to wait asynchronously while results are validated and so forth.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API">Payment Request API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API/Using_the_Payment_Request_API">Using the Payment Request API</see><br/>-<see cref="'PaymentRequest.Abort'"/><br/>-<see cref="PaymentRequest.Retry"/><br/>-<see cref="PaymentRequest.Complete"/><br/>-<see cref="PaymentResponse"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/show"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that eventually resolves with a <see cref="PaymentResponse"/>.<br/>The promise is resolved when the user accepts the payment request (such as by clicking a<br/>&amp;quot;Pay&amp;quot; button in the browser&amp;apos;s payment sheet).</returns>
</PaymentRequestShow>
</docs>