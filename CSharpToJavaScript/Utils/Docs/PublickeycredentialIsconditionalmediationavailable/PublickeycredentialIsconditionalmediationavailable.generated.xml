<docs>
<PublicKeyCredentialIsConditionalMediationAvailable>
<summary>
The <strong><c>isConditionalMediationAvailable()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface returns a {{jsxref("Promise")}} which resolves to <c>true</c> if conditional mediation is available.
</summary>
<remarks>
<para>Conditional mediation, if available, results in any discovered credentials being presented to the user in a non-modal dialog box along with an indication of the origin requesting credentials. This is requested by including <c>mediation: &amp;apos;conditional&amp;apos;</c> in your <c>get()</c> call. In practice, this means autofilling available credentials; you need to include <c>autocomplete=&amp;quot;webauthn&amp;quot;</c> on your form fields so that they will show the WebAuthn sign-in options.</para><para>A conditional <c>get()</c> call does not show the browser UI and remains pending until the user picks an account to sign-in with from available autofill suggestions:</para><para>The prevent silent access flag (see <see cref="CredentialsContainer.PreventSilentAccess"/>) is treated as being <c>true</c> regardless of its actual value: the conditional behavior always involves user mediation of some sort if applicable credentials are discovered.</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> If no credentials are discovered, the non-modal dialog will not be visible, and the user agent can prompt the user to take action in a way that depends on the type of credential (for example, to insert a device containing credentials).</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/isConditionalMediationAvailable"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> which resolves to a boolean value indicating whether or not conditional mediation is available.</returns>
</PublicKeyCredentialIsConditionalMediationAvailable>
</docs>