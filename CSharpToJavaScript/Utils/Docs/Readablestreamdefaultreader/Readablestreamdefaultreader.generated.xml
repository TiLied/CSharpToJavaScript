<docs>
<ReadableStreamDefaultReader>
<summary>
The <strong><c>ReadableStreamDefaultReader</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API</see> represents a default reader that can be used to read stream data supplied from a network (such as a fetch request).
</summary>
<remarks>
<para>A <c>ReadableStreamDefaultReader</c> can be used to read from a <see cref="ReadableStream"/> that has an underlying source of any type (unlike a <see cref="ReadableStreamBYOBReader"/>, which can only be used with readable streams that have an <strong>underlying byte source</strong>).</para><para>Note however that zero-copy transfer from an underlying source is only supported for underlying byte sources that autoallocate buffers.<br/>In other words, the stream must have been <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream">constructed</see> specifying both <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#type"><c>type=&amp;quot;bytes&amp;quot;</c></see> and <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#autoallocatechunksize"><c>autoAllocateChunkSize</c></see>.<br/>For any other underlying source, the stream will always satisfy read requests with data from internal queues.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API concepts</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams">Using readable streams</see><br/>-<see cref="ReadableStream"/><br/>-<see href="https://github.com/MattiasBuelens/web-streams-polyfill">Web-streams-polyfill</see> or <see href="https://github.com/stardazed/sd-streams">sd-streams</see> - polyfills<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ReadableStreamDefaultReader>
<ReadableStreamDefaultReaderCancel>
<summary>
The <strong><c>cancel()</c></strong> method of the<br/><see cref="ReadableStreamDefaultReader"/> interface returns a {{jsxref("Promise")}} that resolves when the stream is canceled. Calling this method signals a loss of interest in the stream by a consumer.
</summary>
<remarks>
<para>Cancel is used when you&amp;apos;ve completely finished with the stream and don&amp;apos;t need any more<br/>data from it, even if there are chunks enqueued waiting to be read. That data is lost<br/>after cancel is called, and the stream is not readable any more. To read those chunks<br/>still and not completely get rid of the stream, you&amp;apos;d use<br/><see cref="ReadableStreamDefaultController.Close"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>If the reader is active, the<br/><c>cancel()</c> method behaves the same as that for the associated stream<br/>(<see cref="ReadableStream.Cancel"/>).</para></blockquote>
<para>-<see cref="ReadableStreamDefaultReader.ReadableStreamDefaultReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams">Using readable streams</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/cancel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>, which fulfills with the value given in the <c>reason</c><br/>parameter.</returns>
</ReadableStreamDefaultReaderCancel>
<ReadableStreamDefaultReaderClosed>
<summary>
The <strong><c>closed</c></strong> read-only property of the<br/><see cref="ReadableStreamDefaultReader"/> interface returns a<br/><see cref="Promise"/> that fulfills when the stream closes, or rejects if the<br/>stream throws an error or the reader&amp;apos;s lock is released. This property enables you<br/>to write code that responds to an end to the streaming process.
</summary>
<remarks>
<para>-<see cref="ReadableStreamDefaultReader.ReadableStreamDefaultReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams">Using readable streams</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/closed"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Promise"/>.</value>
</ReadableStreamDefaultReaderClosed>
<ReadableStreamDefaultReaderRead>
<summary>
The <strong><c>read()</c></strong> method of the <see cref="ReadableStreamDefaultReader"/> interface returns a {{jsxref("Promise")}} providing access to the next chunk in the stream's internal queue.
</summary>
<remarks>
<para>-<see cref="ReadableStreamDefaultReader.ReadableStreamDefaultReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams">Using readable streams</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/read"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>, which fulfills/rejects with a result depending on the state of the stream.<br/>The different possibilities are as follows:</returns>
</ReadableStreamDefaultReaderRead>
<ReadableStreamDefaultReaderReadableStreamDefaultReader>
<summary>
The <strong><c>ReadableStreamDefaultReader()</c></strong><br/>constructor creates and returns a <c>ReadableStreamDefaultReader</c> object<br/>instance.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>You generally wouldn&amp;apos;t use this constructor manually; instead,<br/>you'd use the <see cref="ReadableStream.GetReader"/> method.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API concepts</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams">Using readable streams</see><br/>-<see cref="ReadableStream"/><br/>-<see cref="ReadableStreamDefaultController"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/ReadableStreamDefaultReader"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An instance of the <see cref="ReadableStreamDefaultReader"/> object.</returns>
</ReadableStreamDefaultReaderReadableStreamDefaultReader>
<ReadableStreamDefaultReaderReleaseLock>
<summary>
The <strong><c>releaseLock()</c></strong> method of the <see cref="ReadableStreamDefaultReader"/> interface releases the reader's lock on the stream.
</summary>
<remarks>
<para>If the associated stream is errored when the lock is released, the reader will appear errored in that same way subsequently; otherwise, the reader will appear closed.</para><para>If the reader's lock is released while it still has pending read requests then the promises returned by the reader's <see cref="ReadableStreamDefaultReader.Read"/> method are immediately rejected with a <c>TypeError</c>.<br/>Unread chunks remain in the stream&amp;apos;s internal queue and can be read later by acquiring a new reader.</para>
<para>-<see cref="ReadableStreamDefaultReader.ReadableStreamDefaultReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams">Using readable streams</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/releaseLock"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</ReadableStreamDefaultReaderReleaseLock>
</docs>