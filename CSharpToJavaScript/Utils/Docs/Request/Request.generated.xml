<docs>
<Request>
<summary>
The <strong><c>Request</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</see> represents a resource request.
</summary>
<remarks>
<para>You can create a new <c>Request</c> object using the <see cref="Request.Request"/> constructor, but you are more likely to encounter a <c>Request</c> object being returned as the result of another API operation, such as a service worker <see cref="FetchEvent.Request"/>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request"> <em>See also on MDN</em> </seealso></para>
</remarks>
</Request>
<RequestArrayBuffer>
<summary>
The <strong><c>arrayBuffer()</c></strong> method of the <see cref="Request"/> interface<br/>reads the request body and returns it as a promise that resolves with an <see cref="ArrayBuffer"/>.
</summary>
<remarks>
<para>-<see cref="Response.ArrayBuffer"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/arrayBuffer"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A promise that resolves with an <see cref="ArrayBuffer"/>.</returns>
</RequestArrayBuffer>
<RequestBlob>
<summary>
The <strong><c>blob()</c></strong> method of the <see cref="Request"/> interface<br/>reads the request body and returns it as a promise that resolves with a <see cref="Blob"/>.
</summary>
<remarks>
<para>-<see cref="Response.Blob"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/blob"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A promise that resolves with a <see cref="Blob"/>.</returns>
</RequestBlob>
<RequestBody>
<summary>
The <strong><c>body</c></strong> read-only property of the <see cref="Request"/><br/>interface contains a <see cref="ReadableStream"/> with the body contents<br/>that have been added to the request. Note that a request using the<br/><c>GET</c> or <c>HEAD</c> method cannot have a body<br/>and <c>null</c> is returned in these cases.
</summary>
<remarks>
<para>-<see cref="Request.BodyUsed"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/body"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ReadableStream"/> or <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null"><c>null</c></see>.</value>
</RequestBody>
<RequestBodyUsed>
<summary>
The <strong><c>bodyUsed</c></strong> read-only property of the<br/><see cref="Request"/> interface is a boolean value that indicates<br/>whether the request body has been read yet.
</summary>
<remarks>
<para>-<see cref="Request.Body"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/bodyUsed"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value.</value>
</RequestBodyUsed>
<RequestBytes>
<summary>
The <strong><c>bytes()</c></strong> method of the <see cref="Request"/> interface reads the request body and returns it as a promise that resolves with an {{jsxref("Uint8Array")}}.
</summary>
<remarks>
<para>-<see cref="Response.ArrayBuffer"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/bytes"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A promise that resolves with an <see cref="Uint8Array"/>.</returns>
</RequestBytes>
<RequestCache>
<summary>
The <strong><c>cache</c></strong> read-only property of the <see cref="Request"/> interface contains the cache mode of the request. It controls how the request will interact with the browser's <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/Caching">HTTP cache</see>.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/cache"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>RequestCache</c> value. The available values are:</value>
</RequestCache>
<RequestClone>
<summary>
The <strong><c>clone()</c></strong> method of the <see cref="Request"/> interface creates a copy of the current <c>Request</c> object.
</summary>
<remarks>
<para>Like the underlying <see cref="ReadableStream.Tee"/> api,<br/>the <see cref="Request.Body"/> of a cloned <c>Request</c><br/>will signal backpressure at the rate of the <strong>faster</strong> consumer of the two bodies,<br/>and unread data is enqueued internally on the slower consumed <c>body</c><br/>without any limit or backpressure.<br/>Beware when you construct a <c>Request</c> from a stream and then <c>clone</c> it.</para><para><c>clone()</c> throws a <see cref="TypeError"/> if the request body has already been used. In fact, the main reason <c>clone()</c> exists is to allow multiple uses of body objects (when they are one-use only.)</para><para>If you intend to modify the request, you may prefer the <see cref="Request"/> constructor.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/clone"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Request"/> object, which is an exact copy of the <c>Request</c> that <c>clone()</c> was called on.</returns>
</RequestClone>
<RequestCredentials>
<summary>
The <strong><c>credentials</c></strong> read-only property of the <see cref="Request"/> interface reflects the value given to the <see cref="Request.Request"/> constructor in the <see href="https://developer.mozilla.org/en-US/docs/Web/API/RequestInit#credentials"><c>credentials</c></see> option. It determines whether or not the browser sends credentials with the request, as well as whether any <strong><c>Set-Cookie</c></strong> response headers are respected.
</summary>
<remarks>
<para>Credentials are cookies, <see href="https://developer.mozilla.org/en-US/docs/Glossary/TLS">TLS</see> client certificates, or authentication headers containing a username and password.</para><para>See <see href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#including_credentials">Including credentials</see> for more details.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string with one of the following values:</value>
</RequestCredentials>
<RequestDestination>
<summary>
The <strong><c>destination</c></strong> read-only property of the <strong><see cref="Request"/></strong> interface returns a string describing the type of content being requested.
</summary>
<remarks>
<para>The string must be one of the <c>audio</c>, <c>audioworklet</c>, <c>document</c>, <c>embed</c>, <c>fencedframe</c>, <c>font</c>, <c>frame</c>, <c>iframe</c>, <c>image</c>, <c>json</c>, <c>manifest</c>, <c>object</c>, <c>paintworklet</c>, <c>report</c>, <c>script</c>, <c>sharedworker</c>, <c>speculationrules</c>, <c>style</c>, <c>track</c>, <c>video</c>, <c>worker</c> or <c>xslt</c> strings, or the empty string, which is the default value.</para><para>The <c>destination</c> is used by the <see href="https://developer.mozilla.org/en-US/docs/Glossary/user agent">user agent</see> to, for example, help determine which set of rules to follow for CORS purposes, or how to navigate any complicated code paths that affect how specific types of request get handled.</para><para>These destinations vary substantially in how they operate. Some are data receptacles, where the received data is stored for processing later. Others are script-based, in which case the received data is delivered to a script by calling it and passing the data along.<br/>Script-based destinations include {{HTMLElement("script")}} elements, as well as any of the <see cref="Worklet"/>-based destinations (including subclasses like <see cref="AudioWorklet"/>), and the <see cref="Worker"/>-based destinations, including <see cref="ServiceWorker"/> and <see cref="SharedWorker"/>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/destination"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string which indicates the type of content the request is asking for. This type is much broader than the usual document type values (such as <c>&amp;quot;document&amp;quot;</c> or <c>&amp;quot;manifest&amp;quot;</c>), and may include contextual cues such as <c>&amp;quot;image&amp;quot;</c> or <c>&amp;quot;worker&amp;quot;</c> or <c>&amp;quot;audioworklet&amp;quot;</c>.Possible values are:</value>
</RequestDestination>
<RequestFormData>
<summary>
The <strong><c>formData()</c></strong> method of the <see cref="Request"/> interface<br/>reads the request body and returns it as a promise that resolves with a <see cref="FormData"/> object.
</summary>
<remarks>
<para>-<see cref="Response.FormData"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/formData"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that resolves with a <see cref="FormData"/> object.</returns>
</RequestFormData>
<RequestHeaders>
<summary>
The <strong><c>headers</c></strong> read-only property of the<br/><see cref="Request"/> interface contains the <see cref="Headers"/> object associated<br/>with the request.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/headers"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Headers"/> object.</value>
</RequestHeaders>
<RequestIntegrity>
<summary>
The <strong><c>integrity</c></strong> read-only property of the <see cref="Request"/> interface contains the <see href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">subresource integrity</see> value of the request.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/integrity"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The value that was passed as the <c>options.integrity</c> argument when constructing the <c>Request</c>.If an integrity has not been specified, the property returns <c>&amp;apos;&amp;apos;</c>.</value>
</RequestIntegrity>
<RequestIsHistoryNavigation>
<summary>
The <strong><c>isHistoryNavigation</c></strong> read-only property of the <see cref="Request"/> interface is a boolean indicating whether the request is a history navigation.
</summary>
<remarks>
<para>A history navigation is a navigation within the browser's history, made by calling <see cref="History.Go"/>, <see cref="History.Back"/>, <see cref="History.Forward"/>, <see cref="Navigation.TraverseTo"/>, <see cref="Navigation.Back"/>, <see cref="Navigation.Forward"/>, or directly by clicking the browser's back or forward navigation button.</para>
<para>-{{domxref(&amp;quot;History API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, 1)}}<br/>-{{domxref(&amp;quot;Navigation API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, 1)}}<br/>-{{domxref(&amp;quot;Service Worker API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, 1)}}<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/isHistoryNavigation"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value.</value>
</RequestIsHistoryNavigation>
<RequestJson>
<summary>
The <strong><c>json()</c></strong> method of the <see cref="Request"/> interface<br/>reads the request body and returns it as a promise that resolves with the result of parsing the body text as <see cref="JSON"/>.
</summary>
<remarks>
<para>Note that despite the method being named <c>json()</c>, the result is not JSON but is instead the result of taking JSON as input and parsing it to produce a JavaScript object.</para>
<para>-<see cref="Response.Json"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/json"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to a JavaScript object. This object could be<br/>anything that can be represented by JSON — an object, an array, a string, a number…</returns>
</RequestJson>
<RequestKeepalive>
<summary>
The <strong><c>keepalive</c></strong> read-only property of the <see cref="Request"/> interface contains the request's <c>keepalive</c> setting (<c>true</c> or <c>false</c>), which indicates whether the browser will keep the associated request alive if the page that initiated it is unloaded before the request is complete.
</summary>
<remarks>
<para>This enables a <see cref="'Window.Fetch'"/> request to, for example, send analytics at the end of a session even if the user navigates away from or closes the page.<br/>This has some advantages over using <see cref="Navigator.SendBeacon"/> for the same purpose, including allowing you to use HTTP methods other than <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Methods/POST"><c>POST</c></see>, customize request properties, and access the server response via the fetch <see cref="Promise"/> fulfillment.<br/>It is also available in <see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">service workers</see>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/keepalive"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value indicating the <c>keepalive</c> status of the request.</value>
</RequestKeepalive>
<RequestMethod>
<summary>
The <strong><c>method</c></strong> read-only property of the<br/><see cref="Request"/> interface contains the request's method (<c>GET</c>,<br/><c>POST</c>, etc.)
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/method"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="String"/> indicating the method of the request.</value>
</RequestMethod>
<RequestMode>
<summary>
The <strong><c>mode</c></strong> read-only property of the <see cref="Request"/><br/>interface contains the mode of the request (e.g., <c>cors</c>,<br/><c>no-cors</c>, <c>same-origin</c>, or <c>navigate</c>.) This is used<br/>to determine if cross-origin requests lead to valid responses, and which properties of the response are readable.
</summary>
<remarks>
<para>To construct a request with a specific mode, pass the desired value as the {{domxref(&amp;quot;RequestInit&amp;quot;, &amp;quot;&amp;quot;, "mode")}} option to the <see cref="Request.Request"/> constructor.</para><para>Note that setting particular modes, especially <c>no-cors</c>, places restrictions on the request methods and headers that may be used, and prevents JavaScript from accessing the response headers or body. See the documentation for {{domxref(&amp;quot;RequestInit&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;mode&amp;quot;)}} for more details.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/mode"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>One of the following values:</value>
</RequestMode>
<RequestRedirect>
<summary>
The <strong><c>redirect</c></strong> read-only property of the <see cref="Request"/> interface contains the mode for how redirects are handled.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/redirect"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>RequestRedirect</c> enum value, which can be one the following strings:If not specified when the request is created, it takes the default value of <c>follow</c>.</value>
</RequestRedirect>
<RequestReferrer>
<summary>
The <strong><c>referrer</c></strong> read-only property of the<br/><see cref="Request"/> interface is set by the user agent to be the referrer of the<br/>Request. (e.g., <c>client</c>, <c>no-referrer</c>, or a URL.)
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>If <c>referrer</c>&amp;apos;s value is <c>no-referrer</c>,<br/>it returns an empty string.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/referrer"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string representing the request&amp;apos;s referrer.</value>
</RequestReferrer>
<RequestReferrerPolicy>
<summary>
The <strong><c>referrerPolicy</c></strong> read-only property of the<br/><see cref="Request"/> interface returns the referrer policy, which governs what<br/>referrer information, sent in the <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer">Referer</see> header, should be included<br/>with the request.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/referrerPolicy"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string representing the request&amp;apos;s <c>referrerPolicy</c>. For<br/>more information and possible values, see the <see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy">Referrer-Policy</see> HTTP<br/>header page.</value>
</RequestReferrerPolicy>
<RequestRequest>
<summary>
The <strong><c>Request()</c></strong> constructor creates a new<br/><see cref="Request"/> object.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/Request"> <em>See also on MDN</em> </seealso></para>
</remarks>
</RequestRequest>
<RequestSignal>
<summary>
The read-only <strong><c>signal</c></strong> property of the <see cref="Request"/> interface returns the <see cref="AbortSignal"/> associated with the request.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/signal"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="AbortSignal"/> object.</value>
</RequestSignal>
<RequestText>
<summary>
The <strong><c>text()</c></strong> method of the <see cref="Request"/> interface<br/>reads the request body and returns it as a promise that resolves with a <see cref="String"/>.<br/>The response is <strong>always</strong> decoded using UTF-8.
</summary>
<remarks>
<para>-<see cref="Response.Text"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/text"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A Promise that resolves with a <see cref="String"/>.</returns>
</RequestText>
<RequestUrl>
<summary>
The <strong><c>url</c></strong> read-only property of the <see cref="Request"/><br/>interface contains the URL of the request.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">ServiceWorker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS">HTTP access control (CORS)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Request/url"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string indicating the URL of the request.</value>
</RequestUrl>
</docs>