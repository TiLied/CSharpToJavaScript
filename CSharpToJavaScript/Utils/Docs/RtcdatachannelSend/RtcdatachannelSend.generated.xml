<docs>
<RTCDataChannelSend>
<summary>
The <strong><c>send()</c></strong> method of the<br/><see cref="RTCDataChannel"/> interface sends data across the data channel to the<br/>remote peer.<br/>This can be done any time except during the initial process of<br/>creating the underlying transport channel. Data sent before connecting is buffered if<br/>possible (or an error occurs if it&amp;apos;s not possible), and is also buffered if sent while<br/>the connection is closing or closed.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> Different browsers have different limitations on the size of the message you can<br/>send. Specifications exist to define how to automatically fragment large messages, but<br/>not all browsers implement them, and those that do have various additional<br/>restrictions. This will get less complicated over time, but for now, if you have<br/>questions, see <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_data_channels#understanding_message_size_limits">Understanding message size limits</see>.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC</see><br/>-<see cref="RTCDataChannel"/><br/>-<see cref="RTCDataChannel.ReadyState"/><br/>-<see cref="RTCDataChannel.Close_event"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/send"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</RTCDataChannelSend>
</docs>