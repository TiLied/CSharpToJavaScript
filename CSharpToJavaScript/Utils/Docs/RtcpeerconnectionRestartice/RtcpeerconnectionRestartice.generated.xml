<docs>
<RTCPeerConnectionRestartIce>
<summary>
The <strong><c>restartIce()</c></strong> method of the <see cref="RTCPeerConnection"/> interface allows a web application to request that {{Glossary("ICE")}} candidate gathering be redone on both ends of the connection.<br/>This simplifies the process by allowing the same method to be used by either the caller or the receiver to trigger an ICE restart.
</summary>
<remarks>
<para>After <c>restartIce()</c> returns, the offer returned by the next call to <see cref="RTCPeerConnection.CreateOffer"/> is automatically configured to trigger ICE restart on both the local peer (once the local peer has been set) and on the remote peer, once the offer is sent across your signaling mechanism and the remote peer has set its description as well.</para><para><c>restartIce()</c> causes the<br/><see cref="RTCPeerConnection.Negotiationneeded_event"/> event to be fired on the <c>RTCPeerConnection</c> to inform the application that it should perform negotiation using its signaling channel.</para><para>If negotiation fails to complete—either due to rollback or because incoming offers are in the process of being negotiated—the <see cref="RTCPeerConnection"/> will remember that you requested ICE restart.<br/>The next time the connection's <see cref="RTCPeerConnection.SignalingState"/> changes to <c>stable</c>, the connection will fire the <see cref="RTCPeerConnection.Negotiationneeded_event"/> event.<br/>This process continues until an ICE restart has been successfully completed.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Session_lifetime">Lifetime of a WebRTC session</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling">Signaling and video calling</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/restartIce"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</RTCPeerConnectionRestartIce>
</docs>