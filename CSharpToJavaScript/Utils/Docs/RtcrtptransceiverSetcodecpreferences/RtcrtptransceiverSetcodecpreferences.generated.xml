<docs>
<RTCRtpTransceiverSetCodecPreferences>
<summary>
The <strong><c>setCodecPreferences()</c></strong> method of the <see cref="RTCRtpTransceiver"/> interface is used to set the codecs that the transceiver allows for decoding <strong>received</strong> data, in order of decreasing preference.
</summary>
<remarks>
<para>The preferences set using this method influence what codecs are negotiated with the remote peer for encoding the data that it sends, including those used for retransmission, redundancy, and forward error correction.<br/>Codecs that are not included in the preferences list will not be part of the negotiation.<br/>Note that the preferences used by this transceiver for <strong>sending</strong> content depend on the preferences of the remote peer.</para><para>The recommended way to set codec preferences is to first get the array of codecs that are actually supported for decoding received data, then reorder them your in decreasing preference order.<br/>This ensures that the array is ordered as required, does not contain any unsupported codecs, and also that it also contains codecs that are needed for retransmission, redundancy, and forward error correction.</para><para>The specified set of codecs will be used for all future connections that include this transceiver until this method is called again.</para><para>When preparing to open an <see cref="RTCPeerConnection"/> the codecs should be set using <c>setCodecParameters()</c> <strong>before</strong> calling either <see cref="RTCPeerConnection.CreateOffer"/> or <see cref="RTCPeerConnection.CreateAnswer"/>, as these initiate the negotiation (and will use codec parameters from the {{Glossary("user agent", "user agent's")}} default configuration by default).</para><para>The codecs can be changed when you have an ongoing communication, but you need to first call <c>setCodecParameters()</c> and then kick off a new negotiation.<br/>A WebRTC application will already have code for this in the <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event"><c>negotiationneeded</c> event handler</see>.<br/>Note however that at time of writing the event is not automatically fired when you call <c>setCodecParameters()</c>, so you will have to call <c>onnegotiationneeded</c> yourself.</para><para>A guide to codecs supported by WebRTC—and each codec&amp;apos;s positive and negative characteristics—can be found in <see href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/WebRTC_codecs">Codecs used by WebRTC</see>.</para>
<para>-<see href="https://blog.mozilla.org/webrtc/cross-browser-support-for-choosing-webrtc-codecs/">setCodecPreferences is now in all browsers!</see> on blog.mozilla.org (2024)<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/WebRTC_codecs">Codecs used by WebRTC</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media">Web media technologies</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</RTCRtpTransceiverSetCodecPreferences>
</docs>