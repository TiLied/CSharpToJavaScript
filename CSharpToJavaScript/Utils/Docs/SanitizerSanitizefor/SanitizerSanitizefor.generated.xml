<docs>
<SanitizerSanitizeFor>
<summary>
The <strong><c>sanitizeFor()</c></strong> method of the <see cref="Sanitizer"/> interface is used to parse and sanitize a string of HTML for insertion into the DOM at some later point.
</summary>
<remarks>
<para>The method accepts the tag name of the eventual destination HTML element as a parameter, and returns an HTML element object (of that type) that contains the sanitized subtree as its child.<br/>This context is needed because the result of parsing an HTML string depends on where it is used.<br/>For example, <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td">td</see> elements are valid nodes when inserted into a <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">table</see> but will be skipped/ignored when parsed into a <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div">div</see>.</para><para>The subtree <strong>must</strong> be inserted into an element of the same type as the returned object (and the original <c>element</c> parameter).<br/>If the caller extracts the sanitized subtree from the object, for example by using <c>innerHTML</c>, it is their responsibility to ensure the correct context is used when it is inserted in the DOM.</para><para>The default <c>Sanitizer()</c> configuration strips out XSS-relevant input by default, including <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script">script</see> tags, custom elements, and comments.<br/>The sanitizer configuration may be customized using <see cref="Sanitizer.Sanitizer"/> constructor options.</para><blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> Use <see cref="Element.SetHTML"/> instead of this method if the target element is available for immediate update.</para></blockquote>
<para>-<see cref="Element.SetHTML"/><br/>-<see cref="'HTML Sanitizer API'"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Sanitizer/sanitizeFor"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An HTML element corresponding to the tag specified in the <c>element</c> parameter, containing the parsed and sanitized <c>input</c> string as a DOM subtree.For example, if the <c>input</c> was <c>&amp;quot;div&amp;quot;</c> then the return value would be a <see cref="HTMLDivElement"/>.</returns>
</SanitizerSanitizeFor>
</docs>