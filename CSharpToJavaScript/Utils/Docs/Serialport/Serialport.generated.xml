<docs>
<SerialPort>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <c>SerialPort</c> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Serial_API">Web Serial API</see> provides access to a serial port on the host device.
</summary>
<remarks>
<para></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort"> <em>See also on MDN</em> </seealso></para>
</remarks>
</SerialPort>
<SerialPortClose>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>SerialPort.close()</c></strong> method of the <see cref="SerialPort"/> interface returns a {{jsxref("Promise")}} that resolves when the port closes.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/close"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>.</returns>
</SerialPortClose>
<SerialPortConnected>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>connected</c></strong> read-only property of the <see cref="SerialPort"/> interface returns a boolean value that indicates whether the port is <see href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/connect_event#description">logically connected</see> to the device.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/connected"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean â€” <c>true</c> if the port is logically connected, and <c>false</c> if not.</value>
</SerialPortConnected>
<SerialPortConnect>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>connect</c></strong> event of the <see cref="SerialPort"/> interface is fired when the port connects to the device.
</summary>
<remarks>
<para>-<see cref="SerialPort.Disconnect"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/connect"> <em>See also on MDN</em> </seealso></para>
</remarks>
</SerialPortConnect>
<SerialPortDisconnect>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>disconnect</c></strong> event of the <see cref="SerialPort"/> interface is fired when the port disconnects from the device.
</summary>
<remarks>
<para>-<see cref="SerialPort.Connect"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/disconnect"> <em>See also on MDN</em> </seealso></para>
</remarks>
</SerialPortDisconnect>
<SerialPortForget>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>SerialPort.forget()</c></strong> method of the <see cref="SerialPort"/> interface returns a {{jsxref("Promise")}} that resolves when access to the serial port is revoked.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/forget"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves with <c>undefined</c> once the connection is revoked.</returns>
</SerialPortForget>
<SerialPortGetInfo>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>getInfo()</c></strong> method of the <see cref="SerialPort"/> interface returns an object containing identifying information for the device available via the port.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/getInfo"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An object containing the following properties:</returns>
</SerialPortGetInfo>
<SerialPortGetSignals>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>SerialPort.getSignals()</c></strong> method of the <see cref="SerialPort"/> interface returns a {{jsxref("Promise")}} that resolves with an object containing the current state of the port's control signals.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/getSignals"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>Returns a <see cref="Promise"/> that resolves with an object containing the following members:</returns>
</SerialPortGetSignals>
<SerialPortOpen>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>open()</c></strong> method of the <see cref="SerialPort"/> interface returns a {{jsxref("Promise")}} that resolves when the port is opened. By default the port is opened with 8 data bits, 1 stop bit and no parity checking. The <c>baudRate</c> parameter is required.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/open"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>.</returns>
</SerialPortOpen>
<SerialPortReadable>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>readable</c></strong> read-only property of the <see cref="SerialPort"/> interface returns a <see cref="ReadableStream"/> for receiving data from the device connected to the port. Chunks read from this stream are instances of {{jsxref("Uint8Array")}}. This property is non-null as long as the port is open and has not encountered a fatal error.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/readable"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ReadableStream"/>.</value>
</SerialPortReadable>
<SerialPortSetSignals>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>setSignals()</c></strong> method of the <see cref="SerialPort"/> interface sets control signals on the port and returns a {{jsxref("Promise")}} that resolves when they are set.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/setSignals"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>.</returns>
</SerialPortSetSignals>
<SerialPortWritable>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>writable</c></strong> read-only property of the <see cref="SerialPort"/> interface returns a <see cref="WritableStream"/> for sending data to the device connected to the port. Chunks written to this stream must be instances of {{jsxref("ArrayBuffer")}}, {{jsxref("TypedArray")}}, or {{jsxref("DataView")}}. This property is non-null as long as the port is open and has not encountered a fatal error.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/writable"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="WritableStream"/></value>
</SerialPortWritable>
</docs>