<docs>
<SetInterval>
<summary>
The <strong><c>setInterval()</c></strong> method,<br/>offered on the <see cref="Window"/> and <see cref="Worker"/> interfaces, repeatedly<br/>calls a function or executes a code snippet, with a fixed time delay between each<br/>call.
</summary>
<remarks>
<para>This method returns an interval ID which uniquely identifies the interval, so you<br/>can remove it later by calling {{domxref(&amp;quot;clearInterval&amp;quot;,<br/>&amp;quot;clearInterval()&amp;quot;)}}.</para>
<para>-<see href="https://github.com/zloirock/core-js#settimeout-and-setinterval">Polyfill of <c>setInterval</c> which allows passing arguments to the callback in <c>core-js</c></see><br/>-<see cref="SetTimeout"/><br/>-<see cref="ClearTimeout"/><br/>-<see cref="ClearInterval"/><br/>-<see cref="Window.RequestAnimationFrame"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/setInterval"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>The returned <c>intervalID</c> is a numeric, non-zero value which identifies the<br/>timer created by the call to <c>setInterval()</c>; this value can be passed to<br/><see cref="ClearInterval"/> to cancel the interval.It may be helpful to be aware that <c>setInterval()</c> and<br/><see cref="SetTimeout"/> share the same pool<br/>of IDs, and that <c>clearInterval()</c> and<br/><see cref="ClearTimeout"/> can technically<br/>be used interchangeably. For clarity, however, you should try to always match them to<br/>avoid confusion when maintaining your code.<blockquote class="NOTE"><h5>NOTE</h5><strong>Note:</strong> The <c>delay</c> argument is converted to a<br/>signed 32-bit integer. This effectively limits <c>delay</c> to 2147483647 ms,<br/>since it&amp;apos;s specified as a signed integer in the IDL.</blockquote></returns>
</SetInterval>
</docs>