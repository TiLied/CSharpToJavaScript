<docs>
<VirtualKeyboard_API>
<summary>
The VirtualKeyboard API provides developers control over the layout of their applications when the on-screen virtual keyboard appears and disappears on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.
</summary>
<remarks>
<para>Web browsers usually deal with virtual keyboards on their own, by adjusting the viewport height and scrolling to input fields when focused.</para><para>The figure below illustrates the difference in viewport height and scroll position on a web page when the device has its on-screen virtual keyboard hidden, and when it is shown.</para><para><see href="https://developer.mozilla.orgviewport-height.png">Two devices, one without a virtual keyboard, showing that the webpage can use most of the device&amp;apos;s vertical space, and one with a virtual keyboard, showing that the webpage can only be displayed in the remaining space</see></para><para>More complex applications or specific devices such as multi-screen mobile phones may require more control of the layout when the virtual keyboard appears.</para><para>The figure below shows what happens on a dual-screen device when the virtual keyboard appears on just one of the two screens. The viewport becomes smaller on both screens to accommodate for the virtual keyboard, leaving wasted space on the screen where the virtual keyboard is not displayed.</para><para><see href="https://developer.mozilla.orgdual-screen.png">A dual-screen device, with its virtual keyboard displayed on one screen, showing that the webpage can only use the vertical space that remains after the keyboard was displayed, even if that leaves empty space on the other screen</see></para><para>The VirtualKeyboard API can be used to opt out of the way the browser automatically handles the virtual keyboard, and take full control of it instead. With the VirtualKeyboard API, the keyboard still appears and disappears as necessary when form controls are focused, but the viewport does not change, and you can use JavaScript and CSS to adapt your layout.</para>
<para>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard_API"> <em>See also on MDN</em> </seealso></para>
</remarks>
</VirtualKeyboard_API>
</docs>