<docs>
<WebTransport>
<summary>
The <strong><c>WebTransport</c></strong> interface of the {{domxref(&amp;quot;WebTransport API&amp;quot;, &amp;quot;WebTransport API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} provides functionality to enable a user agent to connect to an HTTP/3 server, initiate reliable and unreliable transport in either or both directions, and close the connection once it is no longer needed.
</summary>
<remarks>
<para></para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport"> <em>See also on MDN</em> </seealso></para>
</remarks>
</WebTransport>
<WebTransportClose>
<summary>
The <strong><c>close()</c></strong> method of the <see cref="WebTransport"/> interface closes an ongoing WebTransport session.
</summary>
<remarks>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/close"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns><c>undefined</c>.</returns>
</WebTransportClose>
<WebTransportClosed>
<summary>
The <strong><c>closed</c></strong> read-only property of the <see cref="WebTransport"/> interface returns a promise that resolves when the transport is closed.
</summary>
<remarks>
<para>This promise is created when the <c>WebTransport</c> object is created and is resolved when the transport is closed in any way, such as by calling the <see cref="WebTransport.Close"/> method, when the connection failed, or when the connection is closed by the server. Accessing or awaiting this promise does not trigger any action; it only allows actions to be taken when the transport is closed, similar to listening to an event.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/closed"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Promise"/> that resolves to an object containing the following properties:Or, in the case of an unexpected closure, such as network failure, the promise rejects with an error.</value>
</WebTransportClosed>
<WebTransportCongestionControl>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>congestionControl</c></strong> read-only property of the <see cref="WebTransport"/> interface indicates the application's preference for either high throughput or low-latency when sending data.
</summary>
<remarks>
<para>The value is set in the <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/WebTransport#congestioncontrol"><c>WebTransport()</c> constructor options</see>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/congestionControl"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string with one of the following values:</value>
</WebTransportCongestionControl>
<WebTransportCreateBidirectionalStream>
<summary>
The <strong><c>createBidirectionalStream()</c></strong> method of the <see cref="WebTransport"/> interface asynchronously opens and returns a bidirectional stream.
</summary>
<remarks>
<para>The method returns a {{jsxref("Promise")}} that resolves to a <see cref="WebTransportBidirectionalStream"/> object, which has <c>readable</c> and <c>writable</c> properties that can be used to reliably read from and write to the server.<br/>&amp;quot;Reliable&amp;quot; means that transmission and order of data are guaranteed.<br/>This provides slower delivery (albeit faster than with WebSockets) than <see cref="WebTransport.Datagrams"/>, but is needed in situations where reliability and ordering are important, like chat applications.</para><para>The relative order in which queued bytes are emptied from created streams can be specified using the <c>sendOrder</c> option.<br/>If set, queued bytes in streams with a higher send order are guaranteed to be sent before queued bytes for streams with a lower send order.<br/>If the order number is not set then the order in which bytes are sent is implementation dependent.<br/>Note however that even though bytes from higher send-order streams are sent first, they may not arrive first.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-<see cref="WebTransport.CreateUnidirectionalStream"/><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/createBidirectionalStream"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that resolves to a <see cref="WebTransportBidirectionalStream"/> object.</returns>
</WebTransportCreateBidirectionalStream>
<WebTransportCreateUnidirectionalStream>
<summary>
The <strong><c>createUnidirectionalStream()</c></strong> method of the <see cref="WebTransport"/> interface asynchronously opens a unidirectional stream.
</summary>
<remarks>
<para>The method returns a {{jsxref("Promise")}} that resolves to a <see cref="WritableStream"/> object, which can be used to reliably write data to the server.</para><para>"Reliable" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than <see cref="WebTransport.Datagrams"/>, but is needed in situations where reliability and ordering are important, like chat applications.</para><para>The relative order in which queued bytes are emptied from created streams can be specified using the <c>sendOrder</c> option.<br/>If set, queued bytes in streams with a higher send order are guaranteed to be sent before queued bytes for streams with a lower send order.<br/>If the order number is not set then the order in which bytes are sent is implementation dependent.<br/>Note however that even though bytes from higher send-order streams are sent first, they may not arrive first.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-<see cref="WebTransport.CreateBidirectionalStream"/><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/createUnidirectionalStream"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to a <c>WebTransportSendStream</c> object (this is a <see cref="WritableStream"/>).</returns>
</WebTransportCreateUnidirectionalStream>
<WebTransportDatagrams>
<summary>
The <strong><c>datagrams</c></strong> read-only property of the <see cref="WebTransport"/> interface returns a <see cref="WebTransportDatagramDuplexStream"/> instance that can be used to send and receive datagrams â€” unreliable data transmission.
</summary>
<remarks>
<para>&amp;quot;Unreliable&amp;quot; means that transmission of data is not guaranteed, nor is arrival in a specific order. This is fine in some situations and provides very fast delivery. For example, you might want to transmit regular game state updates where each message supersedes the last one that arrives, and order is not important.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/datagrams"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="WebTransportDatagramDuplexStream"/> object.</value>
</WebTransportDatagrams>
<WebTransportGetStats>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>getStats()</c></strong> method of the <see cref="WebTransport"/> interface asynchronously returns an object containing HTTP/3 connection statistics.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/getStats"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to a object containing HTTP/3 connection statistics.<br/>The returned object may have the following properties/statistics:</returns>
</WebTransportGetStats>
<WebTransportIncomingBidirectionalStreams>
<summary>
The <strong><c>incomingBidirectionalStreams</c></strong> read-only property of the <see cref="WebTransport"/> interface represents one or more bidirectional streams opened by the server. Returns a <see cref="ReadableStream"/> of <see cref="WebTransportBidirectionalStream"/> objects. Each one can be used to reliably read data from the server and write data back to it.
</summary>
<remarks>
<para>"Reliable" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than <see cref="WebTransport.Datagrams"/>, but is needed in situations where reliability and ordering are important, like chat applications.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ReadableStream"/> of <see cref="WebTransportBidirectionalStream"/> objects.</value>
</WebTransportIncomingBidirectionalStreams>
<WebTransportIncomingUnidirectionalStreams>
<summary>
The <strong><c>incomingUnidirectionalStreams</c></strong> read-only property of the <see cref="WebTransport"/> interface represents one or more unidirectional streams opened by the server. Returns a <see cref="ReadableStream"/> of <see cref="WebTransportReceiveStream"/> objects. Each one can be used to reliably read data from the server.
</summary>
<remarks>
<para>"Reliable" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than <see cref="WebTransport.Datagrams"/>, but is needed in situations where reliability and ordering are important, like chat applications.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/incomingUnidirectionalStreams"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ReadableStream"/> of <see cref="WebTransportReceiveStream"/> objects.</value>
</WebTransportIncomingUnidirectionalStreams>
<WebTransportReady>
<summary>
The <strong><c>ready</c></strong> read-only property of the <see cref="WebTransport"/> interface returns a promise that resolves when the transport is ready to use.
</summary>
<remarks>
<para>This promise is created when the <c>WebTransport</c> object is created and is resolved when a connection is established. Accessing or awaiting this promise does not trigger any action; it only allows actions to be taken when the transport is ready, similar to listening to an event.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/ready"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Promise"/> that resolves to <c>undefined</c>.</value>
</WebTransportReady>
<WebTransportReliability>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>reliability</c></strong> read-only property of the <see cref="WebTransport"/> interface indicates whether the connection supports reliable transports only, or whether it also supports unreliable transports (such as UDP).
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/reliability"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string with one of the following values:</value>
</WebTransportReliability>
<WebTransportWebTransport>
<summary>
The <strong><c>WebTransport()</c></strong> constructor creates a new <see cref="WebTransport"/> object instance.
</summary>
<remarks>
<para>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/webtransport">Using WebTransport</see><br/>-{{domxref(&amp;quot;WebSockets API&amp;quot;, &amp;quot;WebSockets API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-{{domxref(&amp;quot;Streams API&amp;quot;, &amp;quot;Streams API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/">WebTransport over HTTP/3</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/WebTransport/WebTransport"> <em>See also on MDN</em> </seealso></para>
</remarks>
</WebTransportWebTransport>
</docs>