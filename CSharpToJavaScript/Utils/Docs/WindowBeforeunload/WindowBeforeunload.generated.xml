<docs>
<WindowBeforeunload_event>
<summary>
The <strong><c>beforeunload</c></strong> event is fired when the window, the document and its resources are about to be unloaded. The document is still visible and the event is still cancelable at this point.
</summary>
<remarks>
<para>This event enables a web page to trigger a confirmation dialog asking the user if they really want to leave the page. If the user confirms, the browser navigates to the new page, otherwise it cancels the navigation.</para><para>According to the specification, to show the confirmation dialog an event handler should call <see cref="Event.PreventDefault"/> on the event.</para><para>The HTML specification states that calls to <see cref="Window.Alert"/>, <see cref="Window.Confirm"/>, and <see cref="Window.Prompt"/> methods may be ignored during this event. See the <see href="https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#user-prompts">HTML specification</see> for more details.</para>
<para>-Related events: <see cref="Window/DOMContentLoaded_event"/>, <see cref="Document/readystatechange_event"/>, <see cref="Window/load_event"/>, <see cref="Window/unload_event"/><br/>-<see href="https://html.spec.whatwg.org/multipage/browsing-the-web.html#prompt-to-unload-a-document">Unloading Documents â€” Prompt to unload a document</see><br/>-<see href="https://developer.chrome.com/blog/chrome-51-deprecations/#remove-custom-messages-in-onbeforeunload-dialogs">Remove Custom Messages in onbeforeload Dialogs after Chrome 51</see><br/>-<see href="https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/">Don&amp;apos;t lose user and app state, use Page Visibility</see> explains in detail why you should use <c>visibilitychange</c>, not <c>beforeunload</c>/<c>unload</c>.<br/>-<see href="https://developer.chrome.com/blog/page-lifecycle-api/#developer-recommendations-for-each-state">Page Lifecycle API</see> gives best-practices guidance on handling page lifecycle behavior in your web applications.<br/>-<see href="https://github.com/GoogleChromeLabs/page-lifecycle">PageLifecycle.js</see>: a JavaScript library that deals with cross-browser inconsistencies in page lifecycle behavior.<br/>-<see href="https://web.dev/bfcache/">Back/forward cache</see> explains what the back/forward cache is, and its implications for various page lifecycle events.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event"> <em>See also on MDN</em> </seealso></para>
</remarks>
</WindowBeforeunload_event>
</docs>