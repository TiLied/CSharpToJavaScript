<docs>
<WindowOpener>
<summary>
The <see cref="Window"/> interface's<br/><strong><c>opener</c></strong> property returns a reference to the window that<br/>opened the window, either with <see cref="Window.Open"/>, or by navigating<br/>a link with a <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target"><c>target</c></see> attribute.
</summary>
<remarks>
<para>In other words, if window <c>A</c> opens window <c>B</c>,<br/><c>B.opener</c> returns <c>A</c>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/Window/opener"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Window"/>-like object referring to the window that opened the current<br/>window (using <see cref="Window.Open"/>, or by a link with <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target"><c>target</c></see> attribute set). If this window was not opened by being linked to or created by<br/>another, returns <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null"><c>null</c></see>.If the opener is not on the same origin as the current page, functionality of the<br/>opener object is limited. For example, variables and functions on the window object are<br/>not accessible. However, navigation of the opener window is possible, which means that<br/>the opened page can open a URL in the original tab or window. In some cases, this makes<br/>phishing attacks possible, where a trusted page that is opened in the original window is<br/>replaced by a phishing page by the newly opened page.In the following cases, the browser does not populate <c>window.opener</c>, but<br/>leaves it <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null"><c>null</c></see>:</value>
</WindowOpener>
</docs>