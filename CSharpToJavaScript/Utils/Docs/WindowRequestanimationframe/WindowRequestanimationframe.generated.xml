<docs>
<WindowRequestAnimationFrame>
<summary>
The <strong><c>window.requestAnimationFrame()</c></strong> method tells the<br/>browser that you wish to perform an animation and requests that the browser calls a<br/>specified function to update an animation right before the next repaint. The method takes a<br/>callback as an argument to be invoked before the repaint.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para><strong>Note:</strong> Your callback routine must itself call<br/><c>requestAnimationFrame()</c> again if you want to animate another frame at the<br/>next repaint. <c>requestAnimationFrame()</c> is 1 shot.</para></blockquote><para>You should call this method whenever you&amp;apos;re ready to update your animation onscreen.<br/>This will request that your animation function be called before the browser performs the<br/>next repaint. The number of callbacks is usually 60 times per second, but will generally<br/>match the display refresh rate in most web browsers as per W3C recommendation.<br/><c>requestAnimationFrame()</c> calls are paused in most browsers when running in<br/>background tabs or hidden <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see>s in order to improve performance<br/>and battery life.</para><para>The callback method is passed a single argument, a <see cref="DOMHighResTimeStamp"/>,<br/>which indicates the current time (based on the number of milliseconds since <see href="https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#the_time_origin">time origin</see>). When<br/>multiple callbacks queued by <c>requestAnimationFrame()</c> begin to fire in a<br/>single frame, each receives the same timestamp even though time has passed during the<br/>computation of every previous callback&amp;apos;s workload (in the code example below we only<br/>animate the frame when the timestamp changes, i.e. on the first callback). This<br/>timestamp is a decimal number, in milliseconds, but with a minimal precision of 1ms<br/>(1000 µs).</para><blockquote class="WARNING"><h5>WARNING</h5><para><strong>Warning:</strong> Be sure to always use the first argument (or some other method for getting the<br/>current time) to calculate how much the animation will progress in a frame,<br/><strong>otherwise the animation will run faster on high refresh rate screens</strong>.<br/>Check the example below for a way to do this.</para></blockquote>
<para>-<see cref="Window.CancelAnimationFrame"/><br/>-<see cref="OffscreenCanvas"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope">DedicatedWorkerGlobalScope</see><br/>-<see href="https://robert.ocallahan.org/2010/08/mozrequestanimationframe-frame-rate_17.html">mozRequestAnimationFrame</see> – Blog post<br/>-<see href="https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/">requestAnimationFrame for smart animating</see> - Blog post<br/>-<see href="https://hacks.mozilla.org/2011/08/animating-with-javascript-from-setinterval-to-requestanimationframe/">Animating with JavaScript: from setInterval to requestAnimationFrame</see> - Blog post<br/>-<see href="https://www.testufo.com/#test=animation-time-graph">TestUFO: Test your web browser for requestAnimationFrame() Timing Deviations</see><br/>-Paul Irish: <see href="https://developer.chrome.com/blog/requestanimationframe-api-now-with-sub-millisecond-precision/">requestAnimationFrame API: now with sub-millisecond precision</see><br/>-<see href="https://github.com/behnammodi/polyfill/blob/master/window.polyfill.js">A polyfill</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <c>long</c> integer value, the request id, that uniquely identifies the entry<br/>in the callback list. This is a non-zero value, but you may not make any other<br/>assumptions about its value. You can pass this value to<br/><see cref="Window.CancelAnimationFrame"/> to cancel the refresh callback request.</returns>
</WindowRequestAnimationFrame>
</docs>