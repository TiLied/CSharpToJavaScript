<docs>
<AuthenticatorAttestationResponse>
<summary>
The <strong><c>AuthenticatorAttestationResponse</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API">Web Authentication API</see> is the result of a WebAuthn credential registration. It contains information about the credential that the server needs to perform WebAuthn assertions, such as its credential ID and public key.
</summary>
<remarks>
<para>An <c>AuthenticatorAttestationResponse</c> object instance is available in the <see cref="PublicKeyCredential.Response"/> property of a <see cref="PublicKeyCredential"/> object returned by a successful <see cref="CredentialsContainer.Create"/> call.</para><para>This interface inherits from <see cref="AuthenticatorResponse"/>.</para><para></para><blockquote class="NOTE"><h5>NOTE</h5><para>This interface is restricted to top-level contexts. Use of its features from within an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see> element will not have any effect.</para></blockquote>
<para>-<see cref="AuthenticatorAssertionResponse"/>: the interface for the type of response given when retrieving an existing credential<br/>-<see cref="AuthenticatorResponse"/>: the parent interface<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse"> <em>See also on MDN</em> </seealso></para>
</remarks>
</AuthenticatorAttestationResponse>
<AuthenticatorAttestationResponseGetTransports>
<summary>
The <strong><c>getTransports()</c></strong> method of the <see cref="AuthenticatorAttestationResponse"/> interface returns an array of strings describing the different transports which may be used by the authenticator.
</summary>
<remarks>
<para>Such transports may be USB, NFC, BLE, internal (applicable when the authenticator is not removable from the device), or a hybrid approach. Sites should not interpret this array but instead store it along with the rest of the credential information. In a subsequent <see cref="CredentialsContainer.Get"/> call, the <c>transports</c> value(s) specified inside <c>publicKey.allowCredentials</c> should be set to the stored array value. This provides a hint to the browser as to which types of authenticators to try when making an assertion for this credential.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getTransports"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="Array"/> of strings representing the different transports supported by the authenticator, in lexicographical order.<br/>Values may include:</returns>
</AuthenticatorAttestationResponseGetTransports>
<AuthenticatorAttestationResponseAttestationObject>
<summary>
The <strong><c>attestationObject</c></strong> property of the<br/><see cref="AuthenticatorAttestationResponse"/> interface returns an<br/><see cref="ArrayBuffer"/> containing the new public key, as well as signature over the<br/>entire <c>attestationObject</c> with a private key that is stored in the<br/>authenticator when it is manufactured.
</summary>
<remarks>
<para>As part of the <see cref="CredentialsContainer.Create"/> call, an authenticator will<br/>create a new key pair as well as an <c>attestationObject</c> for that key pair. The public key<br/>that corresponds to the private key that has created the attestation signature is well<br/>known; however, there are various well known attestation public key chains for different<br/>ecosystems (for example, Android or TPM attestations).</para>
<para>-<see cref="CredentialsContainer.Create"/>: the method used to create a statement with<br/>a cryptographic <c>challenge</c> which signature by the authenticator is contained in <c>attStmt</c>,<br/>with the specified <c>attestation</c> transport option.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/attestationObject"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>After decoding the <see href="https://datatracker.ietf.org/doc/html/rfc8949">CBOR</see> encoded<br/><c>ArrayBuffer</c>, the resulting JavaScript object will contain the following<br/>properties:</value>
</AuthenticatorAttestationResponseAttestationObject>
<AuthenticatorAttestationResponseGetPublicKey>
<summary>
The <strong><c>getPublicKey()</c></strong> method of the <see cref="AuthenticatorAttestationResponse"/> interface returns an {{jsxref("ArrayBuffer")}} containing the DER <c>SubjectPublicKeyInfo</c> of the new credential (see <see href="https://www.rfc-editor.org/rfc/rfc5280#section-4.1.2.7">Subject Public Key Info</see>), or <c>null</c> if this is not available.
</summary>
<remarks>
<para>This is a convenience function, created to allow easy access to the public key. This key will need to be stored in order to verify future authentication operations (i.e., using <see cref="CredentialsContainer.Get"/>).</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getPublicKey"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="ArrayBuffer"/> containing the DER <c>SubjectPublicKeyInfo</c> of the new credential (see <see href="https://www.rfc-editor.org/rfc/rfc5280#section-4.1.2.7">Subject Public Key Info</see>), or <c>null</c> if this is not available.</returns>
</AuthenticatorAttestationResponseGetPublicKey>
<AuthenticatorAttestationResponseGetPublicKeyAlgorithm>
<summary>
The <strong><c>getPublicKeyAlgorithm()</c></strong> method of the <see cref="AuthenticatorAttestationResponse"/> interface returns a number that is equal to a <see href="https://www.iana.org/assignments/cose/cose.xhtml#algorithms">COSE Algorithm Identifier</see>, representing the cryptographic algorithm used for the new credential.
</summary>
<remarks>
<para>This is a convenience function created to allow easy access to the algorithm type. This information will need to be stored in order to verify future authentication operations (i.e., using <see cref="CredentialsContainer.Get"/>).</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getPublicKeyAlgorithm"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A number that is equal to a <see href="https://www.iana.org/assignments/cose/cose.xhtml#algorithms">COSE Algorithm Identifier</see>, representing the cryptographic algorithm used for the new credential.</returns>
</AuthenticatorAttestationResponseGetPublicKeyAlgorithm>
<AuthenticatorAttestationResponseGetAuthenticatorData>
<summary>
The <strong><c>getAuthenticatorData()</c></strong> method of the <see cref="AuthenticatorAttestationResponse"/> interface returns an {{jsxref("ArrayBuffer")}} containing the authenticator data contained within the <see cref="AuthenticatorAttestationResponse.AttestationObject"/> property.
</summary>
<remarks>
<para>This is a convenience function, created to allow easy access to the authenticator data without having to write extra parsing code to extract it from the <c>attestationObject</c>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getAuthenticatorData"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="ArrayBuffer"/> with a <see cref="ArrayBufferByteLength"/> of at least 37 bytes, which contains the data structure explained in <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Authenticator_data">Authenticator data</see>.This will be equivalent to the authenticator data contained within the <see cref="AuthenticatorAttestationResponse.AttestationObject"/> property.</returns>
</AuthenticatorAttestationResponseGetAuthenticatorData>
</docs>