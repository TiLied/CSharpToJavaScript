<docs>
<CredentialsContainer>
<summary>
The <strong><c>CredentialsContainer</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API">Credential Management API</see> exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from <see cref="'Navigator.Credentials'"/>.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CredentialsContainer>
<CredentialsContainerGet>
<summary>
The <strong><c>get()</c></strong> method of the <see cref="CredentialsContainer"/> interface returns a {{jsxref("Promise")}} that fulfills with a single {{glossary("credential")}}, which can then be used to authenticate a user to a website.
</summary>
<remarks>
<para>The method accepts a single optional <c>options</c> argument, which may include:</para><para>The API always fulfills with a single credential or <c>null</c>. If multiple credentials are available and user mediation is allowed, then the browser will ask the user to select a single credential.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that resolves with one of the following subclasses of <see cref="Credential"/>:If <see href="https://developer.mozilla.org#mediation">conditional mediation</see> was specified in the <c>get()</c> call, the browser UI dialog is shown and the promise remains pending until the user picks an account to sign-in with from available autofill suggestions:If a single credential cannot be unambiguously obtained, the promise resolves with <c>null</c>.</returns>
</CredentialsContainerGet>
<CredentialsContainerCreate>
<summary>
The <strong><c>create()</c></strong> method of the <see cref="CredentialsContainer"/> interface creates a new {{glossary("credential")}}, which can then be stored and later retrieved using the <see cref="CredentialsContainer.Get"/> method. The retrieved credential can then be used by a website to authenticate a user.
</summary>
<remarks>
<para>This method supports three different types of credential:</para><para>Note that the <see href="https://developer.mozilla.org/en-US/docs/Web/API/FedCM_API">Federated Credential Management API (FedCM)</see> supersedes the federated credential type.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves with one of the following:If no credential object can be created, the promise resolves with <c>null</c>.</returns>
</CredentialsContainerCreate>
<CredentialsContainerStore>
<summary>
The <strong><c>store()</c></strong> method of the<br/><see cref="CredentialsContainer"/> stores a set of credentials for the user inside a<br/><see cref="Credential"/> instance, returning this in a {{jsxref("Promise")}}.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>This method is restricted to top-level contexts. Calls to it within an<br/><c>&amp;lt;iframe&amp;gt;</c> element will resolve without effect.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/store"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to <c>undefined</c>.</returns>
</CredentialsContainerStore>
<CredentialsContainerPreventSilentAccess>
<summary>
The <strong><c>preventSilentAccess()</c></strong> method of the <see cref="CredentialsContainer"/> interface sets a flag that specifies whether automatic log in is allowed for future visits to the current origin, then returns a {{jsxref("Promise")}} that resolves to <c>undefined</c>.<br/>For example, you might call this, after a user signs out of a website to ensure that they aren&amp;apos;t automatically signed in on the next site visit.<br/>Mediation varies by origin, and is an added check point of browser stored credentials, informing a user of an account login status. This method is typically called after a user signs out of a website, ensuring this user&amp;apos;s login information is not automatically passed on the next site visit.
</summary>
<remarks>
<para>When using a <see cref="PublicKeyCredential"/>, this method generally has no effect; such authenticators typically require user interaction. However, it <strong>is possible</strong> that certain authenticators may be excluded, which could otherwise have operated silently.</para><para>Earlier versions of the spec called this method <c>requireUserMediation()</c>.<br/>The <see href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer#browser_compatibility">Browser compatibility</see> section has support details.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/preventSilentAccess"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to <c>undefined</c>.</returns>
</CredentialsContainerPreventSilentAccess>
</docs>