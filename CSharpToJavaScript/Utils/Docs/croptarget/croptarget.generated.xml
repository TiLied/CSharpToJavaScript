<docs>
<CropTarget>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>CropTarget</c></strong> interface of the {{domxref(&amp;quot;Screen Capture API&amp;quot;, &amp;quot;Screen Capture API&amp;quot;, &amp;quot;&amp;quot;, "nocode")}} provides a static method, <see cref="CropTarget.FromElement"/>, which returns a <c>CropTarget</c> instance that can be used to crop a captured video track to the area in which a specified element is rendered.
</summary>
<remarks>
<para></para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Element_Region_Capture">Using the Element Capture and Region Capture APIs</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CropTarget"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CropTarget>
<CropTargetFromElement>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>fromElement()</c></strong> static method of the <see cref="CropTarget"/> interface returns a <c>CropTarget</c> instance that can be used to crop a captured video track to the area in which a specified element is rendered.
</summary>
<remarks>
<para>Because the Region Capture API crops to an area of the current browser tab rather than capturing a specific element, any content drawn on top of the cropped area will be shown in the capture.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API">Screen Capture API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Element_Region_Capture">Using the Element Capture and Region Capture APIs</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CropTarget/fromElement"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that resolves to a <see cref="CropTarget"/> object instance, which can then be passed to <see cref="BrowserCaptureMediaStreamTrack.CropTo"/> to crop the video captured in the track to just the area the specified DOM element is rendered in.<c>CropTarget</c> objects are serializable. They can be passed to another document using mechanisms such as <see cref="Window.PostMessage"/>.</returns>
</CropTargetFromElement>
</docs>