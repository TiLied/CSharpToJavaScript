<docs>
<CSSTransformComponent>
<summary>
The <strong><c>CSSTransformComponent</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model">CSS Typed Object Model API</see> is part of the <see cref="'CSSTransformValue'"/> interface.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSTransformComponent"> <em>See also on MDN</em> </seealso></para>
</remarks>
</CSSTransformComponent>
<CSSTransformComponentToMatrix>
<summary>
The <strong><c>toMatrix()</c></strong> method of the<br/><see cref="CSSTransformComponent"/> interface returns a <see cref="'DOMMatrix'"/><br/>object.
</summary>
<remarks>
<para>All transform functions can be represented mathematically as a 4x4 transformation matrix.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The <c>is2D</c> property affects what transform, and therefore type of matrix that will be returned. CSS 2D and 3D transforms are different for legacy reasons. A brief explanation of 2D vs. 3D transforms can be found in <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_transforms/Using_CSS_transforms">Using CSS transforms</see>.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSTransformComponent/toMatrix"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="'DOMMatrix'"/> object</returns>
</CSSTransformComponentToMatrix>
<CSSTransformComponentToString>
<summary>
The <strong><c>toString()</c></strong> method of the <see cref="CSSTransformComponent"/> interface is a {{Glossary("stringifier")}} returning a <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_transforms">CSS Transforms</see> function.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSTransformComponent/toString"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A string in the form of a CSS <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function">transform function</see>.This will use the value of <c>is2D</c> to return either a 2D or 3D transform. For example if the component represents <see cref="CSSRotate"/> and <c>is2D</c> is false then the string returned will be in the form of the CSS transformation <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate3d"><c>rotate3D()</c></see> function. If true the string returned will be in the form of the 2-dimensional <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate"><c>rotate3D()</c></see> function.</returns>
</CSSTransformComponentToString>
<CSSTransformComponentIs2D>
<summary>
The <strong><c>is2D</c></strong> read-only property of the <see cref="CSSTransformComponent"/> interface indicates where the transform is 2D or 3D.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/CSSTransformComponent/is2D"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean. True indicating the transform is a 2D transform, false if it is a 3D<br/>transform.</value>
</CSSTransformComponentIs2D>
</docs>