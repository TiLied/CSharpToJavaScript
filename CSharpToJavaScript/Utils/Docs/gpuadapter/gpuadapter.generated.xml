<docs>
<GPUAdapter>
<summary>
The <strong><c>GPUAdapter</c></strong> interface of the {{domxref(&amp;quot;WebGPU API&amp;quot;, &amp;quot;WebGPU API&amp;quot;, &amp;quot;&amp;quot;, "nocode")}} represents a GPU adapter. From this you can request a <see cref="GPUDevice"/>, adapter info, features, and limits.
</summary>
<remarks>
<para>A <c>GPUAdapter</c> object is requested using the <see cref="GPU.RequestAdapter"/> method.</para><para></para>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter"> <em>See also on MDN</em> </seealso></para>
</remarks>
</GPUAdapter>
<GPUAdapterFeatures>
<summary>
The <strong><c>features</c></strong> read-only property of the<br/><see cref="GPUAdapter"/> interface returns a <see cref="GPUSupportedFeatures"/> object that describes additional functionality supported by the adapter.
</summary>
<remarks>
<para>You should note that not all features will be available to WebGPU in all browsers that support it, even if the features are supported by the underlying hardware. This could be due to constraints in the underlying system, browser, or adapter. For example:</para><para>If you are hoping to take advantage of a specific additional feature in a WebGPU app, thorough testing is advised.</para>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/features"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="GPUSupportedFeatures"/> object instance. This is a <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">setlike</see> object.</value>
</GPUAdapterFeatures>
<GPUAdapterInfo>
<summary>
The <strong><c>info</c></strong> read-only property of the<br/><see cref="GPUAdapter"/> interface returns a <see cref="GPUAdapterInfo"/> object containing identifying information about the adapter.
</summary>
<remarks>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/info"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="GPUAdapterInfo"/> object instance.</value>
</GPUAdapterInfo>
<GPUAdapterLimits>
<summary>
The <strong><c>limits</c></strong> read-only property of the<br/><see cref="GPUAdapter"/> interface returns a <see cref="GPUSupportedLimits"/> object that describes the limits supported by the adapter.
</summary>
<remarks>
<para>You should note that, rather than reporting the exact limits of each GPU, browsers will likely report different tier values of different limits to reduce the unique information available to drive-by fingerprinting. For example, the tiers of a certain limit might be 2048, 8192, and 32768. If your GPU&amp;apos;s actual limit is 16384, the browser will still report 8192.</para><para>Given that different browsers will handle this differently and the tier values may change over time, it is hard to provide an accurate account of what limit values to expect â€” thorough testing is advised.</para>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/limits"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="GPUSupportedLimits"/> object instance.</value>
</GPUAdapterLimits>
<GPUAdapterRequestAdapterInfo>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>requestAdapterInfo()</c></strong> method of the<br/><see cref="GPUAdapter"/> interface returns a {{jsxref("Promise")}} that fulfills with a <see cref="GPUAdapterInfo"/> object containing identifying information about an adapter.
</summary>
<remarks>
<para><c>requestAdapterInfo()</c> has been removed from the WebGPU specification. Use <see cref="GPUAdapter.Info"/> to access adapter information instead.</para>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/requestAdapterInfo"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that fulfills with a <see cref="GPUAdapterInfo"/> object instance.</returns>
</GPUAdapterRequestAdapterInfo>
<GPUAdapterIsFallbackAdapter>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>isFallbackAdapter</c></strong> read-only property of the<br/><see cref="GPUAdapter"/> interface returns <c>true</c> if the adapter is a <see href="https://developer.mozilla.org/en-US/docs/Web/API/GPU/requestAdapter#fallback_adapters">fallback adapter</see>, and <c>false</c> if not.
</summary>
<remarks>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/isFallbackAdapter"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean.</value>
</GPUAdapterIsFallbackAdapter>
<GPUAdapterRequestDevice>
<summary>
The <strong><c>requestDevice()</c></strong> method of the<br/><see cref="GPUAdapter"/> interface returns a {{jsxref("Promise")}} that fulfills with a <see cref="GPUDevice"/> object, which is the primary interface for communicating with the GPU.
</summary>
<remarks>
<para>-The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/requestDevice"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A {{jsxref("Promise")}} that fulfills with a <see cref="GPUDevice"/> object instance.If you make a duplicate call, i.e., call <c>requestDevice()</c> on a <see cref="GPUAdapter"/> that <c>requestDevice()</c> was already called on, the promise fulfills with a device that is immediately lost. You can then get information on how the device was lost via <see cref="GPUDevice.Lost"/>.</returns>
</GPUAdapterRequestDevice>
</docs>