<docs>
<History>
<summary>
The <strong><c>History</c></strong> interface of the {{domxref(&amp;quot;History API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} allows manipulation of the browser <strong>session history</strong>, that is the pages visited in the tab or frame that the current page is loaded in.
</summary>
<remarks>
<para>There is only one instance of <c>history</c> (It is a <strong>singleton</strong>.) accessible via the global object <see cref="Window.History"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>This interface is only available on the main thread (<see cref="Window"/>). It cannot be accessed in <see cref="Worker"/> or <see cref="Worklet"/> contexts.</para></blockquote>
<para>-<see cref="Window.History"/> global object<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History"> <em>See also on MDN</em> </seealso></para>
</remarks>
</History>
<HistoryReplaceState>
<summary>
The <strong><c>replaceState()</c></strong> method of the <see cref="History"/> interface modifies the current<br/>history entry, replacing it with the state object and<br/>URL passed in the method parameters. This method is particularly useful<br/>when you want to update the state object or URL of the current history entry in response<br/>to some user action.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HistoryReplaceState>
<HistoryGo>
<summary>
The <strong><c>go()</c></strong> method of the <see cref="History"/> interface loads a specific page from the<br/>session history. You can use it to move forwards and backwards through the history<br/>depending on the value of a parameter.
</summary>
<remarks>
<para>This method is <see href="https://developer.mozilla.org/en-US/docs/Glossary/asynchronous">asynchronous</see>. Add a listener for the<br/><see cref="Windowpopstate"/> event in order to determine when the navigation has completed.</para>
<para>-<see cref="History"/><br/>-<see cref="History.Back"/><br/>-<see cref="History.Forward"/><br/>-<see cref="Windowpopstate"/> event<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API">Working with the History API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/go"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HistoryGo>
<HistoryLength>
<summary>
The <strong><c>length</c></strong> read-only property of the <see cref="History"/> interface<br/>returns an integer representing the number of entries in the session<br/>history, including the currently loaded page.
</summary>
<remarks>
<para>For example, for a page loaded in a new tab this property returns <c>1</c>.</para>
<para>-The <see cref="History"/> interface it belongs to.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/length"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number.</value>
</HistoryLength>
<HistoryPushState>
<summary>
The <strong><c>pushState()</c></strong> method of the <see cref="History"/> interface adds an entry to the browser's<br/>session history stack.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API">Working with the History API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event">Window: popstate event</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/pushState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HistoryPushState>
<HistoryScrollRestoration>
<summary>
The <strong><c>scrollRestoration</c></strong> property of the <see cref="History"/><br/>interface allows web applications to explicitly set default scroll restoration behavior<br/>on history navigation.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/scrollRestoration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>One of the following:</value>
</HistoryScrollRestoration>
<HistoryState>
<summary>
The <strong><c>state</c></strong> read-only property of the <see cref="History"/> interface<br/>returns a value representing the state at the top of the history stack. This is<br/>a way to look at the state without having to wait for a <see cref="Windowpopstate"/> event.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API">Working with the History API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History/pushState"><c>History.pushState()</c></see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState"><c>History.replaceState()</c></see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/PopStateEvent/state"><c>PopStateEvent.state</c></see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/state"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The state at the top of the history stack. The value is <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null"><c>null</c></see> until the<br/><see cref="History.PushState"/> or<br/><see cref="History.ReplaceState"/> method is used.</value>
</HistoryState>
<HistoryForward>
<summary>
The <strong><c>forward()</c></strong> method of the <see cref="History"/> interface causes the browser to move<br/>forward one page in the session history. It has the same effect as calling<br/><see cref="History.Go"/>.
</summary>
<remarks>
<para>This method is {{glossary("asynchronous")}}. Add a listener for the <see cref="Windowpopstate"/> event in order to determine when the navigation has completed.</para>
<para>-<see cref="History"/><br/>-<see cref="Windowpopstate"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API">Working with the History API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/forward"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HistoryForward>
<HistoryBack>
<summary>
The <strong><c>back()</c></strong> method of the <see cref="History"/> interface causes<br/>the browser to move back one page in the session history.
</summary>
<remarks>
<para>It has the same<br/>effect as calling <see cref="History.Go"/>. If there is no previous<br/>page, this method call does nothing.</para><para>This method is <see href="https://developer.mozilla.org/en-US/docs/Glossary/asynchronous">asynchronous</see>. Add a listener for the<br/><see cref="Windowpopstate"/> event in order to determine when the navigation has completed.</para>
<para>-<see cref="History"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API">Working with the History API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/History/back"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</HistoryBack>
</docs>