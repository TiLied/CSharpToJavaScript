<docs>
<IDBObjectStore>
<summary>
The <strong><c>IDBObjectStore</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API">IndexedDB API</see> represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore"> <em>See also on MDN</em> </seealso></para>
</remarks>
</IDBObjectStore>
<IDBObjectStoreGetKey>
<summary>
The <strong><c>getKey()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface returns an <see cref="IDBRequest"/> object,<br/>and, in a separate thread, returns the key selected by the specified query. This is<br/>for retrieving specific records from an object store.
</summary>
<remarks>
<para>If a key is successfully found, then a structured clone of it is created and set as the<br/>result of the request object.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getKey"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is the key for the first record matching the given key or key range.</returns>
</IDBObjectStoreGetKey>
<IDBObjectStoreGetAll>
<summary>
The <strong><c>getAll()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface returns an <see cref="IDBRequest"/> object<br/>containing all objects in the object store matching the specified parameter or all<br/>objects in the store if no parameters are given.
</summary>
<remarks>
<para>If a value is successfully found, then a structured clone of it is created and set as<br/>the result of the request object.</para><para>This method produces the same result for:</para><para>To tell these situations apart, you either call</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is an {{jsxref("Array")}} of the values of all records matching the given query, up to the value of <c>count</c>, if <c>count</c> was supplied.</returns>
</IDBObjectStoreGetAll>
<IDBObjectStoreAdd>
<summary>
The <strong><c>add()</c></strong> method of the <see cref="IDBObjectStore"/> interface returns an <see cref="IDBRequest"/> object, and, in a separate thread, creates a <see href="https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#structured-clone">structured clone</see> of the value, and stores the cloned value in the object store. This is for adding new records to an object store.
</summary>
<remarks>
<para>To determine if the add operation has completed successfully, listen for the<br/>transaction&amp;apos;s <c>complete</c> event in addition to the<br/><c>IDBObjectStore.add</c> request&amp;apos;s <c>success</c> event, because the<br/>transaction may still fail after the success event fires. In other words, the success<br/>event is only triggered when the transaction has been successfully queued.</para><para>The add method is an <strong>insert only</strong> method. If a<br/>record already exists in the object store with the <c>key</c> parameter as its<br/>key, then an error <c>ConstraintError</c> event is fired on the returned request<br/>object. For updating existing records, you should use the<br/><see cref="IDBObjectStore.Put"/> method instead.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/add"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is the key for the new record.</returns>
</IDBObjectStoreAdd>
<IDBObjectStoreIndex>
<summary>
The <strong><c>index()</c></strong> method of the <see cref="IDBObjectStore"/><br/>interface opens a named index in the current object store, after which it can be used<br/>to, for example, return a series of records sorted by that index using a cursor.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/index"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBIndex"/> object for accessing the index.</returns>
</IDBObjectStoreIndex>
<IDBObjectStoreClear>
<summary>
The <strong><c>clear()</c></strong> method of the <see cref="IDBObjectStore"/><br/>interface creates and immediately returns an <see cref="IDBRequest"/> object, and<br/>clears this object store in a separate thread. This is for deleting all the current<br/>data out of an object store.
</summary>
<remarks>
<para>Clearing an object store consists of removing all records from the object store and<br/>removing all records in indexes that reference the object store. To remove only some of<br/>the records in a store, use <see cref="IDBObjectStore.Delete"/> passing a key<br/>or <see cref="IDBKeyRange"/>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/clear"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is <c>undefined</c>.</returns>
</IDBObjectStoreClear>
<IDBObjectStoreIndexNames>
<summary>
The <strong><c>indexNames</c></strong> read-only property of the<br/><see cref="IDBObjectStore"/> interface returns a list of the names of <see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#index">indexes</see> on objects<br/>in this object store.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/indexNames"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMStringList"/>.</value>
</IDBObjectStoreIndexNames>
<IDBObjectStoreDeleteIndex>
<summary>
The <strong><c>deleteIndex()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface destroys the index with the specified name in<br/>the connected database, used during a version upgrade.
</summary>
<remarks>
<para>Note that this method must be called only from a <c>VersionChange</c> transaction<br/>mode callback. Note that this method synchronously modifies the<br/><see cref="IDBObjectStore.IndexNames"/> property.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/deleteIndex"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</IDBObjectStoreDeleteIndex>
<IDBObjectStoreGetAllKeys>
<summary>
The <c>getAllKeys()</c> method of the <see cref="IDBObjectStore"/><br/>interface returns an <see cref="IDBRequest"/> object retrieves record keys for all<br/>objects in the object store matching the specified parameter or all objects in the<br/>store if no parameters are given.
</summary>
<remarks>
<para>If a value is successfully found, then a structured clone of it is created and set as<br/>the result of the request object.</para><para>This method produces the same result for:</para><para>To tell these situations apart, you need to call the<br/><see cref="IDBObjectStore.OpenCursor"/> method with the same key. That<br/>method provides a cursor if the record exists, and no cursor if it does not.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAllKeys"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is an {{jsxref("Array")}} of the keys for all records matching the given query, up to the value of <c>count</c>, if <c>count</c> was supplied.</returns>
</IDBObjectStoreGetAllKeys>
<IDBObjectStoreGet>
<summary>
The <strong><c>get()</c></strong> method of the <see cref="IDBObjectStore"/><br/>interface returns an <see cref="IDBRequest"/> object, and, in a separate thread,<br/>returns the object selected by the specified key. This is for retrieving<br/>specific records from an object store.
</summary>
<remarks>
<para>If a value is successfully found, then a structured clone of it is created and set as<br/>the <see href="https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/result"><c>result</c></see> of the<br/>request object.</para><blockquote class="NOTE"><h5>NOTE</h5><para>This method produces the same result for: a) a record that doesn&amp;apos;t exist in the database and b) a record that has an undefined value.<br/>To tell these situations apart, call the <c>openCursor()</c> method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/get"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is the value of the first record matching the given key or key range.</returns>
</IDBObjectStoreGet>
<IDBObjectStoreDelete>
<summary>
The <strong><c>delete()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface returns an <see cref="IDBRequest"/> object,<br/>and, in a separate thread, deletes the specified record or records.
</summary>
<remarks>
<para>Either a key or an <see cref="IDBKeyRange"/> can be passed, allowing one or multiple<br/>records to be deleted from a store. To delete all records in a store, use<br/><see cref="IDBObjectStore.Clear"/>.</para><para>Bear in mind that if you are using a <see cref="IDBCursor"/>, you can use<br/>the <see cref="IDBCursor.Delete"/> method to more efficiently delete the current<br/>record — without having to explicitly look up the record&amp;apos;s key.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is <c>undefined</c>.</returns>
</IDBObjectStoreDelete>
<IDBObjectStoreCreateIndex>
<summary>
The <strong><c>createIndex()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface creates and returns a new<br/><see cref="IDBIndex"/> object in the connected database. It creates a new<br/>field/column defining a new data point for each database record to contain.
</summary>
<remarks>
<para>Bear in mind that IndexedDB indexes can contain <strong>any</strong> JavaScript data type;<br/>IndexedDB uses the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm">structured clone algorithm</see> to serialize stored objects, which allows for storage of simple<br/>and complex objects.</para><para>Note that this method must be called only from a <c>VersionChange</c> transaction<br/>mode callback.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBIndex"/> object: the newly created index.</returns>
</IDBObjectStoreCreateIndex>
<IDBObjectStoreTransaction>
<summary>
The <strong><c>transaction</c></strong> read-only property of the<br/><see cref="IDBObjectStore"/> interface returns the transaction object to which this<br/>object store belongs.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/transaction"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="IDBTransaction"/> object.</value>
</IDBObjectStoreTransaction>
<IDBObjectStoreCount>
<summary>
The <strong><c>count()</c></strong> method of the <see cref="IDBObjectStore"/><br/>interface returns an <see cref="IDBRequest"/> object, and, in a separate thread,<br/>returns the total number of records that match the provided key or<br/><see cref="IDBKeyRange"/>. If no arguments are provided, it returns the total number<br/>of records in the store.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/count"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is the number of records that match the given query.</returns>
</IDBObjectStoreCount>
<IDBObjectStoreOpenCursor>
<summary>
The <strong><c>openCursor()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface returns an <see cref="IDBRequest"/> object,<br/>and, in a separate thread, returns a new <see cref="IDBCursorWithValue"/> object.<br/>Used for iterating through an object store with a cursor.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/openCursor"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is:</returns>
</IDBObjectStoreOpenCursor>
<IDBObjectStoreOpenKeyCursor>
<summary>
The <strong><c>openKeyCursor()</c></strong> method of the<br/><see cref="IDBObjectStore"/> interface returns an <see cref="IDBRequest"/> object<br/>whose result will be set to an <see cref="IDBCursor"/> that can be used to iterate<br/>through matching results. Used for iterating through the keys of an object store with<br/>a cursor.
</summary>
<remarks>
<para>To determine if the add operation has completed successfully, listen for the<br/>results&amp;apos;s <c>success</c> event.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/openKeyCursor"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is:</returns>
</IDBObjectStoreOpenKeyCursor>
<IDBObjectStoreName>
<summary>
The <strong><c>name</c></strong> property of the <see cref="IDBObjectStore"/><br/>interface indicates the name of this object store.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/name"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the object<br/>store&amp;apos;s name.</value>
</IDBObjectStoreName>
<IDBObjectStoreAutoIncrement>
<summary>
The <strong><c>autoIncrement</c></strong> read-only property of the<br/><see cref="IDBObjectStore"/> interface returns the value of the auto increment flag<br/>for this object store.
</summary>
<remarks>
<para>Note that every object store has its own separate auto increment counter.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/autoIncrement"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value:<table><tr><td>Value</td><td>Meaning</td></tr><tr><td><c>true</c></td><td>The object store auto increments.</td></tr><tr><td><c>false</c></td><td>The object store does not auto increment.</td></tr></table></value>
</IDBObjectStoreAutoIncrement>
<IDBObjectStoreKeyPath>
<summary>
The <strong><c>keyPath</c></strong> read-only property of the<br/><see cref="IDBObjectStore"/> interface returns the <see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#key_path">key path</see> of this object store.
</summary>
<remarks>
<para>If this property is null, the application must provide a key for each modification<br/>operation.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/keyPath"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>Any value type.</value>
</IDBObjectStoreKeyPath>
<IDBObjectStorePut>
<summary>
The <strong><c>put()</c></strong> method of the <see cref="IDBObjectStore"/> interface updates a given record in a database, or inserts a new record if the given item does not already exist.
</summary>
<remarks>
<para>It returns an <see cref="IDBRequest"/> object, and, in a separate thread, creates a <see href="https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#structured-clone">structured clone</see> of the value and stores the cloned value in the object store. This is for adding new records, or updating existing records in an object store when the transaction&amp;apos;s mode is <c>readwrite</c>. If the record is successfully stored, then a success event is fired on the returned request object with the <c>result</c> set to the key for the stored record, and the <c>transaction</c> set to the transaction in which this object store is opened.</para><para>The put method is an <strong>update or insert</strong> method.<br/>See the <see cref="IDBObjectStore.Add"/> method for an <strong>insert only</strong> method.</para><para>Bear in mind that if you have a <see cref="IDBCursor"/> to the record you<br/>want to update, updating it with <see cref="IDBCursor.Update"/> is preferable to<br/>using <c>IDBObjectStore.put()</c>. Doing so makes it clear that an existing<br/>record will be updated, instead of a new record being inserted.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</see><br/>-Starting transactions: <see cref="IDBDatabase"/><br/>-Using transactions: <see cref="IDBTransaction"/><br/>-Setting a range of keys: <see cref="IDBKeyRange"/><br/>-Retrieving and making changes to your data: <see cref="IDBObjectStore"/><br/>-Using cursors: <see cref="IDBCursor"/><br/>-Reference example: <see href="https://github.com/mdn/dom-examples/tree/main/to-do-notifications">To-do Notifications</see> (<see href="https://mdn.github.io/dom-examples/to-do-notifications/">View the example live</see>).<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/put"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An <see cref="IDBRequest"/> object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's <see cref="IDBRequest.Result"/> property is the key for the new or updated record.</returns>
</IDBObjectStorePut>
</docs>