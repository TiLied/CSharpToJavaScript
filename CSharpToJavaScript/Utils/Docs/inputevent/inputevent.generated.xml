<docs>
<InputEvent>
<summary>
The <strong><c>InputEvent</c></strong> interface represents an event notifying the user of editable content changes.
</summary>
<remarks>
<para></para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Element/beforeinput_event"><c>beforeinput</c> event</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event"><c>input</c> event</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
</InputEvent>
<InputEventInputEvent>
<summary>
The <strong><c>InputEvent()</c></strong> constructor creates a new <see cref="InputEvent"/> object.
</summary>
<remarks>
<para>-<see cref="InputEvent"/>, the interface of the objects it constructs.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/InputEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A new <see cref="InputEvent"/> object.</returns>
</InputEventInputEvent>
<InputEventInputType>
<summary>
The <strong><c>inputType</c></strong> read-only property of the<br/><see cref="InputEvent"/> interface returns the type of change made to editable content.<br/>Possible changes include for example inserting, deleting, and formatting text.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string containing the type of input that was made. There are many<br/>possible values, such as <c>insertText</c>, <c>deleteContentBackward</c>,<br/><c>insertFromPaste</c>, and <c>formatBold</c>. For a complete list of the<br/>available input types, see the <see href="https://w3c.github.io/input-events/#interface-InputEvent-Attributes">Attributes section of the Input Events Level 2 spec</see>.</value>
</InputEventInputType>
<InputEventDataTransfer>
<summary>
The <strong><c>dataTransfer</c></strong> read-only property of the<br/><see cref="InputEvent"/> interface returns a <see cref="DataTransfer"/> object<br/>containing information about richtext or plaintext data being added to or removed from<br/>editable content.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/dataTransfer"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DataTransfer"/> object or <c>null</c>. The spec has an <see href="https://w3c.github.io/input-events/#overview">overview</see> of its value in various cases.</value>
</InputEventDataTransfer>
<InputEventIsComposing>
<summary>
The <strong><c>InputEvent.isComposing</c></strong> read-only property returns a<br/>boolean value indicating if the event is fired after<br/><see cref="Elementcompositionstart"/> and before <see cref="Elementcompositionend"/>.
</summary>
<remarks>
<para>-<see cref="Elementcompositionstart"/> and <see cref="Elementcompositionend"/><br/>-<see cref="InputEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/isComposing"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean.</value>
</InputEventIsComposing>
<InputEventData>
<summary>
The <strong><c>data</c></strong> read-only property of the<br/><see cref="InputEvent"/> interface returns a string with inserted<br/>characters. This may be an empty string if the change doesn&amp;apos;t insert text, such as when<br/>characters are deleted.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/data"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string or <c>null</c>. The spec has an <see href="https://w3c.github.io/input-events/#overview">overview</see> of its value in various cases.</value>
</InputEventData>
<InputEventGetTargetRanges>
<summary>
The <strong><c>getTargetRanges()</c></strong> method of the <see cref="InputEvent"/> interface returns an array of <see cref="StaticRange"/> objects that will be affected by a change to the DOM if the input event is not canceled.
</summary>
<remarks>
<para>This allows web apps to override text edit behavior before the browser modifies the DOM tree, and provides more control over input events to improve performance.</para><para>Depending on the value of <c>inputType</c> and the current editing host, the expected return value of this method varies:</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/getTargetRanges"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An array of <see cref="StaticRange"/> objects.</returns>
</InputEventGetTargetRanges>
</docs>