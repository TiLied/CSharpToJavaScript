<docs>
<MouseEvent>
<summary>
The <strong><c>MouseEvent</c></strong> interface represents events that occur due to the user interacting with a pointing device (such as a mouse).<br/>Common events using this interface include <see cref="Elementclick"/>, <see cref="Elementdblclick"/>, <see cref="Elementmouseup"/>, <see cref="Elementmousedown"/>.
</summary>
<remarks>
<para><c>MouseEvent</c> derives from <see cref="UIEvent"/>, which in turn derives from <see cref="Event"/>.<br/>Though the <see cref="MouseEvent.InitMouseEvent"/> method is kept for backward compatibility, creating of a <c>MouseEvent</c> object should be done using the <see cref="MouseEvent.MouseEvent"/> constructor.</para><para>Several more specific events are based on <c>MouseEvent</c>, including <see cref="WheelEvent"/>, <see cref="DragEvent"/>, and <see cref="PointerEvent"/>.</para><para></para>
<para>-Its direct parent, <see cref="UIEvent"/><br/>-<see cref="PointerEvent"/>: For advanced pointer events, including multi-touch<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEvent>
<MouseEventLayerX>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> The <strong><c>MouseEvent.layerX</c></strong> read-only property returns the<br/>horizontal coordinate of the event relative to the current layer.
</summary>
<remarks>
<para>This property takes scrolling of the page into account and returns a value relative to<br/>the whole of the document unless the event occurs inside a positioned element, where the<br/>returned value is relative to the top left of the positioned element.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/layerX"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An integer value in pixels for the x-coordinate of the mouse pointer, when the mouse event fired.</value>
</MouseEventLayerX>
<MouseEventPageY>
<summary>
The <strong><c>pageY</c></strong> read-only property of the <see cref="MouseEvent"/> interface returns the Y (vertical) coordinate (in pixels) at which the mouse was clicked, relative to the top edge of the entire document.<br/>This includes any portion of the document not currently visible.
</summary>
<remarks>
<para>See <see cref="MouseEvent.PageX"/> for more information.</para>
<para>-<see cref="MouseEvent.PageX"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.</value>
</MouseEventPageY>
<MouseEventWEBKIT_FORCE_AT_FORCE_MOUSE_DOWN>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> <strong><c>MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN</c></strong> is a proprietary, WebKit-specific, static numeric property whose value is the minimum force necessary for a force click.
</summary>
<remarks>
<para>Because <c>WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN</c> is a static property of <c>MouseEvent</c>, you always use it as <c>MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN</c>, rather than as a property of a <c>MouseEvent</c> instance.</para>
<para>-<see cref="MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN"/><br/>-<see cref="MouseEvent.WebkitForce"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEventWEBKIT_FORCE_AT_FORCE_MOUSE_DOWN>
<MouseEventMovementY>
<summary>
The <strong><c>movementY</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the difference in the Y coordinate of the mouse pointer between the given event and the previous <see cref="Elementmousemove"/> event.<br/>In other words, the value of the property is computed like this: <c>currentEvent.movementY = currentEvent.screenY - previousEvent.screenY</c>.
</summary>
<remarks>
<blockquote class="WARNING"><h5>WARNING</h5><para>Browsers <see href="https://github.com/w3c/pointerlock/issues/42">use different units for <c>movementY</c> and <c>screenY</c></see> than what the specification defines. Depending on the browser and operating system, the <c>movementY</c> units may be a physical pixel, a logical pixel, or a CSS pixel. You may want to avoid the movement properties, and instead calculate the delta between the current client values (<see cref="MouseEvent.ScreenX"/>, <see cref="MouseEvent.ScreenY"/>) and the previous client values.</para></blockquote>
<para>-<see cref="MouseEvent.MovementX"/><br/>-<see cref="MouseEvent"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API">Pointer Lock</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number. Always zero on any <see cref="MouseEvent"/> other than <c>mousemove</c>.</value>
</MouseEventMovementY>
<MouseEventOffsetY>
<summary>
The <strong><c>offsetY</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the offset in the Y coordinate of the mouse pointer between that event and the padding edge of the target node.
</summary>
<remarks>
<para>-<see cref="MouseEvent"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetY"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.Early versions of the spec defined this as an integer.</value>
</MouseEventOffsetY>
<MouseEventOffsetX>
<summary>
The <strong><c>offsetX</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the offset in the X coordinate of the mouse pointer between that event and the padding edge of the target node.
</summary>
<remarks>
<para>-<see cref="MouseEvent"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.Early versions of the spec defined this as an integer.</value>
</MouseEventOffsetX>
<MouseEventInitMouseEvent>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> The <strong><c>MouseEvent.initMouseEvent()</c></strong> method initializes the<br/>value of a mouse event once it's been created (normally using the <see cref="Document.CreateEvent"/> method).
</summary>
<remarks>
<blockquote class="WARNING"><h5>WARNING</h5><para>Do not use this method anymore as it is deprecated.</para><para>Instead use specific event constructors, like <see cref="MouseEvent.MouseEvent"/>.<br/>The section on <see href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Events#creating_and_dispatching_events">Creating and dispatching events</see> gives more information about the way to use these.</para></blockquote><para>Events initialized in this way must have been created with the <see cref="Document.CreateEvent"/> method.<br/>This method must be called to set the event<br/>before it is dispatched, using <see cref="EventTarget.DispatchEvent"/>.</para>
<para>-<see cref="MouseEvent.MouseEvent"/> constructor, the modern<br/>standard way of creating a <see cref="MouseEvent"/><br/>-<see cref="Event.InitEvent"/> is a simpler method serving a similar purpose. It<br/>is also obsolete and shouldn&amp;apos;t be used any more.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/initMouseEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</MouseEventInitMouseEvent>
<MouseEventX>
<summary>
The <strong><c>MouseEvent.x</c></strong> property is an alias for the <see cref="MouseEvent.ClientX"/> property.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/x"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEventX>
<MouseEventMouseEvent>
<summary>
The <strong><c>MouseEvent()</c></strong> constructor creates a new <see cref="MouseEvent"/> object.
</summary>
<remarks>
<para>-<see cref="MouseEvent"/>, the interface of the objects it constructs.<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEventMouseEvent>
<MouseEventRelatedTarget>
<summary>
The <strong><c>MouseEvent.relatedTarget</c></strong> read-only property is the secondary target for the mouse event, if there is one.
</summary>
<remarks>
<para>That is:</para><para>For events with no secondary target, <c>relatedTarget</c> returns<br/><c>null</c>.</para><para><see cref="FocusEvent.RelatedTarget"/> is a similar property for focus events.</para>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/relatedTarget"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="EventTarget"/> object or <c>null</c>.</value>
</MouseEventRelatedTarget>
<MouseEventMetaKey>
<summary>
The <strong><c>MouseEvent.metaKey</c></strong> read-only property is a boolean value that indicates whether the &amp;lt;kbd&amp;gt;meta&amp;lt;/kbd&amp;gt; key was pressed or not when a given mouse event occurs.
</summary>
<remarks>
<para>Be aware that many operating systems bind special functionality to the &amp;lt;kbd&amp;gt;meta&amp;lt;/kbd&amp;gt; key, so this property may be <c>false</c> even when the key is actually pressed.<br/>On Windows, for example, this key may open the Start menu.</para><blockquote class="NOTE"><h5>NOTE</h5><para>On Macintosh keyboards, this key is the &amp;lt;kbd&amp;gt;command&amp;lt;/kbd&amp;gt; key (&amp;lt;kbd&amp;gt;⌘&amp;lt;/kbd&amp;gt;).<br/>On Windows keyboards, this key is the Windows key (&amp;lt;kbd&amp;gt;⊞&amp;lt;/kbd&amp;gt;).</para></blockquote>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/metaKey"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value, where <c>true</c> indicates that the key is pressed, and <c>false</c> indicates that the key is <strong>not</strong> pressed.</value>
</MouseEventMetaKey>
<MouseEventButton>
<summary>
The <strong><c>MouseEvent.button</c></strong> read-only property indicates which button was pressed or released on the mouse to trigger the event.
</summary>
<remarks>
<para>This property only guarantees to indicate which buttons are pressed or released during events caused by pressing or releasing one or multiple buttons.<br/>As such, it is not reliable for events such as <see cref="Elementmouseenter"/>, <see cref="Elementmouseleave"/>, <see cref="Elementmouseover"/>, <see cref="Elementmouseout"/>, or <see cref="Elementmousemove"/>.</para><para>Users may change the configuration of buttons on their pointing device so that if an event&amp;apos;s button property is zero, it may not have been caused by the button that is physically left–most on the pointing device; however, it should behave as if the left button was clicked in the standard button layout.</para><blockquote class="NOTE"><h5>NOTE</h5><para>Do not confuse this property with the <see cref="MouseEvent.Buttons"/> property, which indicates which buttons are pressed for all mouse events types.</para></blockquote>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number representing a given button:As noted above, buttons may be configured differently to the standard &amp;quot;left to right&amp;quot; layout.<br/>A mouse configured for left-handed use may have the button actions reversed.<br/>Some pointing devices only have one button and use keyboard or other input mechanisms to indicate main, secondary, auxiliary, etc.<br/>Others may have many buttons mapped to different functions and button values.</value>
</MouseEventButton>
<MouseEventButtons>
<summary>
The <strong><c>MouseEvent.buttons</c></strong> read-only property indicates which buttons are pressed on the mouse (or other input device) when a mouse event is triggered.
</summary>
<remarks>
<para>Each button that can be pressed is represented by a given number (see below).<br/>If more than one button is pressed, the button values are added together to produce a new number.<br/>For example, if the secondary (<c>2</c>) and auxiliary (<c>4</c>) buttons are pressed simultaneously, the value is <c>6</c> (i.e., <c>2 + 4</c>).</para><blockquote class="NOTE"><h5>NOTE</h5><para>Do not confuse this property with the <see cref="MouseEvent.Button"/> property.<br/>The <c>MouseEvent.buttons</c> property indicates the state of buttons pressed during any kind of mouse event,<br/>while the <see cref="MouseEvent.Button"/> property only guarantees the correct value for mouse events caused by pressing or releasing one or multiple buttons.</para></blockquote>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number representing one or more buttons.<br/>For more than one button pressed simultaneously, the values are combined (e.g., <c>3</c> is primary + secondary).</value>
</MouseEventButtons>
<MouseEventScreenX>
<summary>
The <strong><c>screenX</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the horizontal coordinate (offset) of the mouse pointer in <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems#screen">screen coordinates</see>.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>In a multiscreen environment, screens aligned horizontally will be treated as a single device, and so the range of the <c>screenX</c> value will increase to the combined width of the screens.</para></blockquote>
<para>-<see cref="MouseEvent"/><br/>-<see cref="MouseEvent.ScreenY"/><br/>-<see cref="MouseEvent.ClientX"/> / <see cref="MouseEvent.ClientY"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/screenX"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.Early versions of the spec defined this as an integer referring to the number of pixels.</value>
</MouseEventScreenX>
<MouseEventMovementX>
<summary>
The <strong><c>movementX</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the difference in the X coordinate of the mouse pointer between the given event and the previous <see cref="Elementmousemove"/> event.<br/>In other words, the value of the property is computed like this: <c>currentEvent.movementX = currentEvent.screenX - previousEvent.screenX</c>.
</summary>
<remarks>
<blockquote class="WARNING"><h5>WARNING</h5><para>Browsers <see href="https://github.com/w3c/pointerlock/issues/42">use different units for <c>movementX</c> and <c>screenX</c></see> than what the specification defines. Depending on the browser and operating system, the <c>movementX</c> units may be a physical pixel, a logical pixel, or a CSS pixel. You may want to avoid the movement properties, and instead calculate the delta between the current client values (<see cref="MouseEvent.ScreenX"/>, <see cref="MouseEvent.ScreenY"/>) and the previous client values.</para></blockquote>
<para>-<see cref="MouseEvent.MovementY"/><br/>-<see cref="MouseEvent"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API">Pointer Lock</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number. Always zero on any <see cref="MouseEvent"/> other than <c>mousemove</c>.</value>
</MouseEventMovementX>
<MouseEventMozInputSource>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> The <strong><c>MouseEvent.mozInputSource</c></strong> read-only property on <see cref="MouseEvent"/> provides information indicating the type of device that generated the event.<br/>This lets you, for example, determine whether a mouse event was generated by an actual mouse or by a touch event (which might affect the degree of accuracy with which you interpret the coordinates associated with the event).
</summary>
<remarks>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/mozInputSource"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The following values are possible.<table><tr><td>Constant name</td><td>Value</td><td>Description</td></tr><tr><td><c>MOZ_SOURCE_UNKNOWN</c></td><td>0</td><td>The input device is unknown.</td></tr><tr><td><c>MOZ_SOURCE_MOUSE</c></td><td>1</td><td>The event was generated by a mouse (or mouse-like device).</td></tr><tr><td><c>MOZ_SOURCE_PEN</c></td><td>2</td><td>The event was generated by a pen on a tablet.</td></tr><tr><td><c>MOZ_SOURCE_ERASER</c></td><td>3</td><td>The event was generated by an eraser on a tablet.</td></tr><tr><td><c>MOZ_SOURCE_CURSOR</c></td><td>4</td><td>The event was generated by a cursor.</td></tr><tr><td><c>MOZ_SOURCE_TOUCH</c></td><td>5</td><td>The event was generated on a touch interface.</td></tr><tr><td><c>MOZ_SOURCE_KEYBOARD</c></td><td>6</td><td>The event was generated by a keyboard.</td></tr></table></value>
</MouseEventMozInputSource>
<MouseEventWEBKIT_FORCE_AT_MOUSE_DOWN>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> <strong><c>MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN</c></strong> is a proprietary, WebKit-specific, static numeric property whose value is the minimum force necessary for a normal click.
</summary>
<remarks>
<para>Because <c>WEBKIT_FORCE_AT_MOUSE_DOWN</c> is a static property of <c>MouseEvent</c>, you always use it as <c>MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN</c>, rather than as a property of a <c>MouseEvent</c> instance.</para>
<para>-<see cref="MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN"/><br/>-<see cref="MouseEvent.WebkitForce"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_MOUSE_DOWN"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEventWEBKIT_FORCE_AT_MOUSE_DOWN>
<MouseEventClientX>
<summary>
The <strong><c>clientX</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the horizontal coordinate within the application's {{glossary("viewport")}} at which the event occurred (as opposed to the coordinate within the page).
</summary>
<remarks>
<para>For example, clicking on the left edge of the viewport will always result in a mouse event with a <c>clientX</c> value of <c>0</c>, regardless of whether the page is scrolled horizontally.</para>
<para>-<see cref="MouseEvent"/><br/>-<see cref="MouseEvent.ClientY"/><br/>-<see cref="MouseEvent.ScreenX"/> / <see cref="MouseEvent.ScreenY"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.</value>
</MouseEventClientX>
<MouseEventShiftKey>
<summary>
The <strong><c>MouseEvent.shiftKey</c></strong> read-only property is a boolean value that indicates whether the &amp;lt;kbd&amp;gt;shift&amp;lt;/kbd&amp;gt; key was pressed or not when a given mouse event occurs.
</summary>
<remarks>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/shiftKey"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value, where <c>true</c> indicates that the key is pressed, and <c>false</c> indicates that the key is <strong>not</strong> pressed.</value>
</MouseEventShiftKey>
<MouseEventWebkitForce>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> <strong><c>MouseEvent.webkitForce</c></strong> is a proprietary, WebKit-specific numeric property whose value represents the amount of pressure that is being applied on the touchpad or touchscreen.
</summary>
<remarks>
<para>-<see cref="MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN"/><br/>-<see cref="MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/webkitForce"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEventWebkitForce>
<MouseEventCtrlKey>
<summary>
The <strong><c>MouseEvent.ctrlKey</c></strong> read-only property is a boolean value that indicates whether the &amp;lt;kbd&amp;gt;ctrl&amp;lt;/kbd&amp;gt; key was pressed or not when a given mouse event occurs.
</summary>
<remarks>
<para>On Macintosh keyboards, this key is labeled the &amp;lt;kbd&amp;gt;control&amp;lt;/kbd&amp;gt; key. Also, note that on a Mac, a click combined with the &amp;lt;kbd&amp;gt;control&amp;lt;/kbd&amp;gt; key is intercepted by the operating system and used to open a context menu, so <c>ctrlKey</c> is not detectable on click events.</para><para>Pinch-zooming using a trackpad also sends a simulated <see cref="Elementwheel"/> event with <c>ctrlKey</c> set to true.</para>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/ctrlKey"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value, where <c>true</c> indicates that the key is pressed, and <c>false</c> indicates that the key is <strong>not</strong> pressed.</value>
</MouseEventCtrlKey>
<MouseEventScreenY>
<summary>
The <strong><c>screenY</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the vertical coordinate (offset) of the mouse pointer in <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems#screen">screen coordinates</see>.
</summary>
<remarks>
<para>-<see cref="MouseEvent"/><br/>-<see cref="MouseEvent.ScreenX"/><br/>-<see cref="MouseEvent.ClientX"/> / <see cref="MouseEvent.ClientY"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/screenY"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.Early versions of the spec defined this as an integer referring to the number of pixels.</value>
</MouseEventScreenY>
<MouseEventClientY>
<summary>
The <strong><c>clientY</c></strong> read-only property of the <see cref="MouseEvent"/> interface provides the vertical coordinate within the application's {{glossary("viewport")}} at which the event occurred (as opposed to the coordinate within the page).
</summary>
<remarks>
<para>For example, clicking on the top edge of the viewport will always result in a mouse event with a <c>clientY</c> value of <c>0</c>, regardless of whether the page is scrolled vertically.</para>
<para>-<see cref="MouseEvent"/><br/>-<see cref="MouseEvent.ClientX"/><br/>-<see cref="MouseEvent.ScreenX"/> / <see cref="MouseEvent.ScreenY"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating point value in pixels.</value>
</MouseEventClientY>
<MouseEventAltKey>
<summary>
The <strong><c>MouseEvent.altKey</c></strong> read-only property is a boolean value that indicates whether the &amp;lt;kbd&amp;gt;alt&amp;lt;/kbd&amp;gt; key was pressed or not when a given mouse event occurs.
</summary>
<remarks>
<para>Be aware that the browser can&amp;apos;t always detect the &amp;lt;kbd&amp;gt;alt&amp;lt;/kbd&amp;gt; key on some operating systems.<br/>On some Linux variants, for example, a left mouse click combined with the &amp;lt;kbd&amp;gt;alt&amp;lt;/kbd&amp;gt; key is used to move or resize windows.</para><blockquote class="NOTE"><h5>NOTE</h5><para>On Macintosh keyboards, this key is also known as the &amp;lt;kbd&amp;gt;option&amp;lt;/kbd&amp;gt; key.</para></blockquote>
<para>-<see cref="MouseEvent"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/altKey"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean value, where <c>true</c> indicates that the key is pressed, and <c>false</c> indicates that the key is <strong>not</strong> pressed.</value>
</MouseEventAltKey>
<MouseEventGetModifierState>
<summary>
The <strong><c>MouseEvent.getModifierState()</c></strong> method returns the current state of the specified modifier key: <c>true</c> if the modifier is active (i.e., the modifier key is pressed or locked), otherwise, <c>false</c>.
</summary>
<remarks>
<para>See <see cref="KeyboardEvent.GetModifierState"/> for details.</para>
<para>-The <see cref="MouseEvent"/> this method belongs to.<br/>-<see cref="KeyboardEvent.GetModifierState"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/getModifierState"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A boolean value.</returns>
</MouseEventGetModifierState>
<MouseEventPageX>
<summary>
The <strong><c>pageX</c></strong> read-only property of the <see cref="MouseEvent"/> interface returns the X (horizontal) coordinate (in pixels) at which the mouse was clicked, relative to the left edge of the entire document.<br/>This includes any portion of the document not currently visible.
</summary>
<remarks>
<para>Being based on the edge of the document as it is, this property takes into account any horizontal scrolling of the page.<br/>For example, if the page is scrolled such that 200 pixels of the left side of the document are scrolled out of view, and the mouse is clicked 100 pixels inward from the left edge of the view, the value returned by <c>pageX</c> will be 300.</para><para>Originally, this property was defined as a <c>long</c> integer. The <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view">CSSOM View Module</see> redefined it as a<br/><c>double</c> float. See the <see href="https://developer.mozilla.org#browser_compatibility">Browser compatibility</see> section for<br/>details.</para><para>See <see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems#page">Coordinate systems</see> for additional information about coordinates specified in this fashion.</para>
<para>-<see cref="MouseEvent.PageY"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems">Coordinate systems</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <c>double</c> floating-point number of pixels from the left edge of the <strong>document</strong> at which the mouse was clicked, regardless of any scrolling or viewport positioning that may be in effect.This property was originally specified in the Touch Events specification as a long integer, but was redefined in the CSSOM View Module to be a double-precision<br/>floating-point number to allow for subpixel precision.<br/>Even though numeric types both are represented by <c>Number</c> in JavaScript, they may be handled differently internally in the browser&amp;apos;s code, resulting in potential behavior differences.See <see href="https://developer.mozilla.org#browser_compatibility">Browser compatibility</see> to learn which browsers have been updated to use the revised data type.</value>
</MouseEventPageX>
<MouseEventLayerY>
<summary>
<div class="CAUTION"><h5>CAUTION</h5> <strong>Non-standard</strong></div> The <strong><c>MouseEvent.layerY</c></strong> read-only property returns the<br/>vertical coordinate of the event relative to the current layer.
</summary>
<remarks>
<para>This property takes scrolling of the page into account, and returns a value relative to<br/>the whole of the document, unless the event occurs inside a positioned element, where<br/>the returned value is relative to the top left of the positioned element.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/layerY"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An integer value in pixels for the y-coordinate of the mouse pointer, when the mouse event fired.</value>
</MouseEventLayerY>
<MouseEventY>
<summary>
The <strong><c>MouseEvent.y</c></strong> property is an alias for the <see cref="MouseEvent.ClientY"/> property.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/y"> <em>See also on MDN</em> </seealso></para>
</remarks>
</MouseEventY>
</docs>