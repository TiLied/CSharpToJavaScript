<docs>
<PublicKeyCredential>
<summary>
The <strong><c>PublicKeyCredential</c></strong> interface provides information about a public key / private key pair, which is a credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password. It inherits from <see cref="Credential"/>, and is part of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API">Web Authentication API</see> extension to the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API">Credential Management API</see>.
</summary>
<remarks>
<para></para><blockquote class="NOTE"><h5>NOTE</h5><para>This API is restricted to top-level contexts. Use from within an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see> element will not have any effect.</para></blockquote>
<para>-The parent interface <see cref="Credential"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential"> <em>See also on MDN</em> </seealso></para>
</remarks>
</PublicKeyCredential>
<PublicKeyCredentialGetClientCapabilities>
<summary>
The <strong><c>getClientCapabilities()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface returns a {{jsxref("Promise")}} that resolves with an object that can be used to check whether or not particular WebAuthn client capabilities and <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/WebAuthn_extensions">extensions</see> are supported.
</summary>
<remarks>
<para>A relying party (RP) can use this information to appropriately customize its sign-in and sign-up user interfaces and workflows.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API">Web Authentication API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/getClientCapabilities"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to an object where the property names are the client capability strings, and the values are boolean values that indicate whether or not the corresponding capability or extension is supported.The WebAuthn client capability strings are:The <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/WebAuthn_extensions">web extension</see> strings are formatted by prefixing the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/WebAuthn_extensions#available_extensions">extension identifier</see> with the prefix <c>extension:</c>.<br/>For example, the key <c>extension:appid</c> can be used to check if the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/WebAuthn_extensions#appid"><c>appid</c> extension</see> is supported.</returns>
</PublicKeyCredentialGetClientCapabilities>
<PublicKeyCredentialParseCreationOptionsFromJSON>
<summary>
The <strong><c>parseCreationOptionsFromJSON()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface creates a <see cref="PublicKeyCredentialCreationOptions"/> object from a JSON representation of its properties.
</summary>
<remarks>
<para>The method is a convenience function for converting credential options information provided by a relying party server to the form that a web app can use to <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API#creating_a_key_pair_and_registering_a_user">create a credential</see>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API">Web Authentication API</see><br/>-<see cref="PublicKeyCredential.ParseRequestOptionsFromJSON"/><br/>-<see cref="PublicKeyCredential.ToJSON"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/parseCreationOptionsFromJSON"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="PublicKeyCredentialCreationOptions"/> object.</returns>
</PublicKeyCredentialParseCreationOptionsFromJSON>
<PublicKeyCredentialGetClientExtensionResults>
<summary>
The <strong><c>getClientExtensionResults()</c></strong> method of the <see cref="PublicKeyCredential"/> interface returns an object mapping the identifiers of extensions requested during credential creation or authentication, and their results after processing by the user agent.
</summary>
<remarks>
<para>During the creation or fetching of a <c>PublicKeyCredential</c> (via <see cref="CredentialsContainer.Create"/> and <see cref="CredentialsContainer.Get"/> respectively), it is possible to request "custom" processing by the client for different extensions, specified in the <c>publicKey</c> option&amp;apos;s <c>extensions</c> property. You can find more information about requesting the different extensions in <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/WebAuthn_extensions">Web Authentication extensions</see>.</para><blockquote class="NOTE"><h5>NOTE</h5><para><c>getClientExtensionResults()</c> only returns the results from extensions processed by the user agent (client). The results from extensions processed by the authenticator can be found in the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Authenticator_data">authenticator data</see> available in <see cref="AuthenticatorAssertionResponse.AuthenticatorData"/>.</para></blockquote>
<para>-<see href="https://w3c.github.io/webauthn/#sctn-defined-extensions">The list of the currently defined extensions</see><br/>-<see cref="AuthenticatorAssertionResponse.AuthenticatorData"/> which contains the<br/>result of the authenticator&amp;apos;s extensions processing<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/getClientExtensionResults"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An object with each entry being an extensions&amp;apos; identifier string as the key, and the output from the processing of the extension by the client as the value.</returns>
</PublicKeyCredentialGetClientExtensionResults>
<PublicKeyCredentialResponse>
<summary>
The <strong><c>response</c></strong> read-only property of the<br/><see cref="PublicKeyCredential"/> interface is an <see cref="AuthenticatorResponse"/><br/>object which is sent from the authenticator to the user agent for the creation/fetching<br/>of credentials. The information contained in this response will be used by the relying<br/>party&amp;apos;s server to verify the demand is legitimate.
</summary>
<remarks>
<para>An <c>AuthenticatorResponse</c> is either:</para><para>In order to validate the <strong>creation</strong> of credentials, a relying party&amp;apos;s server<br/>needs both:</para><blockquote class="NOTE"><h5>NOTE</h5><para>When validating the fetching of existing credentials, the<br/>whole <c>PublicKeyCredential</c> object and the client extensions are necessary<br/>for the relying party&amp;apos;s server.</para></blockquote><blockquote class="NOTE"><h5>NOTE</h5><para>This property may only be used in top-level contexts and will<br/>not be available in an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see> for example.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="AuthenticatorResponse"/> object containing the data a relying party's<br/>script will receive and which should be sent to the relying party&amp;apos;s server in order to<br/>validate the demand for creation or fetching. This object contains data from the client<br/>(<see cref="AuthenticatorResponseclientDataJSON"/>) and from the authenticator.</value>
</PublicKeyCredentialResponse>
<PublicKeyCredentialParseRequestOptionsFromJSON>
<summary>
The <strong><c>parseRequestOptionsFromJSON()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface converts a {{glossary("JSON type representation")}} into a <see cref="PublicKeyCredentialRequestOptions"/> instance.
</summary>
<remarks>
<para>The method is a convenience function for converting information provided by a relying server to a web app in order to request an existing credential.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API">Web Authentication API</see><br/>-<see cref="PublicKeyCredential.ParseCreationOptionsFromJSON"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/parseRequestOptionsFromJSON"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="PublicKeyCredentialRequestOptions"/> instance.</returns>
</PublicKeyCredentialParseRequestOptionsFromJSON>
<PublicKeyCredentialSignalCurrentUserDetails>
<summary>
The <strong><c>signalCurrentUserDetails()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface signals to the authenticator that a particular user has updated their user name and/or display name on the <see href="https://en.wikipedia.org/wiki/Relying_party">relying party</see> (RP) server.
</summary>
<remarks>
<para>This allows the authenticator to update user account details, to make sure they stay in sync with those held by the RP. It should only be used when the current user is authenticated â€” after sign in, or when they change the metadata associated with their credentials on the RP web app.</para>
<para>-<see cref="PublicKeyCredential.SignalAllAcceptedCredentials"/><br/>-<see cref="PublicKeyCredential.SignalUnknownCredential"/><br/>-<see href="https://developer.chrome.com/docs/identity/webauthn-signal-api">Keep passkeys consistent with credentials on your server with the Signal API</see> on developer.chrome.com (2024)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/signalCurrentUserDetails"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to <see cref="Undefined"/>.</returns>
</PublicKeyCredentialSignalCurrentUserDetails>
<PublicKeyCredentialSignalUnknownCredential>
<summary>
The <strong><c>signalUnknownCredential()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface signals to the authenticator that a <see href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions#id">credential ID</see> was not recognized by the <see href="https://en.wikipedia.org/wiki/Relying_party">relying party</see> (RP) server.
</summary>
<remarks>
<para>This allows the authenticator to remove credentials that are not allowed by the RP, such as those for deleted accounts, or accounts that were created and stored on the authenticator but not properly updated on the server. Generally the method is called after sign in fails because the account details were not available to the RP. It can be used even when the current user is not authenticated because it does not expose sensitive information.</para>
<para>-<see cref="PublicKeyCredential.SignalAllAcceptedCredentials"/><br/>-<see cref="PublicKeyCredential.SignalCurrentUserDetails"/><br/>-<see href="https://developer.chrome.com/docs/identity/webauthn-signal-api">Keep passkeys consistent with credentials on your server with the Signal API</see> on developer.chrome.com (2024)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/signalUnknownCredential"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to <see cref="Undefined"/>.</returns>
</PublicKeyCredentialSignalUnknownCredential>
<PublicKeyCredentialIsUserVerifyingPlatformAuthenticatorAvailable>
<summary>
The <strong><c>isUserVerifyingPlatformAuthenticatorAvailable()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface returns a {{jsxref("Promise")}} which resolves to <c>true</c> if a user-verifying platform authenticator is present.
</summary>
<remarks>
<para>A user-verifying platform authenticator is a kind of multi-factor authenticator that is part of the client device (it is generally not removable) and that involves an action from the user in order to identify them. Common user-verifying platform authenticators include:</para><blockquote class="NOTE"><h5>NOTE</h5><para>This method may only be used in top-level contexts and will not be available in an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see> for example.</para></blockquote>
<para>-<see href="https://learn.microsoft.com/en-us/windows-hardware/design/device-experiences/windows-hello">Windows Hello</see><br/>-<see href="https://learn.microsoft.com/en-us/archive/microsoft-edge/legacy/developer/">Web Authentication and Windows Hello - MSDN Guide</see> and especially the <see href="https://learn.microsoft.com/en-us/archive/microsoft-edge/legacy/developer/#special-considerations-for-windows-hello">special considerations mentioning <c>isUserVerifyingPlatformAuthenticator()</c></see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/isUserVerifyingPlatformAuthenticatorAvailable"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> which resolves to a boolean value indicating whether or a not a user-verifying platform authenticator is available.<blockquote class="NOTE"><h5>NOTE</h5>In earlier versions of the specification, the boolean also conveyed the consent of the user to disclose such an authenticator existed.</blockquote></returns>
</PublicKeyCredentialIsUserVerifyingPlatformAuthenticatorAvailable>
<PublicKeyCredentialIsConditionalMediationAvailable>
<summary>
The <strong><c>isConditionalMediationAvailable()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface returns a {{jsxref("Promise")}} which resolves to <c>true</c> if <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API#discoverable_credentials_and_conditional_mediation">conditional mediation</see> is available.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/isConditionalMediationAvailable"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> which resolves to a boolean value indicating whether or not conditional mediation is available.</returns>
</PublicKeyCredentialIsConditionalMediationAvailable>
<PublicKeyCredentialRawId>
<summary>
The <strong><c>rawId</c></strong> read-only property of the<br/><see cref="PublicKeyCredential"/> interface is an {{jsxref("ArrayBuffer")}} object<br/>containing the identifier of the credentials.
</summary>
<remarks>
<para>The <see cref="PublicKeyCredential.Id"/> property is a <see href="https://developer.mozilla.org/en-US/docs/Glossary/Base64">base64url encoded</see> version of this identifier.</para><blockquote class="NOTE"><h5>NOTE</h5><para>This property may only be used in top-level contexts and will<br/>not be available in an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see> for example.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/rawId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ArrayBuffer"/> containing the identifier of the credentials. This<br/>identifier is expected to be globally unique and is appointed for the current<br/><c>PublicKeyCredential</c> and its associated<br/><see cref="AuthenticatorAssertionResponse"/>.</value>
</PublicKeyCredentialRawId>
<PublicKeyCredentialSignalAllAcceptedCredentials>
<summary>
The <strong><c>signalAllAcceptedCredentials()</c></strong> static method of the <see cref="PublicKeyCredential"/> interface signals to the authenticator all of the valid <see href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions#id">credential IDs</see> that the <see href="https://en.wikipedia.org/wiki/Relying_party">relying party</see> (RP) server still holds for a particular user.
</summary>
<remarks>
<para>This allows the authenticator to update credential information, removing all credentials that are no longer recognized by the RP, such as those for deleted accounts. The method should be called each time a user authenticates with the RP.</para><para><c>signalAllAcceptedCredentials()</c> should <strong>only</strong> be called when the current user is authenticated â€” after sign up or sign-in, or when the user deletes a credential â€” as it exposes sensitive information belonging to the user.</para>
<para>-<see cref="PublicKeyCredential.SignalCurrentUserDetails"/><br/>-<see cref="PublicKeyCredential.SignalUnknownCredential"/><br/>-<see href="https://developer.chrome.com/docs/identity/webauthn-signal-api">Keep passkeys consistent with credentials on your server with the Signal API</see> on developer.chrome.com (2024)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/signalAllAcceptedCredentials"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves to <see cref="Undefined"/>.</returns>
</PublicKeyCredentialSignalAllAcceptedCredentials>
<PublicKeyCredentialId>
<summary>
The <strong><c>id</c></strong> read-only property of the<br/><see cref="PublicKeyCredential"/> interface is a string, inherited<br/>from <see cref="Credential"/>, which represents the identifier of the current<br/><c>PublicKeyCredential</c> instance.
</summary>
<remarks>
<para>This property is a <see href="https://developer.mozilla.org/en-US/docs/Glossary/Base64">base64url encoded</see> version of <see cref="PublicKeyCredential.RawId"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>This property may only be used in top-level contexts and will<br/>not be available in an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe">iframe</see> for example.</para></blockquote>
<para>-<see cref="Credential.Id"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/id"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string being the <see href="https://developer.mozilla.org/en-US/docs/Glossary/Base64">base64url encoded</see> version of <see cref="PublicKeyCredential.RawId"/>.</value>
</PublicKeyCredentialId>
<PublicKeyCredentialAuthenticatorAttachment>
<summary>
The <strong><c>authenticatorAttachment</c></strong> read-only property of the <see cref="PublicKeyCredential"/> interface is a string that indicates the general category of authenticator used during the associated <see cref="CredentialsContainer.Create"/> or <see cref="CredentialsContainer.Get"/> call.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/authenticatorAttachment"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string, which will be one of the following values:</value>
</PublicKeyCredentialAuthenticatorAttachment>
<PublicKeyCredentialToJSON>
<summary>
The <strong><c>toJSON()</c></strong> method of the <see cref="PublicKeyCredential"/> interface returns a {{glossary("JSON type representation")}} of a <see cref="PublicKeyCredential"/>.
</summary>
<remarks>
<para>The properties of the returned object depend on whether the credential is returned by <see href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create"><c>navigator.credentials.create()</c></see> when <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API#creating_a_key_pair_and_registering_a_user">creating a key pair and registering a user</see>, or <see href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get"><c>navigator.credentials.get()</c></see> when <see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API#authenticating_a_user">authenticating a user</see>.</para><para>This method is automatically invoked when web app code calls <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"><c>JSON.stringify()</c></see> to serialize a <see cref="PublicKeyCredential"/> so that it can be sent to relying party server when registering or authenticating a user.<br/>It not intended to be called directly in web app code.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API">Web Authentication API</see><br/>-<see cref="PublicKeyCredential.ParseCreationOptionsFromJSON"/><br/>-<see cref="PublicKeyCredential.ParseRequestOptionsFromJSON"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/toJSON"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see href="https://developer.mozilla.org/en-US/docs/Glossary/JSON type representation">JSON type representation</see> of a <see href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential"><c>PublicKeyCredential</c></see> object.The included properties depend on whether the credential was returned by <see href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create"><c>navigator.credentials.create()</c></see> on registration, or <see href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get"><c>navigator.credentials.get()</c></see> when authenticating a user.<br/>The values and types of included properties are the same as for <see href="https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential"><c>PublicKeyCredential</c></see>, with the exception that <see href="https://developer.mozilla.org/en-US/docs/Glossary/Base64">base64url</see>-encoded strings are used in place of buffer properties.The object properties are:</returns>
</PublicKeyCredentialToJSON>
</docs>