<docs>
<ReadableByteStreamController>
<summary>
The <strong><c>ReadableByteStreamController</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API</see> represents a controller for a <see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">readable byte stream</see>.<br/>It allows control of the state and internal queue of a <see cref="ReadableStream"/> with an underlying byte source, and enables efficient zero-copy transfer of data from the underlying source to a consumer when the stream's internal queue is empty.
</summary>
<remarks>
<para>An instance of this controller type is created if an <c>underlyingSource</c> object with the property <c>type=&amp;quot;bytes&amp;quot;</c> is passed as an argument to the <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#type"><c>ReadableStream()</c> constructor</see>.<br/>The <c>underlyingSource</c> object may also define <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#start"><c>start()</c></see> and <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#pull"><c>pull()</c></see> callback functions.<br/>These are called with the controller as a parameter, in order to set up the underlying source, and request data when needed.</para><para>The underlying source uses the controller to supply data to the stream via its <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/byobRequest"><c>byobRequest</c></see> property or <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/enqueue"><c>enqueue()</c></see> method.<br/><c>byobRequest</c> is a <see cref="ReadableStreamBYOBRequest"/> object that represents a pending request from a consumer to make a zero-copy transfer of data direct to a consumer.<br/><c>byobRequest</c> must be used to copy data if it exists (do not use <c>enqueue()</c> in this case)!<br/>If the underlying source needs to pass data to the stream and <c>byobRequest</c> is <c>null</c> then the source can call <c>enqueue()</c> to add the data to the stream&amp;apos;s internal queues.</para><para>Note that the <c>byobRequest</c> is only created in &amp;quot;BYOB mode&amp;quot; when there is a request from a reader and the stream&amp;apos;s internal queue is empty.<br/>"BYOB mode" is enabled when using a <see cref="ReadableStreamBYOBReader"/> (typically constructed by calling <see cref="ReadableStream.GetReader"/> with the argument <c>{ mode: &amp;apos;byob&amp;apos; }</c>).<br/>It is also enabled when using a default reader and <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#autoallocatechunksize"><c>autoAllocateChunkSize</c></see> is specified in the <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream"><c>ReadableStream()</c> constructor</see>.</para><para>An underlying byte source can also use the controller to <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/close"><c>close()</c></see> the stream when all the data has been sent and report errors from the underlying source using <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/error"><c>error()</c></see>.<br/>The controller&amp;apos;s <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/desiredSize"><c>desiredSize</c></see> property is used to apply &amp;quot;backpressure&amp;quot;, informing the underlying source of the size of the internal queue (small values indicate that the queue is filling up, hinting to the underlying source that it is be desirable to pause or throttle the inflow).</para><para>Note that even though the controller is primarily used by the underlying byte source, there is no reason it cannot be stored used by other parts of the system to signal the stream.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API concepts</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte streams</see><br/>-<see cref="ReadableStream"/><br/>-<see href="https://github.com/MattiasBuelens/web-streams-polyfill">Web-streams-polyfill</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ReadableByteStreamController>
<ReadableByteStreamControllerError>
<summary>
The <strong><c>error()</c></strong> method of the <see cref="ReadableByteStreamController"/> interface causes any future interactions with the associated stream to error with the specified reason.
</summary>
<remarks>
<para>This is commonly called by an underlying source to surface an error from the interface where it gets its data (such as a file-read or socket error).<br/>It can also be called from elsewhere to trigger a stream error, for example if another part of the system that the stream relies on fails.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte streams</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/error"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</ReadableByteStreamControllerError>
<ReadableByteStreamControllerByobRequest>
<summary>
The <strong><c>byobRequest</c></strong> read-only property of the <see cref="ReadableByteStreamController"/> interface returns the current BYOB request, or <c>null</c> if there are no pending requests.
</summary>
<remarks>
<para>An underlying byte source should check this property, and use it to write data to the stream if it exists (rather than using <see cref="ReadableByteStreamController.Enqueue"/>).<br/>This will result in an efficient zero-byte transfer of the data to the consumer.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte streams</see><br/>-<see cref="ReadableByteStreamController"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/byobRequest"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ReadableStreamBYOBRequest"/> object instance, or <c>null</c>.</value>
</ReadableByteStreamControllerByobRequest>
<ReadableByteStreamControllerDesiredSize>
<summary>
The <strong><c>desiredSize</c></strong> read-only property of the <see cref="ReadableByteStreamController"/> interface returns the number of bytes required to fill the stream's internal queue to its "desired size".
</summary>
<remarks>
<para>The value is used by the stream to indicate a preferred flow rate to the underlying source.<br/>Sources that support throttling or pausing their inflow of data (not all do!) should control the inflow such that <c>desiredSize</c> of the stream buffer is kept positive and as close to zero as possible.</para><para>The <c>desiredSize</c> is used to apply <see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Concepts#backpressure">backpressure</see> from downstream consumers.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte streams</see><br/>-<see cref="ReadableByteStreamController"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/desiredSize"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An integer. Note that this can be negative if the queue is over-full.The value will be <c>null</c> if the stream has errored and <c>0</c> if it is closed.</value>
</ReadableByteStreamControllerDesiredSize>
<ReadableByteStreamControllerClose>
<summary>
The <strong><c>close()</c></strong> method of the <see cref="ReadableByteStreamController"/> interface closes the associated stream.
</summary>
<remarks>
<para>This might be called by the underlying source when its data source has been exhausted/completed.</para><blockquote class="NOTE"><h5>NOTE</h5><para>Readers will still be able to read any previously-enqueued chunks from the stream, but once those are read, the stream will become closed.<br/>However if there is an outstanding and partially written <see cref="ReadableByteStreamController.ByobRequest"/> when <c>close()</c> is called, the stream will be errored.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte streams</see><br/>-<see cref="ReadableByteStreamController"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/close"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</ReadableByteStreamControllerClose>
<ReadableByteStreamControllerEnqueue>
<summary>
The <strong><c>enqueue()</c></strong> method of the <see cref="ReadableByteStreamController"/> interface enqueues a given chunk on the associated readable byte stream (the chunk is transferred into the stream's internal queues).
</summary>
<remarks>
<para>This should only be used to transfer data to the queue when <see cref="ReadableByteStreamController.ByobRequest"/> is <c>null</c>.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte streams</see><br/>-<see cref="ReadableByteStreamController"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/enqueue"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</ReadableByteStreamControllerEnqueue>
</docs>