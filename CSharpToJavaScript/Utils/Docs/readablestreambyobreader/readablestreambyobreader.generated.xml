<docs>
<ReadableStreamBYOBReader>
<summary>
The <c>ReadableStreamBYOBReader</c> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API</see> defines a reader for a <see cref="ReadableStream"/> that supports zero-copy reading from an underlying byte source.<br/>It is used for efficient copying from underlying sources where the data is delivered as an &amp;quot;anonymous&amp;quot; sequence of bytes, such as files.
</summary>
<remarks>
<para>An instance of this reader type should usually be obtained by calling <see cref="ReadableStream.GetReader"/> on the stream, specifying <c>mode: &amp;quot;byob&amp;quot;</c> in the options parameter.<br/>The readable stream must have an <strong>underlying byte source</strong>. In other words, it must have been <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream">constructed</see> specifying an underlying source with <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream#type"><c>type: &amp;quot;bytes&amp;quot;</c></see>).</para><para>Using this kind of reader, a <see href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/read"><c>read()</c></see> request when the readable stream&amp;apos;s internal queues are empty will result in a zero copy transfer from the underlying source (bypassing the stream&amp;apos;s internal queues).<br/>If the internal queues are not empty, a <c>read()</c> will satisfy the request from the buffered data.</para><para>Note that the methods and properties are similar to those for the default reader (<see cref="ReadableStreamDefaultReader"/>).<br/>The <c>read()</c> method differs in that it provides a view into which data should be written.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API">Streams API concepts</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte stream</see><br/>-<see cref="ReadableStream"/><br/>-<see href="https://github.com/MattiasBuelens/web-streams-polyfill">Web-streams-polyfill</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ReadableStreamBYOBReader>
<ReadableStreamBYOBReaderReadableStreamBYOBReader>
<summary>
The <strong><c>ReadableStreamBYOBReader()</c></strong> constructor creates and returns a <c>ReadableStreamBYOBReader</c> object instance.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>You generally wouldn&amp;apos;t use this constructor manually;<br/>instead, you'd use the <see cref="ReadableStream.GetReader"/> method with the argument <c>&amp;quot;byob&amp;quot;</c>.</para></blockquote>
<para>-<see cref="ReadableStreamBYOBReader"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte stream</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/ReadableStreamBYOBReader"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>An instance of the <see cref="ReadableStreamBYOBReader"/> object.</returns>
</ReadableStreamBYOBReaderReadableStreamBYOBReader>
<ReadableStreamBYOBReaderReleaseLock>
<summary>
The <strong><c>releaseLock()</c></strong> method of the <see cref="ReadableStreamBYOBReader"/> interface releases the reader's lock on the stream.<br/>After the lock is released, the reader is no longer active.
</summary>
<remarks>
<para>The reader will appear errored if the associated stream is errored when the lock is released; otherwise, the reader will appear closed.</para><para>If the reader's lock is released while it still has pending read requests then the promises returned by the reader's <see cref="ReadableStreamBYOBReader.Read"/> method are immediately rejected with a <c>TypeError</c>.<br/>Unread chunks remain in the stream&amp;apos;s internal queue and can be read later by acquiring a new reader.</para>
<para>-<see cref="ReadableStreamBYOBReader.ReadableStreamBYOBReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte stream</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/releaseLock"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</ReadableStreamBYOBReaderReleaseLock>
<ReadableStreamBYOBReaderCancel>
<summary>
The <strong><c>cancel()</c></strong> method of the <see cref="ReadableStreamBYOBReader"/> interface returns a {{jsxref("Promise")}} that resolves when the stream is canceled.<br/>Calling this method signals a loss of interest in the stream by a consumer.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>If the reader is active, the <c>cancel()</c> method behaves the same as that for the associated stream (<see cref="ReadableStream.Cancel"/>).</para></blockquote>
<para>-<see cref="ReadableStreamBYOBReader.ReadableStreamBYOBReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte stream</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/cancel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>, which fulfills with the value given in the <c>reason</c> parameter.</returns>
</ReadableStreamBYOBReaderCancel>
<ReadableStreamBYOBReaderClosed>
<summary>
The <strong><c>closed</c></strong> read-only property of the <see cref="ReadableStreamBYOBReader"/> interface returns a {{jsxref("Promise")}} that fulfills when the stream closes, or rejects if the stream throws an error or the reader's lock is released.
</summary>
<remarks>
<para>This property enables you to write code that responds to an end to the streaming process.</para>
<para>-<see cref="ReadableStreamBYOBReader.ReadableStreamBYOBReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte stream</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/closed"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="Promise"/>.</value>
</ReadableStreamBYOBReaderClosed>
<ReadableStreamBYOBReaderRead>
<summary>
The <strong><c>read()</c></strong> method of the <see cref="ReadableStreamBYOBReader"/> interface is used to read data into a view on a user-supplied buffer from an associated <see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">readable byte stream</see>.<br/>A request for data will be satisfied from the stream&amp;apos;s internal queues if there is any data present.<br/>If the stream queues are empty, the request may be supplied as a zero-copy transfer from the underlying byte source.
</summary>
<remarks>
<para>The method takes as an argument a view on a buffer that supplied data is to be read into, and returns a <see cref="Promise"/>.<br/>The promise fulfills with an object that has properties <c>value</c> and <c>done</c> when data comes available, or if the stream is cancelled.<br/>If the stream is errored, the promise will be rejected with the relevant error object.</para><para>When a chunk of data is supplied, the <c>value</c> property will contain a new view.<br/>This will be a view over the same buffer/backing memory (and of the same type) as the original <c>view</c> passed to the <c>read()</c> method, now populated with the new chunk of data.<br/>Note that once the promise fulfills, the original <c>view</c> passed to the method will be detached and no longer usable.<br/>The promise will fulfill with a <c>value: undefined</c> if the stream has been cancelled.<br/>In this case the backing memory region of <c>view</c> is discarded and not returned to the caller (all previously read data in the view&amp;apos;s buffer is lost).</para><para>The <c>done</c> property indicates whether or not more data is expected.<br/>The value is set <c>true</c> if the stream is closed or cancelled, and <c>false</c> otherwise.</para><para>The method also has an optional <c>options.min</c> argument that can be used to specify the minimum number of elements that must be available before the promise will fulfill, while the stream is active.<br/>The view returned in the <c>value</c> property will always have at least this number of elements, except when the stream is closed.</para>
<para>-<see cref="ReadableStreamBYOBReader.ReadableStreamBYOBReader"/> constructor<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams">Using readable byte stream</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/read"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/>, which fulfills/rejects with a result depending on the state of the stream. The result object contains two properties, <c>value</c> and <c>done</c>.The following are possible:</returns>
</ReadableStreamBYOBReaderRead>
</docs>