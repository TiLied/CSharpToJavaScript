<docs>
<RTCInboundRtpStreamStats>
<summary>
The <strong><c>RTCInboundRtpStreamStats</c></strong> dictionary of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see> is used to report statistics related to the receiving end of an RTP stream on the local end of the <see cref="RTCPeerConnection"/>.
</summary>
<remarks>
<para>The statistics can be obtained by iterating the <see cref="RTCStatsReport"/> returned by <see cref="RTCPeerConnection.GetStats"/> or <see cref="RTCRtpReceiver.GetStats"/> until you find a report with the <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/type"><c>type</c></see> of <c>inbound-rtp</c>.</para>
<para>-<see cref="RTCStatsReport"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats"> <em>See also on MDN</em> </seealso></para>
</remarks>
</RTCInboundRtpStreamStats>
<RTCInboundRtpStreamStatsJitterBufferDelay>
<summary>
The <strong><c>jitterBufferDelay</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the accumulated time that all audio samples and complete video frames have spent in the {{glossary("jitter","jitter buffer")}}.
</summary>
<remarks>
<para>For an audio sample the time is calculated from the time that the sample is received by the jitter buffer (&amp;quot;ingest timestamp&amp;quot;), until the time that the sample is emitted (&amp;quot;exit timestamp&amp;quot;).<br/>For a video frame, the ingest time is when the first packet in the frame was ingested until the time at which the whole frame exits the buffer.<br/>Note that several audio samples in an RTP packet will have the same ingest timestamp but different exit timestamps, while a video frame might be split across a number of RTP packets.</para><para><c>jitterBufferDelay</c> is incremented, along with <see cref="RTCInboundRtpStreamStats.JitterBufferEmittedCount"/>, when samples or frames exit the buffer.<br/>The average jitter buffer delay is <c>jitterBufferDelay / jitterBufferEmittedCount</c>.</para><para>The jitter buffer may hold samples/frames for a longer (or shorter) delay, allowing samples to build up in the buffer so that it can provide a more smooth and continuous playout.<br/>A low and relatively constant <c>jitterBufferDelay</c> is desirable, as it indicates the buffer does not need to hold as many frames/samples, and the network is stable.<br/>Higher values might indicate that the network is less reliable or predictable.</para><para>Similarly, a steady average delay indicates a more stable network, while a rising average delay indicates growing latency.</para>
<para>-<see cref="RTCInboundRtpStreamStats.JitterBufferEmittedCount"/><br/>-<see cref="RTCInboundRtpStreamStats.JitterBufferMinimumDelay"/><br/>-<see cref="RTCInboundRtpStreamStats.JitterBufferTargetDelay"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferDelay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number, in seconds.</value>
</RTCInboundRtpStreamStatsJitterBufferDelay>
<RTCInboundRtpStreamStatsConcealmentEvents>
<summary>
The <strong><c>concealmentEvents</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of concealment events for the received audio track over the lifetime of this stats object.
</summary>
<remarks>
<para>A concealed sample is a sample that was lost or arrived too late to be played out, and therefore had to be replaced with a locally generated synthesized sample.<br/>Any number of consecutive concealed samples following a non-concealed sample comprise a single concealment event.<br/>The value in this property will therefore be less than or equal to <see cref="RTCInboundRtpStreamStats.ConcealedSamples"/>, which counts every sample.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.ConcealedSamples"/><br/>-<see cref="RTCInboundRtpStreamStats.SilentConcealedSamples"/><br/>-<see href="https://en.wikipedia.org/wiki/Packet_loss_concealment">Packet loss concealment</see> on Wikipedia<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/concealmentEvents"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsConcealmentEvents>
<RTCInboundRtpStreamStatsNackCount>
<summary>
The <strong><c>nackCount</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the number of times the receiver sent a <strong>NACK</strong> packet to the sender.
</summary>
<remarks>
<para>A NACK (Negative ACKnowledgement, also called "Generic NACK") packet tells the sender that one or more of the <see href="https://developer.mozilla.org/en-US/docs/Glossary/RTP">RTP</see> packets it sent were lost in transport.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/nackCount"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsNackCount>
<RTCInboundRtpStreamStatsFrameHeight>
<summary>
The <strong><c>frameHeight</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the height of the last decoded frame, in pixels.
</summary>
<remarks>
<para>Note that the resolution of the encoded frame may be lower than that of the media source, which is provided in <see cref="RTCVideoSourceStats.Height"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams, and before the first frame is decoded.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/frameHeight"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer, in pixels.</value>
</RTCInboundRtpStreamStatsFrameHeight>
<RTCInboundRtpStreamStatsFreezeCount>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>freezeCount</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of video freezes experienced by this receiver.
</summary>
<remarks>
<para>A freeze is counted if the interval between two rendered frames is equal to or greater than the larger of &amp;quot;three times the average duration&amp;quot;, or &amp;quot;the average + 150ms&amp;quot;.<br/>This ensures that the delay required to increment the freeze count scales appropriately with the frame rate.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for audio streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.TotalFreezesDuration"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/freezeCount"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsFreezeCount>
<RTCInboundRtpStreamStatsTotalSamplesDuration>
<summary>
The <strong><c>totalSamplesDuration</c></strong> property of the <see cref="RTCRemoteInboundRtpStreamStats"/> dictionary indicates the total duration of all audio samples that have been received.<br/>In other words, the current duration of the track.
</summary>
<remarks>
<para>This can be used with <see cref="RTCInboundRtpStreamStatstotalAudioEnergy"/> to compute an average audio level over different intervals.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCAudioSourceStats.TotalSamplesDuration"/> for the audio duration of sent samples.<br/>-<see cref="RTCInboundRtpStreamStatstotalSamplesReceived"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalSamplesDuration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalSamplesDuration>
<RTCInboundRtpStreamStatsCodecId>
<summary>
The <strong><c>codecId</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string that uniquely identifies the object that was inspected to produce the data in the <see cref="RTCCodecStats"/> for the {{Glossary("RTP")}} stream.
</summary>
<remarks>
<para><c>RTCInboundRtpStreamStats</c> and <c>RTCCodecStats</c> objects are correlated by iterating the <see cref="RTCStatsReport"/> to find the statistics objects where <c>RTCInboundRtpStreamStats.codecId</c> is equal to <see cref="RTCCodecStats.Id"/>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/codecId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string that contains the <see cref="RTCCodecStats.Id"/> of the object that was inspected to produce the <see cref="RTCCodecStats"/> object associated with this RTP stream.</value>
</RTCInboundRtpStreamStatsCodecId>
<RTCInboundRtpStreamStatsTotalDecodeTime>
<summary>
The <strong><c>totalDecodeTime</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total time spend decoding frames for this media source/stream, in seconds.
</summary>
<remarks>
<para>The time it takes to decode one frame is the time passed between feeding the decoder a frame and the decoder returning decoded data for that frame.</para><para>The number of decoded frames is given in <see cref="RTCInboundRtpStreamStats.FramesDecoded"/>, and the average decode time is <c>totalDecodeTime / framesDecoded</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.FramesDecoded"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalDecodeTime"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalDecodeTime>
<RTCInboundRtpStreamStatsBytesReceived>
<summary>
The <strong><c>bytesReceived</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of bytes received so far from this synchronization source (SSRC), not including header and padding bytes.
</summary>
<remarks>
<para>The value can be used to calculate an approximation of the average media data rate:</para><para>The property value is reset to zero if the sender&amp;apos;s SSRC identifier changes for any reason.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/bytesReceived"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer.</value>
</RTCInboundRtpStreamStatsBytesReceived>
<RTCInboundRtpStreamStatsTotalProcessingDelay>
<summary>
The <strong><c>totalProcessingDelay</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total accumulated time spent processing audio or video samples, in seconds.
</summary>
<remarks>
<para>The processing time for each audio or video sample is calculated from the time the first RTP packet is received (reception timestamp) to the time that the corresponding sample or frame is decoded (decoded timestamp).<br/>At this point the audio sample or video frame is fully decoded by the decoder and is ready for playout by the <see cref="MediaStreamTrack"/>.</para><para>For audio streams, an RTP packet may contain multiple audio samples: these will share the same reception timestamp.<br/>For video streams, a complete frame may arrive in several RTP packets, and the reception timestamp is that of the first RTP packet that was received that contains data for the frame.<br/>In both cases the decoded timestamp is the time at which the sample or frame is ready to play.</para><para>For video, the property only accumulates for decoded frames (not those that were dropped).<br/>The average processing delay can be calculated by dividing the <c>totalProcessingDelay</c> with the <see cref="RTCInboundRtpStreamStats.FramesDecoded"/>. &amp;lt;!-- audio samples can&amp;apos;t get average - totalSamplesDecoded not in spec yet or implemented --&amp;gt;</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalProcessingDelay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalProcessingDelay>
<RTCInboundRtpStreamStatsJitter>
<summary>
The <strong><c>jitter</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the packet interarrival {{glossary("jitter")}} for this <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/ssrc">synchronization source (SSRC)</see>, in seconds.
</summary>
<remarks>
<para>The packet jitter is calculated as defined in {{rfc("RFC3550",,"6.4.1")}}.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitter"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number, in seconds.</value>
</RTCInboundRtpStreamStatsJitter>
<RTCInboundRtpStreamStatsPauseCount>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>pauseCount</c></strong> property of the <see cref="RTCRemoteInboundRtpStreamStats"/> dictionary indicates the total number of pauses experienced by this receiver.
</summary>
<remarks>
<para>A pause is counted when a new frame is rendered more than 5 seconds after the last frame was rendered.</para><para>The average pause duration can be calculated using <c>totalPausesDuration / pauseCount</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.TotalPausesDuration"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/pauseCount"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer.</value>
</RTCInboundRtpStreamStatsPauseCount>
<RTCInboundRtpStreamStatsHeaderBytesReceived>
<summary>
The <strong><c>headerBytesReceived</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of RTP header and padding bytes received for this <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/ssrc">synchronization source (SSRC)</see>, including those sent in retransmissions.
</summary>
<remarks>
<para>Note that the total number of bytes received as payload over the transport is equal to: <c>headerBytesReceived</c> + <see cref="RTCInboundRtpStreamStats.BytesReceived"/>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/headerBytesReceived"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsHeaderBytesReceived>
<RTCInboundRtpStreamStatsSilentConcealedSamples>
<summary>
The <strong><c>silentConcealedSamples</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of silent concealed samples for the received audio track over the lifetime of this stats object.
</summary>
<remarks>
<para>A concealed sample is a sample that was lost or arrived too late to be played out, and therefore had to be replaced with a locally generated synthesized sample.<br/>A silent concealed sample is one where the inserted sample is either silent or <see href="https://en.wikipedia.org/wiki/Comfort_noise">comfort noise</see>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.ConcealedSamples"/><br/>-<see cref="RTCInboundRtpStreamStats.ConcealmentEvents"/><br/>-<see href="https://en.wikipedia.org/wiki/Packet_loss_concealment">Packet loss concealment</see> on Wikipedia<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/silentConcealedSamples"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsSilentConcealedSamples>
<RTCInboundRtpStreamStatsTransportId>
<summary>
The <strong><c>transportId</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string that uniquely identifies the associated <see cref="RTCTransportStats"/> statistics object for this RTP stream's underlying transport.
</summary>
<remarks>
<para><c>RTCInboundRtpStreamStats</c> and <c>RTCTransportStats</c> objects are correlated by iterating the <see cref="RTCStatsReport"/> to find the statistics objects where <c>RTCInboundRtpStreamStats.transportId</c> is equal to <see cref="RTCTransportStats.Id"/>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/transportId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string that contains the <see cref="RTCTransportStats.Id"/> of the object that was inspected to produce the <see cref="RTCTransportStats"/> object associated with this RTP stream.</value>
</RTCInboundRtpStreamStatsTransportId>
<RTCInboundRtpStreamStatsTotalFreezesDuration>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>totalFreezesDuration</c></strong> property of the <see cref="RTCRemoteInboundRtpStreamStats"/> dictionary indicates the total time that the video in this stream has spent frozen, in seconds.
</summary>
<remarks>
<para>A freeze is counted if the interval between two rendered frames is equal or greater than the larger of &amp;quot;three times the average duration&amp;quot;, or &amp;quot;the average + 150ms&amp;quot;, and the time taken between frames is added to the <c>totalFreezesDuration</c>.</para><para>The average freeze duration can be calculated using <c>totalFreezesDuration / freezeCount</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.FreezeCount"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalFreezesDuration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalFreezesDuration>
<RTCInboundRtpStreamStatsKind>
<summary>
The <strong><c>kind</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string indicating whether the described {{Glossary("RTP")}} stream contains audio or video media.
</summary>
<remarks>
<para>This string will always be the same as the <see cref="MediaStreamTrack.Kind"/> of the <see cref="MediaStreamTrack"/> object carried by the stream.<br/>It will also match the media type of the codec associated with this statistics objects (i.e., the MIME type of the associated codec's <see cref="RTCCodecStats.MimeType"/> property).</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/kind"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The kind is always one of:</value>
</RTCInboundRtpStreamStatsKind>
<RTCInboundRtpStreamStatsTotalSamplesReceived>
<summary>
The <strong><c>totalSamplesReceived</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of samples received on this stream, including <see cref="RTCInboundRtpStreamStatsconcealedSamples"/>.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalSamplesReceived"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer.</value>
</RTCInboundRtpStreamStatsTotalSamplesReceived>
<RTCInboundRtpStreamStatsPacketsDiscarded>
<summary>
The <strong><c>packetsDiscarded</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the cumulative number of {{Glossary("RTP")}} packets that have been discarded by the {{glossary("jitter","jitter buffer")}} due to late or early-arrival, and are hence not played out.
</summary>
<remarks>
<para>The value does not include packets that are discarded to due to packet duplication.</para>
<para>-<see cref="RTCRemoteInboundRtpStreamStats.PacketsLost"/><br/>-<see cref="RTCRemoteInboundRtpStreamStats.PacketsReceived"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsDiscarded"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer value.This is calculated as defined in {{rfc("7002",,"3.2")}} (and appendix A.a.)</value>
</RTCInboundRtpStreamStatsPacketsDiscarded>
<RTCInboundRtpStreamStatsConcealedSamples>
<summary>
The <strong><c>concealedSamples</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of concealed samples for the received audio track over the lifetime of this stats object.
</summary>
<remarks>
<para>A concealed sample is a sample that was lost or arrived too late to be played out, and therefore had to be replaced with a locally generated synthesized sample.<br/>Note that lost samples are reported in <see cref="RTCInboundRtpStreamStats.PacketsLost"/>, while late packets are reported in <see cref="RTCInboundRtpStreamStats.FecPacketsDiscarded"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.SilentConcealedSamples"/><br/>-<see cref="RTCInboundRtpStreamStats.ConcealmentEvents"/><br/>-<see href="https://en.wikipedia.org/wiki/Packet_loss_concealment">Packet loss concealment</see> on Wikipedia<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/concealedSamples"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsConcealedSamples>
<RTCInboundRtpStreamStatsTotalAssemblyTime>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>totalAssemblyTime</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total time spent assembling successfully decoded video frames that were transported in multiple RTP packets.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalAssemblyTime"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalAssemblyTime>
<RTCInboundRtpStreamStatsEstimatedPlayoutTimestamp>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>estimatedPlayoutTimestamp</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the estimated playout time of this receiver's track.
</summary>
<remarks>
<para>This is the <see href="https://en.wikipedia.org/wiki/Network_Time_Protocol">Network Time Protocol (NTP)</see> timestamp of the last playable audio sample or video frame that has a known timestamp, extrapolated with the time elapsed since it was ready to be played out.<br/>In other words, it is the estimated current playout time of the track in the NTP clock time of the sender, and can be present even if there is no audio currently playing.</para><para>This can be used to estimate how much audio and video tracks from the same source are out of sync.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/estimatedPlayoutTimestamp"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMHighResTimeStamp"/>.</value>
</RTCInboundRtpStreamStatsEstimatedPlayoutTimestamp>
<RTCInboundRtpStreamStatsJitterBufferEmittedCount>
<summary>
The <strong><c>jitterBufferEmittedCount</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of audio samples and/or video frames that have come out of the {{glossary("jitter","jitter buffer")}}.
</summary>
<remarks>
<para>The <c>jitterBufferEmittedCount</c> and <see cref="RTCInboundRtpStreamStats.JitterBufferDelay"/> are incremented when samples or frames exit the buffer.<br/>The average jitter buffer delay is <c>jitterBufferDelay / jitterBufferEmittedCount</c>.</para>
<para>-<see cref="RTCInboundRtpStreamStatsjitterBufferDelay"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferEmittedCount"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number.</value>
</RTCInboundRtpStreamStatsJitterBufferEmittedCount>
<RTCInboundRtpStreamStatsRemovedSamplesForAcceleration>
<summary>
The <strong><c>removedSamplesForAcceleration</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary accumulates the difference between the number of samples played out of the {{glossary("jitter","jitter buffer")}} and the number of samples received while audio playout is sped up.
</summary>
<remarks>
<para>The WebRTC jitter buffer sets a target playout delay level such that the inflow and outflow of the jitter buffer should be approximately the same.<br/>If the jitter buffer empties too slowly the audio sample that is next in line to be output may be &amp;quot;behind schedule&amp;quot;, and the engine may speed up playout to catch up.<br/>If the engine speeds up playout by removing some audio samples, this property indicates the accumulated number of such removed samples.</para><para>Speeding up or slowing down the audio (as tracked with <see cref="RTCInboundRtpStreamStats.InsertedSamplesForDeceleration"/>) may result in audible warbling or other distortion.<br/>The totals at the end of the call also give you some indication of how many samples or seconds were impacted, and <c>removedSamplesForAcceleration</c> can be correlated with <see cref="RTCInboundRtpStreamStatstotalSamplesReceived"/> to get a relative measure of acceleration.<br/>Logging <c>insertedSamplesForDeceleration</c> and <c>removedSamplesForAcceleration</c> in timeslices can be helpful for isolating the times at which the problem occurred and you can then correlate other metrics in the same timeslice to determine likely causes.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.InsertedSamplesForDeceleration"/><br/>-<see href="https://webrtchacks.com/how-webrtcs-neteq-jitter-buffer-provides-smooth-audio/#post-4560-_mv3ivinthkf5">The better way</see> in &amp;quot;How WebRTC&amp;apos;s NetEQ Jitter Buffer Provides Smooth Audio&amp;quot; (webrtchacks.com, June 2025)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/removedSamplesForAcceleration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsRemovedSamplesForAcceleration>
<RTCInboundRtpStreamStatsSsrc>
<summary>
The <strong><c>ssrc</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary identifies the synchronization source (SSRC) of this stream of {{Glossary("RTP")}} packets.
</summary>
<remarks>
<para>-<see cref="RTCRtpReceiver.GetSynchronizationSources"/><br/>-<see cref="RTCEncodedAudioFrame.GetMetadata"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/ssrc"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsSsrc>
<RTCInboundRtpStreamStatsTotalInterFrameDelay>
<summary>
The <strong><c>totalInterFrameDelay</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total accumulated time between consecutively rendered frames, in seconds.<br/>It is recorded after each frame is rendered.
</summary>
<remarks>
<para>The inter-frame delay variance can be calculated from <c>totalInterFrameDelay</c>, <see cref="RTCInboundRtpStreamStats.TotalSquaredInterFrameDelay"/> , and <see cref="RTCInboundRtpStreamStats.FramesRendered"/> according to the formula: <c>(totalSquaredInterFrameDelay - totalInterFrameDelay^2/ framesRendered)/framesRendered</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalInterFrameDelay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalInterFrameDelay>
<RTCInboundRtpStreamStatsAudioLevel>
<summary>
The <strong><c>audioLevel</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the audio level of the received (remote) track.
</summary>
<remarks>
<para>The <c>audioLevel</c> is averaged over some small interval, using the algorithm described under <see cref="RTCInboundRtpStreamStats.TotalAudioEnergy"/>.<br/>The interval used is implementation dependent.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCAudioSourceStats.AudioLevel"/> for audio levels of local tracks (that are being sent)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/audioLevel"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A real number.The value is between 0..1 (linear), where 1.0 represents 0 dBov (<see href="https://en.wikipedia.org/wiki/DBFS">decibels relative to full scale (DBFS)</see>), 0 represents silence, and 0.5 represents approximately 6 dB SPL change in the <see href="https://en.wikipedia.org/wiki/Sound_pressure#Sound_pressure_level">sound pressure level</see> from 0 dBov.</value>
</RTCInboundRtpStreamStatsAudioLevel>
<RTCInboundRtpStreamStatsFramesDecoded>
<summary>
The <strong><c>framesDecoded</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of video frames which have been decoded successfully for this media source.
</summary>
<remarks>
<para>This represents the number of frames that would have been displayed assuming no frames were skipped.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.TotalDecodeTime"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer.</value>
</RTCInboundRtpStreamStatsFramesDecoded>
<RTCInboundRtpStreamStatsKeyFramesDecoded>
<summary>
The <strong><c>keyFramesDecoded</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary represents the total number of key frames successfully decoded in this RTP media stream.<br/>This includes, for example, key frames in VP8 ({{rfc("6386")}}) or IDR-frames in H.264 ({{rfc("6184")}}).
</summary>
<remarks>
<para>Note that the number of delta frames is calculated by subtracting this value from the total number of frames (<see cref="RTCInboundRtpStreamStats.FramesDecoded"/> - <c>keyFramesEncoded</c>).</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/keyFramesDecoded"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsKeyFramesDecoded>
<RTCInboundRtpStreamStatsFrameWidth>
<summary>
The <strong><c>frameWidth</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the width of the last decoded frame, in pixels.
</summary>
<remarks>
<para>Note that the resolution of the encoded frame may be lower than that of the media source, which is provided in <see cref="RTCVideoSourceStats.Width"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for audio streams, or before the first frame is encoded.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/frameWidth"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer, in pixels.</value>
</RTCInboundRtpStreamStatsFrameWidth>
<RTCInboundRtpStreamStatsPacketsLost>
<summary>
The <strong><c>packetsLost</c></strong> property of the <see cref="RTCRemoteInboundRtpStreamStats"/> dictionary returns the total number of {{Glossary("RTP")}} packets lost from the <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/ssrc">synchronization source (SSRC)</see> since the beginning of reception.
</summary>
<remarks>
<para>Note that this can be negative.</para>
<para>-<see cref="RTCInboundRtpStreamStats.Ssrc"/><br/>-<see cref="RTCRemoteInboundRtpStreamStats.PacketsLost"/><br/>-<see cref="RTCInboundRtpStreamStats.PacketsDiscarded"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsLost"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An integer value.The value is determined by subtracting the number of packets received from the number of packets that are expected.<br/>The number of packets that are expected is calculated in a way that assumes that all packets only need to be sent once (based on sequence numbers), while the number of packets received also includes any packets that had to be resent (and hence may be bigger).<br/>For more information see the &amp;quot;cumulative number of packets lost&amp;quot; section in {{RFC(&amp;quot;3550&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;6.4.1&amp;quot;)}}.</value>
</RTCInboundRtpStreamStatsPacketsLost>
<RTCInboundRtpStreamStatsJitterBufferTargetDelay>
<summary>
The <strong><c>jitterBufferTargetDelay</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the accumulated target {{glossary("jitter","jitter buffer")}} delay, in seconds.
</summary>
<remarks>
<para>The target jitter buffer delay is the playout delay that the jitter buffer estimates that it needs to maintain in order to compensate for jitter and ensure smooth playback.<br/>The estimate is affected by network variability and latency as well as mechanisms such as AV synchronization. Developers can influence it by setting the <see cref="RTCRtpReceiver.JitterBufferTarget"/> property.</para><para>The property is updated when <see cref="RTCInboundRtpStreamStats.JitterBufferEmittedCount"/> is updated.<br/>The average target jitter buffer delay is <c>jitterBufferTargetDelay / jitterBufferEmittedCount</c>.</para><para>The property can be compared to the average of the <see cref="RTCInboundRtpStreamStats.JitterBufferMinimumDelay"/> to determine the effects of external factors on the target, such as the configured <c>jitterBufferTarget</c> hint.</para>
<para>-<see cref="RTCInboundRtpStreamStats.JitterBufferEmittedCount"/><br/>-<see cref="RTCInboundRtpStreamStats.JitterBufferMinimumDelay"/><br/>-<see cref="RTCInboundRtpStreamStats.JitterBufferDelay"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferTargetDelay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number, in seconds.</value>
</RTCInboundRtpStreamStatsJitterBufferTargetDelay>
<RTCInboundRtpStreamStatsFecPacketsReceived>
<summary>
The <strong><c>fecPacketsReceived</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates how many Forward Error Correction (FEC) packets have been received by this RTP receiver from the remote peer.
</summary>
<remarks>
<para>A FEC packet provides parity information that can be used to attempt to reconstruct RTP data packets which have been corrupted in transit.</para>
<para>-{{RFC(5109)}} (RTP Payload Format for Generic Forward Error Correction)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsReceived"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer value.</value>
</RTCInboundRtpStreamStatsFecPacketsReceived>
<RTCInboundRtpStreamStatsInsertedSamplesForDeceleration>
<summary>
The <strong><c>insertedSamplesForDeceleration</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary accumulates the difference between the number of samples received and the number of samples played out of the {{glossary("jitter","jitter buffer")}} while audio playout is slowed down.
</summary>
<remarks>
<para>The WebRTC jitter buffer sets a target playout delay level such that the inflow and outflow of the jitter buffer should be approximately the same.<br/>If the jitter buffer empties too quickly the audio sample that is next in line to be output may be &amp;quot;ahead of schedule&amp;quot;, and the jitter buffer may slow down playout.<br/>If the jitter buffer slows down the playout of the sample by inserting additional audio samples, this property indicates the accumulated number of such added samples.</para><para>Slowing down and/or speeding up the audio (as tracked with <see cref="RTCInboundRtpStreamStats.RemovedSamplesForAcceleration"/>) may result in audible warbling or other distortion.<br/>The totals at the end of the call also give you some indication of how many samples or seconds were impacted, and <c>insertedSamplesForDeceleration</c> can be correlated with <see cref="RTCInboundRtpStreamStatstotalSamplesReceived"/> to get a relative measure of deceleration.<br/>Logging <c>insertedSamplesForDeceleration</c> and <c>removedSamplesForAcceleration</c> in timeslices can be helpful for isolating the times at which the problem occurred and you can then correlate other metrics in the same timeslice to determine likely causes.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.RemovedSamplesForAcceleration"/><br/>-<see href="https://webrtchacks.com/how-webrtcs-neteq-jitter-buffer-provides-smooth-audio/#post-4560-_mv3ivinthkf5">The better way</see> in &amp;quot;How WebRTC&amp;apos;s NetEQ Jitter Buffer Provides Smooth Audio&amp;quot; (webrtchacks.com, June 2025)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/insertedSamplesForDeceleration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsInsertedSamplesForDeceleration>
<RTCInboundRtpStreamStatsFramesPerSecond>
<summary>
The <strong><c>framesPerSecond</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the number of frames decoded in the last second.
</summary>
<remarks>
<para>Note that this may be lower than the media source frame rate, which is provided in <see cref="RTCVideoSourceStats.FramesPerSecond"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesPerSecond"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsFramesPerSecond>
<RTCInboundRtpStreamStatsTotalSquaredInterFrameDelay>
<summary>
The <strong><c>totalSquaredInterFrameDelay</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the sum of the square of each inter-frame delay between consecutively rendered frames.<br/>It is recorded after each frame is rendered.
</summary>
<remarks>
<para>The inter-frame delay variance be calculated from <see cref="RTCInboundRtpStreamStats.TotalInterFrameDelay"/>, <c>totalSquaredInterFrameDelay</c>, and <see cref="RTCInboundRtpStreamStats.FramesRendered"/>, according to the formula: <c>(totalSquaredInterFrameDelay - totalInterFrameDelay^2/ framesRendered)/framesRendered</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalSquaredInterFrameDelay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number.</value>
</RTCInboundRtpStreamStatsTotalSquaredInterFrameDelay>
<RTCInboundRtpStreamStatsLastPacketReceivedTimestamp>
<summary>
The <strong><c>lastPacketReceivedTimestamp</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the time at which the most recently received packet arrived from this source.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/lastPacketReceivedTimestamp"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMHighResTimeStamp"/> which specifies the time at which the most recently received packet arrived on this RTP stream.<blockquote class="NOTE"><h5>NOTE</h5>This value differs from the <see cref="RTCInboundRtpStreamStats.Timestamp"/>,<br/>which represents the time at which the statistics object was created.</blockquote></value>
</RTCInboundRtpStreamStatsLastPacketReceivedTimestamp>
<RTCInboundRtpStreamStatsQpSum>
<summary>
The <strong><c>qpSum</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the sum of the <strong>Quantization Parameter</strong> (<strong>QP</strong>) values for every frame sent or received on the video track corresponding to this <c>RTCInboundRtpStreamStats</c> object.
</summary>
<remarks>
<para>In general, a larger numbers indicates that the video data is more heavily compressed.</para><blockquote class="NOTE"><h5>NOTE</h5><para>This value is only available for video media.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsQpSum>
<RTCInboundRtpStreamStatsPacketsReceived>
<summary>
The <strong><c>packetsReceived</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary returns the total number of {{Glossary("RTP")}} packets received from the <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/ssrc">synchronization source (SSRC)</see> of this stream, including retransmissions.
</summary>
<remarks>
<para>-<see cref="RTCInboundRtpStreamStats.Ssrc"/><br/>-<see cref="RTCRemoteInboundRtpStreamStats.PacketsReceived"/><br/>-<see cref="RTCInboundRtpStreamStats.PacketsLost"/><br/>-<see cref="RTCInboundRtpStreamStats.PacketsLost"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsReceived"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer value.</value>
</RTCInboundRtpStreamStatsPacketsReceived>
<RTCInboundRtpStreamStatsFramesAssembledFromMultiplePackets>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>framesAssembledFromMultiplePackets</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of correctly decoded frames for this RTP stream that were assembled from more than one RTP packet.
</summary>
<remarks>
<para>This property can be used with <see cref="RTCInboundRtpStreamStatstotalAssemblyTime"/> to determine the average assembly time: <c>totalAssemblyTime / framesAssembledFromMultiplePacket</c>.<br/>A higher average assembly time might indicate network issues or inefficiencies in the receiving pipeline.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesAssembledFromMultiplePackets"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive integer.</value>
</RTCInboundRtpStreamStatsFramesAssembledFromMultiplePackets>
<RTCInboundRtpStreamStatsTrackIdentifier>
<summary>
The <strong><c>trackIdentifier</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string that identifies the <c>MediaStreamTrack</c> associated with the inbound stream.
</summary>
<remarks>
<para>This value will match the <see cref="MediaStreamTrack.Id"/> value of the associated track.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/trackIdentifier"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string that identifies the associated media track.</value>
</RTCInboundRtpStreamStatsTrackIdentifier>
<RTCInboundRtpStreamStatsPlayoutId>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>playoutId</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the <see cref="RTCAudioPlayoutStats.Id"/> of the <see cref="RTCAudioPlayoutStats"/> object that corresponds to this stream.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/playoutId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.</value>
</RTCInboundRtpStreamStatsPlayoutId>
<RTCInboundRtpStreamStatsType>
<summary>
The <strong><c>type</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string with the value <c>&amp;quot;inbound-rtp&amp;quot;</c>.
</summary>
<remarks>
<para>Different statistics are obtained by iterating the <see cref="RTCStatsReport"/> object returned by a call to <see cref="RTCPeerConnection.GetStats"/>.<br/>The type indicates the set of statistics available through the object in a particular iteration step.<br/>A value of <c>&amp;quot;inbound-rtp&amp;quot;</c> indicates that the statistics available in the current step are those defined in <see cref="RTCInboundRtpStreamStats"/>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/type"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string with the value <c>&amp;quot;inbound-rtp&amp;quot;</c>.</value>
</RTCInboundRtpStreamStatsType>
<RTCInboundRtpStreamStatsJitterBufferMinimumDelay>
<summary>
The <strong><c>jitterBufferMinimumDelay</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the minimum {{glossary("jitter","jitter buffer")}} delay that might be achieved given only the network characteristics such as jitter and packet loss.
</summary>
<remarks>
<para>The jitter buffer delay may be impacted by user settings such as <see cref="RTCRtpReceiver.JitterBufferTarget"/>, and WebRTC mechanisms such as AV synchronization.<br/><c>jitterBufferMinimumDelay</c> can be compared to the <see cref="RTCInboundRtpStreamStats.JitterBufferTargetDelay"/> to examine the effect of these external factors on the delay.</para><para>The property is updated when <see cref="RTCInboundRtpStreamStats.JitterBufferEmittedCount"/> is updated.</para>
<para>-<see cref="RTCInboundRtpStreamStats.JitterBufferEmittedCount"/><br/>-<see cref="RTCInboundRtpStreamStats.JitterBufferDelay"/><br/>-<see cref="RTCInboundRtpStreamStats.JitterBufferTargetDelay"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferMinimumDelay"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number, in seconds.</value>
</RTCInboundRtpStreamStatsJitterBufferMinimumDelay>
<RTCInboundRtpStreamStatsFecPacketsDiscarded>
<summary>
The <strong><c>fecPacketsDiscarded</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the number of {{Glossary("RTP")}} Forward Error Correction (FEC) packets that have been discarded.
</summary>
<remarks>
<para>A FEC packet provides parity information that can be used to attempt to reconstruct RTP data packets which have been corrupted in transit.<br/>This kind of packet might be discarded if all the packets that it covers have already been received or recovered using another FEC packet, or if the FEC packet arrived outside the recovery window and the lost RTP packets have already been skipped during playback as a result.<br/>The value of <see cref="RTCInboundRtpStreamStatsfecPacketsReceived"/> includes these discarded packets.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsDiscarded"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive integer value.</value>
</RTCInboundRtpStreamStatsFecPacketsDiscarded>
<RTCInboundRtpStreamStatsFramesReceived>
<summary>
The <strong><c>framesReceived</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary indicates the total number of complete frames received on this RTP stream over its lifetime.
</summary>
<remarks>
<para>Note that this may be lower than the total number of media source frames, which is provided in <see cref="RTCVideoSourceStats.Frames"/>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for audio streams.</para></blockquote>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesReceived"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A positive number.</value>
</RTCInboundRtpStreamStatsFramesReceived>
<RTCInboundRtpStreamStatsMid>
<summary>
The <strong><c>mid</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string that contains the media id negotiated between the local and remote peers.<br/>This uniquely identifies the pairing of source and destination for the transceiver&amp;apos;s stream.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/mid"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The value of the corresponding <see cref="RTCRtpTransceiver.Mid"/>, unless that value is null, in which case this statistic property is not present.</value>
</RTCInboundRtpStreamStatsMid>
<RTCInboundRtpStreamStatsTotalAudioEnergy>
<summary>
The <strong><c>totalAudioEnergy</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary represents the total audio energy of a received audio track over the lifetime of this stats object.
</summary>
<remarks>
<para>The total energy across a particular duration can be determined by subtracting the value of this property returned by two different <c>getStats()</c> calls.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The value is undefined for video streams.</para></blockquote>
<para>-<see cref="RTCAudioSourceStats.TotalAudioEnergy"/> for audio energy of local tracks (that are being sent)<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalAudioEnergy"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number produced by summing the energy of every sample over the lifetime of this stats object.The energy of each sample is calculated by dividing the sample&amp;apos;s value by the highest-intensity encodable value, squaring the result, and then multiplying by the duration of the sample in seconds.<br/>This is shown as an equation below:Note that if multiple audio channels are used, the audio energy of a sample refers to the highest energy of any channel.</value>
</RTCInboundRtpStreamStatsTotalAudioEnergy>
<RTCInboundRtpStreamStatsRemoteId>
<summary>
The <strong><c>remoteId</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary specifies the <see cref="RTCInboundRtpStreamStats.Id"/> of the <see cref="RTCRemoteOutboundRtpStreamStats"/> object representing the remote peer's <see cref="RTCRtpSender"/> which is sending the media to the local peer.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string.</value>
</RTCInboundRtpStreamStatsRemoteId>
<RTCInboundRtpStreamStatsId>
<summary>
The <strong><c>id</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a string that uniquely identifies the object for which this object provides statistics.
</summary>
<remarks>
<para>Using the <c>id</c>, you can correlate this statistics object with others, in order to monitor statistics over time for a given WebRTC object, such as an <see cref="RTCPeerConnection"/>, or an <see cref="RTCDataChannel"/>.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/id"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string that uniquely identifies the object for which this <c>RTCInboundRtpStreamStats</c> object provides statistics.The format of the ID string is not defined by the specification, so you cannot reliably make any assumptions about the contents of the string, or assume that the format of the string will remain unchanged for a given object type.</value>
</RTCInboundRtpStreamStatsId>
<RTCInboundRtpStreamStatsTimestamp>
<summary>
The <strong><c>timestamp</c></strong> property of the <see cref="RTCInboundRtpStreamStats"/> dictionary is a <see cref="DOMHighResTimeStamp"/> object specifying the time at which the data in the object was sampled.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/timestamp"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMHighResTimeStamp"/> value indicating the time at which the activity described by the statistics in this object was recorded, in milliseconds elapsed since the beginning of January 1, 1970, UTC.The value should be accurate to within a few milliseconds but may not be entirely precise, either because of hardware or operating system limitations or because of <see href="https://developer.mozilla.org/en-US/docs/Glossary/Fingerprinting">fingerprinting</see> protection in the form of reduced clock precision or accuracy.</value>
</RTCInboundRtpStreamStatsTimestamp>
<RTCInboundRtpStreamStatsTotalPausesDuration>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>totalPausesDuration</c></strong> property of the <see cref="RTCRemoteInboundRtpStreamStats"/> dictionary indicates the total time that the video in this stream has spent paused, in seconds
</summary>
<remarks>
<para>A pause is counted when a new frame is rendered more than 5 seconds after the last frame was rendered, and the time taken between frames is added to the <c>totalPausesDuration</c>.</para><para>The average pause duration can be calculated using <c>totalPausesDuration / pauseCount</c>.</para><blockquote class="NOTE"><h5>NOTE</h5><para>The property is undefined for audio streams.</para></blockquote>
<para>-<see cref="RTCInboundRtpStreamStats.PauseCount"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalPausesDuration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An positive number, in seconds.</value>
</RTCInboundRtpStreamStatsTotalPausesDuration>
</docs>