<docs>
<RTCRtpTransceiver>
<summary>
The WebRTC interface <strong><c>RTCRtpTransceiver</c></strong> describes a permanent pairing of an <see cref="RTCRtpSender"/> and an <see cref="RTCRtpReceiver"/>, along with some shared state.
</summary>
<remarks>
<para>Each {{Glossary("SDP")}} media section describes one bidirectional SRTP ("Secure Real Time Protocol") stream (excepting the media section for <see cref="RTCDataChannel"/>, if present).<br/>This pairing of send and receive SRTP streams is significant for some applications, so <c>RTCRtpTransceiver</c> is used to represent this pairing, along with other important state from the media section.<br/>Each non-disabled SRTP media section is always represented by exactly one transceiver.</para><para>A transceiver is uniquely identified using its <see cref="RTCRtpTransceiver.Mid"/> property, which is the same as the media ID (<c>mid</c>) of its corresponding m-line. An <c>RTCRtpTransceiver</c> is <strong>associated</strong> with an m-line if its <c>mid</c> is non-null; otherwise it&amp;apos;s considered disassociated.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/>-<see cref="RTCPeerConnection.AddTrack"/> and <see cref="RTCPeerConnection.AddTransceiver"/> both create transceivers<br/>-<see cref="RTCRtpReceiver"/> and <see cref="RTCRtpSender"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver"> <em>See also on MDN</em> </seealso></para>
</remarks>
</RTCRtpTransceiver>
<RTCRtpTransceiverStop>
<summary>
The <strong><c>stop()</c></strong> method in the <see cref="RTCRtpTransceiver"/> interface permanently stops the transceiver by stopping both the associated <see cref="RTCRtpSender"/> and<br/><see cref="RTCRtpReceiver"/>.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/>-<see cref="MediaStreamTrack"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stop"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</RTCRtpTransceiverStop>
<RTCRtpTransceiverSetCodecPreferences>
<summary>
The <strong><c>setCodecPreferences()</c></strong> method of the <see cref="RTCRtpTransceiver"/> interface is used to set the codecs that the transceiver allows for decoding <strong>received</strong> data, in order of decreasing preference.
</summary>
<remarks>
<para>The preferences set using this method influence what codecs are negotiated with the remote peer for encoding the data that it sends, including those used for retransmission, redundancy, and forward error correction.<br/>Codecs that are not included in the preferences list will not be part of the negotiation.<br/>Note that the preferences used by this transceiver for <strong>sending</strong> content depend on the preferences of the remote peer.</para><para>The recommended way to set codec preferences is to first get the array of codecs that are actually supported for decoding received data, then reorder them your in decreasing preference order.<br/>This ensures that the array is ordered as required, does not contain any unsupported codecs, and also that it also contains codecs that are needed for retransmission, redundancy, and forward error correction.</para><para>The specified set of codecs will be used for all future connections that include this transceiver until this method is called again.</para><para>When preparing to open an <see cref="RTCPeerConnection"/> the codecs should be set using <c>setCodecPreferences()</c> <strong>before</strong> calling either <see cref="RTCPeerConnection.CreateOffer"/> or <see cref="RTCPeerConnection.CreateAnswer"/>, as these initiate the negotiation (and will use codec parameters from the {{Glossary("user agent", "user agent's")}} default configuration by default).</para><para>The codecs can be changed when you have an ongoing communication, but you need to first call <c>setCodecPreferences()</c> and then kick off a new negotiation.<br/>A WebRTC application will already have code for this in the <see href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event"><c>negotiationneeded</c> event handler</see>.<br/>Note however that at time of writing the event is not automatically fired when you call <c>setCodecPreferences()</c>, so you will have to call <c>onnegotiationneeded</c> yourself.</para><para>A guide to codecs supported by WebRTC—and each codec&amp;apos;s positive and negative characteristics—can be found in <see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Formats/WebRTC_codecs">Codecs used by WebRTC</see>.</para>
<para>-<see href="https://blog.mozilla.org/webrtc/cross-browser-support-for-choosing-webrtc-codecs/">setCodecPreferences is now in all browsers!</see> on blog.mozilla.org (2024)<br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media/Guides/Formats/WebRTC_codecs">Codecs used by WebRTC</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/Media">Web media technologies</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</RTCRtpTransceiverSetCodecPreferences>
<RTCRtpTransceiverStopped>
<summary>
<div class="IMPORTANT"><h5>IMPORTANT</h5> <strong>Deprecated</strong></div> <blockquote class="NOTE"><h5>NOTE</h5>Instead of using this deprecated property, compare <see cref="RTCRtpTransceiver.CurrentDirection"/> to <c>&amp;quot;stopped&amp;quot;</c>.</blockquote>
</summary>
<remarks>
<para>The read-only <strong><c>stopped</c></strong> property on the <see cref="RTCRtpTransceiver"/> interface indicates whether or not the transceiver's associated sender and receiver have both been stopped.</para><para>The transceiver is stopped if the <see cref="RTCRtpTransceiver.Stop"/> method has been called or if a change to either the local or the remote description has caused the transceiver to be stopped for some reason.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API">WebRTC API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stopped"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A Boolean value which is <c>true</c> if the transceiver&amp;apos;s<br/><see cref="RTCRtpTransceiver.Sender"/> will no longer send data, and its<br/><see cref="RTCRtpTransceiver.Receiver"/> will no longer receive data. If<br/>either or both are still at work, the result is <c>false</c>.</value>
</RTCRtpTransceiverStopped>
<RTCRtpTransceiverDirection>
<summary>
The <see cref="RTCRtpTransceiver"/> property <strong><c>direction</c></strong> is a string that indicates the transceiver&amp;apos;s <strong>preferred</strong> directionality.
</summary>
<remarks>
<para>The directionality indicates whether the transceiver will offer to send and/or receive <see href="https://developer.mozilla.org/en-US/docs/Glossary/RTP">RTP</see> data, or whether it is inactive or stopped (terminated).<br/>When setting the transceiver&amp;apos;s direction, the value is not applied immediately.<br/>The <strong>current</strong> direction is indicated by the <see cref="RTCRtpTransceiver.CurrentDirection"/> property.</para>
<para>-<see cref="RTCRtpTransceiver.CurrentDirection"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/direction"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string with one of the following values:</value>
</RTCRtpTransceiverDirection>
<RTCRtpTransceiverSender>
<summary>
The read-only <strong><c>sender</c></strong> property<br/>of WebRTC's <see cref="RTCRtpTransceiver"/> interface indicates the<br/><see cref="RTCRtpSender"/> responsible for encoding and sending outgoing media data<br/>for the transceiver&amp;apos;s stream.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/>-<see cref="RTCRtpSender"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/sender"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="RTCRtpSender"/> object used to encode and send media whose media ID<br/>matches the current value of <see cref="RTCRtpTransceiver.Mid"/>.</value>
</RTCRtpTransceiverSender>
<RTCRtpTransceiverReceiver>
<summary>
The read-only <strong><c>receiver</c></strong> property<br/>of WebRTC's <see cref="RTCRtpTransceiver"/> interface indicates the<br/><see cref="RTCRtpReceiver"/> responsible for receiving and decoding incoming media<br/>data for the transceiver&amp;apos;s stream.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/>-<see cref="RTCRtpReceiver"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/receiver"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="RTCRtpReceiver"/> object which is responsible for receiving and decoding<br/>incoming media data whose media ID is the same as the current value of<br/><see cref="RTCRtpTransceiver.Mid"/>.</value>
</RTCRtpTransceiverReceiver>
<RTCRtpTransceiverCurrentDirection>
<summary>
The read-only <see cref="RTCRtpTransceiver"/> property <strong><c>currentDirection</c></strong> is a string which indicates the current negotiated directionality of the transceiver.
</summary>
<remarks>
<para>The directionality indicates whether the transceiver will offer to send and/or receive <see href="https://developer.mozilla.org/en-US/docs/Glossary/RTP">RTP</see> data, or whether it is inactive or stopped and won't send or receive data.</para><para>The transceiver's preferred directionality can be set and read using the <see cref="RTCRtpTransceiver.Direction"/> property.<br/>Changing the <c>direction</c> triggers a renegotiation, which may eventually result in the <c>currentDirection</c> also changing.</para>
<para>-<see cref="RTCRtpTransceiver.Direction"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The value is initially <c>null</c>, prior to negotiation using an offer/answer.After negotiation the value is a string with one of the following values:</value>
</RTCRtpTransceiverCurrentDirection>
<RTCRtpTransceiverMid>
<summary>
The read-only <see cref="RTCRtpTransceiver"/> interface's<br/><strong><c>mid</c></strong> property specifies the negotiated media ID<br/>(<c>mid</c>) which the local and remote peers have agreed upon to uniquely<br/>identify the stream&amp;apos;s pairing of sender and receiver.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP">Introduction to the Real-time Transport Protocol (RTP)</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/mid"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string which uniquely identifies the pairing of source and<br/>destination of the transceiver&amp;apos;s stream. Its value is taken from the media ID of the SDP<br/>m-line. This value is <c>null</c> if negotiation has not completed.</value>
</RTCRtpTransceiverMid>
</docs>