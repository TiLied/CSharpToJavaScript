<docs>
<ServiceWorkerGlobalScope>
<summary>
The <strong><c>ServiceWorkerGlobalScope</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</see> represents the global execution context of a service worker.
</summary>
<remarks>
<para>Developers should keep in mind that the ServiceWorker state is not persisted across the termination/restart cycle, so each event handler should assume it&amp;apos;s being invoked with a bare, default global state.</para><para>Once successfully registered, a service worker can and will be terminated when idle to conserve memory and processor power. An active service worker is automatically restarted to respond to events, such as <see cref="ServiceWorkerGlobalScope.Fetch"/> or <see cref="ServiceWorkerGlobalScope.Message"/>.</para><para>Additionally, synchronous requests are not allowed from within a service worker â€” only asynchronous requests, like those initiated via the <see cref="WorkerGlobalScopefetch"/> method, can be used.</para><para>This interface inherits from the <see cref="WorkerGlobalScope"/> interface, and its parent <see cref="EventTarget"/>.</para><para></para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScope>
<ServiceWorkerGlobalScopePush>
<summary>
The <strong><c>push</c></strong> event is sent to a service worker's global scope (represented by the <see cref="ServiceWorkerGlobalScope"/> interface) when the service worker has received a push message.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Push_API">Using the Push API</see><br/>-<see cref="ServiceWorkerGlobalScopepushsubscriptionchange"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/push"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopePush>
<ServiceWorkerGlobalScopeInstall>
<summary>
The <strong><c>install</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when a <see cref="ServiceWorkerRegistration"/> acquires a new <see cref="ServiceWorkerRegistration.Installing"/> worker.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="ServiceWorkerGlobalScopeactivate"/> event<br/>-<see cref="ServiceWorkerGlobalScope"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/install"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeInstall>
<ServiceWorkerGlobalScopeBackgroundfetchfail>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>backgroundfetchfail</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when a <see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">background fetch</see> operation has failed: that is, when at least one network request in the fetch has failed to complete successfully.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">Background Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchfail"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeBackgroundfetchfail>
<ServiceWorkerGlobalScopeSync>
<summary>
The <strong><c>sync</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when the page (or worker) that registered the event with the <see cref="'SyncManager'"/> is running and as soon as network connectivity is available.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/periodic-background-sync">Richer offline experiences with the Periodic Background Sync API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/sync"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeSync>
<ServiceWorkerGlobalScopeNotificationclose>
<summary>
The <strong><c>notificationclose</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface fires when a user closes a displayed notification spawned by <see cref="ServiceWorkerRegistration.ShowNotification"/>.
</summary>
<remarks>
<para>Notifications created on the main thread or in workers which aren&amp;apos;t service workers<br/>using the <see cref="Notification.Notification"/> constructor will<br/>instead receive a <see cref="Notificationclose"/> event on the <see cref="Notification"/> object<br/>itself.</para><para>This event is not cancelable and does not bubble.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclose"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeNotificationclose>
<ServiceWorkerGlobalScopeContentdelete>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>contentdelete</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when an item is removed from the indexed content via the user agent.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Content_Index_API">Content index API</see><br/>-<see href="https://developer.chrome.com/docs/capabilities/web-apis/content-indexing-api">An introductory article on the Content Index API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/contentdelete"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeContentdelete>
<ServiceWorkerGlobalScopeCanmakepayment>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>canmakepayment</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired on a payment app's service worker to check whether it is ready to handle a payment. Specifically, it is fired when the merchant website calls the <see cref="PaymentRequest.PaymentRequest"/> constructor.
</summary>
<remarks>
<para>-{{domxref(&amp;quot;Payment Handler API&amp;quot;, &amp;quot;Payment Handler API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://web.dev/articles/web-based-payment-apps-overview">Web-based payment apps overview</see><br/>-<see href="https://web.dev/articles/setting-up-a-payment-method">Setting up a payment method</see><br/>-<see href="https://web.dev/articles/life-of-a-payment-transaction">Life of a payment transaction</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API/Using_the_Payment_Request_API">Using the Payment Request API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API/Concepts">Payment processing concepts</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/canmakepayment"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeCanmakepayment>
<ServiceWorkerGlobalScopeFetch>
<summary>
The <strong><c>fetch</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired in the service worker's global scope when the main app thread makes a network request. It enables the service worker to intercept network requests and send customized responses (for example, from a local cache).
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see cref="WorkerGlobalScopefetch"/> method<br/>-<see cref="Request"/> interface<br/>-<see cref="Response"/> interface<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeFetch>
<ServiceWorkerGlobalScopePushsubscriptionchange>
<summary>
The <strong><c>pushsubscriptionchange</c></strong> event is sent to the <see href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope">global scope</see> of a <see cref="ServiceWorker"/> to indicate a change in push subscription that was triggered outside the application's control.
</summary>
<remarks>
<para>This may occur if the subscription was refreshed by the browser, but it may also happen if the subscription has been revoked or lost.</para><para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Push_API">Using the Push API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopePushsubscriptionchange>
<ServiceWorkerGlobalScopePeriodicsync>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>periodicsync</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired at timed intervals, specified when registering a <see cref="'PeriodicSyncManager'"/>.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.chrome.com/docs/capabilities/periodic-background-sync">Richer offline experiences with the Periodic Background Sync API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/periodicsync"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopePeriodicsync>
<ServiceWorkerGlobalScopeBackgroundfetchsuccess>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>backgroundfetchsuccess</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when a <see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">background fetch</see> operation has completed successfully: that is, when all network requests in the fetch have completed successfully.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">Background Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchsuccess"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeBackgroundfetchsuccess>
<ServiceWorkerGlobalScopeClients>
<summary>
The <strong><c>clients</c></strong> read-only property of the<br/><see cref="ServiceWorkerGlobalScope"/> interface returns the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Clients"><c>Clients</c></see><br/>object associated with the service worker.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>The <see cref="Clients"/> object associated with the specific worker.</value>
</ServiceWorkerGlobalScopeClients>
<ServiceWorkerGlobalScopeServiceWorker>
<summary>
The <strong><c>serviceWorker</c></strong> read-only property of the <see cref="ServiceWorkerGlobalScope"/> interface returns a reference to the <see cref="ServiceWorker"/> object, which represents the service worker.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/serviceWorker"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ServiceWorker"/> object.</value>
</ServiceWorkerGlobalScopeServiceWorker>
<ServiceWorkerGlobalScopePaymentrequest>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>paymentrequest</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired on a payment app when a payment flow has been initiated on the merchant website via the <see cref="PaymentRequest.Show"/> method.
</summary>
<remarks>
<para>-{{domxref(&amp;quot;Payment Handler API&amp;quot;, &amp;quot;Payment Handler API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://web.dev/articles/web-based-payment-apps-overview">Web-based payment apps overview</see><br/>-<see href="https://web.dev/articles/setting-up-a-payment-method">Setting up a payment method</see><br/>-<see href="https://web.dev/articles/life-of-a-payment-transaction">Life of a payment transaction</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API/Using_the_Payment_Request_API">Using the Payment Request API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API/Concepts">Payment processing concepts</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/paymentrequest"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopePaymentrequest>
<ServiceWorkerGlobalScopeActivate>
<summary>
The <strong><c>activate</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when a <see cref="ServiceWorkerRegistration"/> acquires a new <see cref="ServiceWorkerRegistration.Active"/> worker.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="ServiceWorkerGlobalScopeinstall"/> event<br/>-<see cref="ServiceWorkerGlobalScope"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeActivate>
<ServiceWorkerGlobalScopeRegistration>
<summary>
The <strong><c>registration</c></strong> read-only property of the <see cref="ServiceWorkerGlobalScope"/> interface returns a reference to the <see cref="ServiceWorkerRegistration"/> object, which represents the service worker's registration.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="ServiceWorkerRegistration"/> object.</value>
</ServiceWorkerGlobalScopeRegistration>
<ServiceWorkerGlobalScopeCookieStore>
<summary>
The <strong><c>cookieStore</c></strong> read-only property of the <see cref="ServiceWorkerGlobalScope"/> interface returns a reference to the <see cref="CookieStore"/> object associated with this service worker.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookieStore"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="CookieStore"/> object instance.</value>
</ServiceWorkerGlobalScopeCookieStore>
<ServiceWorkerGlobalScopeCookiechange>
<summary>
The <strong><c>cookiechange</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when a cookie change occurs that matches the service worker's cookie change subscription list.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookiechange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeCookiechange>
<ServiceWorkerGlobalScopeMessageerror>
<summary>
The <strong><c>messageerror</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface occurs when incoming messages can't be deserialized.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see cref="ServiceWorkerGlobalScopemessage"/><br/>-<see cref="ServiceWorker.PostMessage"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/messageerror"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeMessageerror>
<ServiceWorkerGlobalScopeBackgroundfetchabort>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>backgroundfetchabort</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when the user or the app itself cancels a <see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">background fetch</see> operation.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">Background Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchabort"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeBackgroundfetchabort>
<ServiceWorkerGlobalScopeNotificationclick>
<summary>
The <strong><c>notificationclick</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired to indicate that a system notification spawned by <see cref="ServiceWorkerRegistration.ShowNotification"/> has been clicked.
</summary>
<remarks>
<para>Notifications created on the main thread or in workers which aren&amp;apos;t service workers<br/>using the <see cref="Notification.Notification"/> constructor will<br/>instead receive a <see cref="Notificationclick"/> event on the <see cref="Notification"/> object<br/>itself.</para><para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API">Notifications API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclick"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeNotificationclick>
<ServiceWorkerGlobalScopeSkipWaiting>
<summary>
The <strong><c>skipWaiting()</c></strong> method of the <see cref="ServiceWorkerGlobalScope"/> interface forces the waiting service worker to become the active service worker.
</summary>
<remarks>
<para>Use this method with <see cref="Clients.Claim"/> to ensure that updates to the underlying service worker take effect immediately for both the current client and all other active clients.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see cref="Clients.Claim"/><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A <see cref="Promise"/> that resolves with <c>undefined</c> after trying to activate the newly installed service worker.</returns>
</ServiceWorkerGlobalScopeSkipWaiting>
<ServiceWorkerGlobalScopeBackgroundfetchclick>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>backgroundfetchclick</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface is fired when the user clicks on the UI that the browser provides to show the user the progress of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">background fetch</see> operation.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Background_Fetch_API">Background Fetch API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchclick"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeBackgroundfetchclick>
<ServiceWorkerGlobalScopeMessage>
<summary>
The <strong><c>message</c></strong> event of the <see cref="ServiceWorkerGlobalScope"/> interface occurs when incoming messages are received. Controlled pages can use the <see cref="ServiceWorker.PostMessage"/> method to send messages to service workers.<br/>The service worker can optionally send a response back via the <see cref="Client.PostMessage"/>, corresponding to the controlled page.
</summary>
<remarks>
<para>This event is not cancelable and does not bubble.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</see><br/>-<see href="https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker">Service workers basic code example</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Using web workers</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/message"> <em>See also on MDN</em> </seealso></para>
</remarks>
</ServiceWorkerGlobalScopeMessage>
</docs>