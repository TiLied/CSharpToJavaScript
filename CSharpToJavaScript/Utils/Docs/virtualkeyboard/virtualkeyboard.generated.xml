<docs>
<VirtualKeyboard>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>VirtualKeyboard</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard_API">VirtualKeyboard API</see> is useful on devices that have on-screen virtual keyboards, such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.
</summary>
<remarks>
<para>The <c>VirtualKeyboard</c> interface makes it possible to opt out of the automatic way browsers handle on-screen virtual keyboards by reducing the height of the viewport to make room for the virtual keyboard. You can prevent the browser from changing the size of the viewport, detect the position and size of the virtual keyboard — adapting the layout of your web page as a follow-up — and programmatically show or hide the virtual keyboard.</para><para>You access the <c>VirtualKeyboard</c> interface by using <see cref="Navigator.VirtualKeyboard"/>.</para><para></para>
<para>-{{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;The VirtualKeyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard"> <em>See also on MDN</em> </seealso></para>
</remarks>
</VirtualKeyboard>
<VirtualKeyboardOverlaysContent>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>overlaysContent</c></strong> property of the VirtualKeyboard interface can be used to opt out of the automatic way in which browsers handle on-screen virtual keyboards by reducing the size of the viewport to make space for them.
</summary>
<remarks>
<para>If the <c>overlaysContent</c> property is set to <c>true</c>, the browser no longer resizes the viewport when the virtual keyboard appears. The virtual keyboard instead overlays the content of the web page, and you can adapt the page layout as appropriate using the {{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;Virtual Keyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} and your own custom CSS and JavaScript.</para>
<para>-{{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;The VirtualKeyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard/overlaysContent"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean. <c>false</c> by default, set it to <c>true</c> to opt out of the browser&amp;apos;s automatic handling of the on-screen virtual keyboard.</value>
</VirtualKeyboardOverlaysContent>
<VirtualKeyboardShow>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>show()</c></strong> method of the <see cref="VirtualKeyboard"/> interface programmatically shows the on-screen virtual keyboard. This is useful when the page needs to implement its own virtual keyboard logic, especially when using the <c>virtualkeyboardpolicy</c> attribute on <c>contenteditable</c> elements as explained in <see href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard_API#control_the_virtual_keyboard_on_contenteditable_elements">Control the virtual keyboard on <c>contenteditable</c> elements</see>.
</summary>
<remarks>
<para>This method only works if the currently-focused element is a form control — such as an <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input">input</see> or <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea">textarea</see> element — or if the focused element is <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/contenteditable"><c>contenteditable</c></see>, and the currently-focused element&amp;apos;s <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/virtualkeyboardpolicy"><c>virtualKeyboardPolicy</c></see> attribute is set to <c>manual</c> and <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/inputmode"><c>inputmode</c></see> isn&amp;apos;t set to <c>none</c>.</para><para>The <c>show()</c> method always returns <c>undefined</c> and triggers a <see cref="VirtualKeyboard.Geometrychange"/> event.</para>
<para>-{{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;The VirtualKeyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard/show"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>Undefined.</returns>
</VirtualKeyboardShow>
<VirtualKeyboardBoundingRect>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>boundingRect</c></strong> property of the <see cref="VirtualKeyboard"/> interface contains a <see cref="DOMRect"/> indicating the position and size of the on-screen virtual keyboard that overlays the web page.
</summary>
<remarks>
<para>The on-screen virtual keyboard will overlay the viewport when the {{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;Virtual Keyboard API&amp;quot;, &amp;quot;&amp;quot;, "nocode")}} is used to prevent the browser from resizing the viewport automatically. This is done by setting the <see cref="VirtualKeyboard.OverlaysContent"/> property to <c>true</c>.</para>
<para>-{{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;The VirtualKeyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard/boundingRect"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMRect"/> which indicates the position and size of the virtual keyboard in the viewport.The <c>x</c>, <c>y</c>, <c>width</c>, and <c>height</c> coordinates of the rectangle are useful to reposition content in the webpage that needs to be visible even when the virtual keyboard is displayed.</value>
</VirtualKeyboardBoundingRect>
<VirtualKeyboardHide>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>hide()</c></strong> method of the <see cref="VirtualKeyboard"/> interface programmatically hides the on-screen virtual keyboard. This is useful when the page needs to implement its own virtual keyboard logic by using the {{domxref("VirtualKeyboard_API", "VirtualKeyboard API", &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}.
</summary>
<remarks>
<para>This method only works if the currently-focused element&amp;apos;s <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/virtualkeyboardpolicy"><c>virtualKeyboardPolicy</c></see> attribute is set to <c>manual</c> and <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/inputmode"><c>inputmode</c></see> isn&amp;apos;t set to <c>none</c>.</para><para>The <c>hide()</c> method always returns <c>undefined</c> and triggers a <see cref="VirtualKeyboard.Geometrychange"/> event.</para>
<para>-{{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;The VirtualKeyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard/hide"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>Undefined.</returns>
</VirtualKeyboardHide>
<VirtualKeyboardGeometrychange>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>geometrychange</c></strong> event of the <see cref="VirtualKeyboard"/><br/>interface fires when the on-screen virtual keyboard is toggled between shown and hidden states.
</summary>
<remarks>
<para>The <c>geometrychange</c> event is useful to detect when the virtual keyboard appears and disappears, so you can adjust the layout as appropriate. This is necessary when using the {{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;Virtual Keyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}} to disable the browser&amp;apos;s default automatic resizing of the viewport when the virtual keyboard is shown and hidden.</para>
<para>-{{domxref(&amp;quot;VirtualKeyboard_API&amp;quot;, &amp;quot;The VirtualKeyboard API&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;nocode&amp;quot;)}}<br/>-<see href="https://developer.chrome.com/docs/web-platform/virtual-keyboard/">Full control with the VirtualKeyboard API</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard/geometrychange"> <em>See also on MDN</em> </seealso></para>
</remarks>
</VirtualKeyboardGeometrychange>
</docs>