<docs>
<XRCompositionLayer>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>XRCompositionLayer</c></strong> interface of the <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API</see> is a base class that defines a set of common properties and behaviors for WebXR layer types. It is not constructable on its own.
</summary>
<remarks>
<para>Several layer types inherit from <c>XRCompositionLayer</c>:</para><para><c>XRCompositionLayer</c> itself inherits from the general <see cref="XRLayer"/> class (which inherits from <see cref="EventTarget"/>).</para><para></para>
<para>-<see cref="XRLayer"/><br/>-<see cref="EventTarget"/><br/>-<see cref="XREquirectLayer"/><br/>-<see cref="XRCubeLayer"/><br/>-<see cref="XRCylinderLayer"/><br/>-<see cref="XRProjectionLayer"/><br/>-<see cref="XRQuadLayer"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRCompositionLayer"> <em>See also on MDN</em> </seealso></para>
</remarks>
</XRCompositionLayer>
<XRCompositionLayerMipLevels>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The read-only <strong><c>mipLevels</c></strong> property of the <see cref="XRCompositionLayer"/> interface is a layer's number of mip levels in the color and texture data. See also <see href="https://en.wikipedia.org/wiki/Mipmap">Mipmap</see> on Wikipedia.
</summary>
<remarks>
<para>The desired number of mip levels can be specified when creating layers. However, if the user agent can&amp;apos;t create the requested number, it can create less. Use <c>mipLevels</c> to determine the actual number of mip levels for a layer.</para><para>The <c>viewPixelWidth</c> and <c>viewPixelHeight</c> need to be powers of two as they get successively halved at each mip level.</para>
<para>-<see href="https://en.wikipedia.org/wiki/Mipmap">Mipmap</see> on Wikipedia<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRCompositionLayer/mipLevels"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A number equal or smaller to the requested mip levels when a layer has been created.</value>
</XRCompositionLayerMipLevels>
<XRCompositionLayerNeedsRedraw>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The read-only <strong><c>needsRedraw</c></strong> property of the <see cref="XRCompositionLayer"/> interface is a boolean signaling that the layer should be re-rendered in the next frame.
</summary>
<remarks>
<para>The need for redrawing can occur when the underlying resources of a layer are lost due to textures that might have been freed by the compositor under the hood. This might happen when the device falls asleep or when the browser switches context (to an operating system dialog or similar) and then comes back.</para><para>Redrawing is not a problem for layers which are updated with every frame. However, for layers updated infrequently, or for static layers (where you can only draw once after creation or after a <c>redraw</c> event), the layer&amp;apos;s content might be lost and need to be redrawn. If the layer&amp;apos;s resources are lost, the <c>needsRedraw</c> property will be <c>true</c> and a <c>redraw</c> event is fired on the layer.</para>
<para>-<see cref="XREquirectLayer"/>: <see cref="XREquirectLayer.Redraw"/> event<br/>-<see cref="XRCubeLayer"/>: <see cref="XRCubeLayer.Redraw"/> event<br/>-<see cref="XRCylinderLayer"/>: <see cref="XRCylinderLayer.Redraw"/> event<br/>-<see cref="XRQuadLayer"/>: <see cref="XRQuadLayer.Redraw"/> event<br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRCompositionLayer/needsRedraw"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean. <c>true</c> indicates a rerendering is needed in the next frame, <c>false</c> indicates no re-rendering is needed.</value>
</XRCompositionLayerNeedsRedraw>
<XRCompositionLayerLayout>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The read-only <strong><c>layout</c></strong> property of the <see cref="XRCompositionLayer"/> interface is the layout type of the layer.
</summary>
<remarks>
<para>To specify the layout type of a layer, use one of the layer creation methods and their <c>layout</c> option:</para>
<para>-<see cref="XRSubImage"/><br/>-<see cref="XRWebGLBinding.CreateQuadLayer"/><br/>-<see cref="XRWebGLBinding.CreateCylinderLayer"/><br/>-<see cref="XRWebGLBinding.CreateEquirectLayer"/><br/>-<see cref="XRWebGLBinding.CreateCubeLayer"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRCompositionLayer/layout"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string. Possible values:</value>
</XRCompositionLayerLayout>
<XRCompositionLayerDestroy>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>destroy()</c></strong> method of the <see cref="XRCompositionLayer"/> interface deletes the references to the underlying graphics library for the layer. It also sets the color textures and depth stencil texture arrays to an empty array.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRCompositionLayer/destroy"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>None (<see cref="Undefined"/>).</returns>
</XRCompositionLayerDestroy>
<XRCompositionLayerBlendTextureSourceAlpha>
<summary>
<div class="NOTE"><h5>NOTE</h5> <strong>Experimental</strong></div> The <strong><c>blendTextureSourceAlpha</c></strong> property of the <see cref="XRCompositionLayer"/> interface is a boolean enabling the layer's texture {{Glossary("Alpha", "alpha channel")}}.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Glossary/Alpha">Alpha</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRCompositionLayer/blendTextureSourceAlpha"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A boolean. <c>true</c> enables the alpha channel, <c>false</c> disables it.</value>
</XRCompositionLayerBlendTextureSourceAlpha>
</docs>