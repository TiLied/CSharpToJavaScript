<docs>
<XRInputSource>
<summary>
The <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API&amp;apos;s</see> <strong><c>XRInputSource</c></strong> interface describes a single source of control input which is part of the user&amp;apos;s WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Inputs">Inputs and input sources</see><br/>-<see cref="XRInputSourceArray"/><br/>-<see cref="XRSpace"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource"> <em>See also on MDN</em> </seealso></para>
</remarks>
</XRInputSource>
<XRInputSourceProfiles>
<summary>
The read-only <see cref="XRInputSource"/> property <strong><c>profiles</c></strong> returns an array of strings, each describing a configuration profile for the input source. The profile strings are listed in order of specificity, with the most specific profile listed first.
</summary>
<remarks>
<blockquote class="NOTE"><h5>NOTE</h5><para>The <c>profiles</c> list is always empty when the WebXR<br/>session is in inline mode.</para></blockquote>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Inputs">Inputs and input sources</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/profiles"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An array of strings, each describing one configuration profile<br/>for the input device represented by the <c>XRInputSource</c> object. Each input<br/>profile specifies the preferred visual representation and behavior of the input source.</value>
</XRInputSourceProfiles>
<XRInputSourceGripSpace>
<summary>
The read-only <see cref="XRInputSource"/> property <strong><c>gripSpace</c></strong> returns an <see cref="XRSpace"/> whose native origin tracks the pose used to render virtual objects so they appear to be held in (or part of) the user's hand. For example, if a user were holding a virtual straight rod, the native origin of this <c>XRSpace</c> would be located at the approximate center of mass of the user&amp;apos;s fist.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/gripSpace"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="XRSpace"/> object representing the position and orientation of the input<br/>device in virtual space, suitable for rendering an image of the device into the scene.<br/><c>gripSpace</c> is <c>null</c> if the input source is not inherently<br/>trackable. For example, only inputs whose <see cref="XRInputSource.TargetRayMode"/> is <c>tracked-pointer</c> provide a <c>gripSpace</c>.Imagine that the controller is shaped like a straight rod, held in the user&amp;apos;s fist. The<br/>native origin of the grip space is located at the centroid—the center of mass—of the<br/>user&amp;apos;s fist, tracking the position of the user&amp;apos;s hand.<strong>The coordinate system for the left hand&amp;apos;s grip space.</strong><see href="https://developer.mozilla.orggripspace-lefthand-light.svg">A diagram showing how the grip space indicates the local coordinate system for the player&amp;apos;s hand relative to the world.</see><strong>The coordinate system for the right hand&amp;apos;s grip space.</strong><see href="https://developer.mozilla.orggripspace-righthand-light.svg">A diagram showing how the grip space indicates the local coordinate system for the player&amp;apos;s hand relative to the world.</see>As shown in the diagram above, the coordinate system is oriented as follows:</value>
</XRInputSourceGripSpace>
<XRInputSourceHand>
<summary>
The read-only <strong><c>hand</c></strong> property of the <see cref="XRInputSource"/> interface is a <see cref="XRHand"/> object providing access to a hand-tracking device.
</summary>
<remarks>
<para>-<see cref="XRHand"/><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/hand"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="XRHand"/> object or <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null"><c>null</c></see> if the <see cref="XRSession"/> has not been <see href="https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/requestSession">requested</see> with the <c>hand-tracking</c> feature descriptor.</value>
</XRInputSourceHand>
<XRInputSourceTargetRaySpace>
<summary>
The read-only <see cref="XRInputSource"/> property<br/><strong><c>targetRaySpace</c></strong> returns an <see cref="XRSpace"/><br/>(typically an <see cref="XRReferenceSpace"/>) representing the position and<br/>orientation of the target ray in the virtual space. Its native origin tracks<br/>the position of the origin point of the target ray, and its orientation indicates the<br/>orientation of the controller device itself. These values, interpreted in the context of<br/>the input source's <see cref="XRInputSource.TargetRayMode"/>, can be<br/>used both to fully interpret the device as an input source.
</summary>
<remarks>
<para>To obtain an <c>XRSpace</c> representing the input controller&amp;apos;s position and<br/>orientation in virtual space, use the <see cref="XRInputSource.GripSpace"/> property.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Inputs">Inputs and input sources</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Gamepads">Using gamepads in WebXR applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/targetRaySpace"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="XRSpace"/> object—typically an <see cref="XRReferenceSpace"/> or<br/><see cref="XRBoundedReferenceSpace"/>—which represents the position and orientation of<br/>the input controller&amp;apos;s target ray in virtual space.The native origin of the returned <c>XRSpace</c> is located at the point from<br/>which the target ray is emitted, and the orientation of the space indicates the<br/>direction in which the target ray is pointing.</value>
</XRInputSourceTargetRaySpace>
<XRInputSourceHandedness>
<summary>
The read-only <see cref="XRInputSource"/> property<br/><strong><c>handedness</c></strong> indicates which of the user&amp;apos;s hands the WebXR<br/>input source is associated with, or if it&amp;apos;s not associated with a hand at all.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Inputs">Inputs and input sources</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Gamepads">Using gamepads in WebXR applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/handedness"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string indicating whether the input controller is held in one of<br/>the user&amp;apos;s hands, and if it is, which hand. The value is one of the following:</value>
</XRInputSourceHandedness>
<XRInputSourceGamepad>
<summary>
The read-only <see cref="XRInputSource"/> property <strong><c>gamepad</c></strong> returns a <see cref="Gamepad"/> object describing the state of the buttons and axes on the XR input source, if it is a gamepad or comparable device. If the device isn't a gamepad-like device, this property's value is <c>null</c>.
</summary>
<remarks>
<para>The <see cref="Gamepad"/> instance returned behaves as described by the <see href="https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API">Gamepad API</see>. However, there are a few things to note:</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/gamepad"> <em>See also on MDN</em> </seealso></para>
</remarks>
</XRInputSourceGamepad>
<XRInputSourceTargetRayMode>
<summary>
The read-only <see cref="XRInputSource"/><br/>property <strong><c>targetRayMode</c></strong> indicates the method by which the<br/>target ray for the input source should be generated and how it should be presented to<br/>the user.
</summary>
<remarks>
<para>Typically a target ray is drawn from the source of the targeting system along the target ray in the direction in which the user is looking or pointing. The style of the ray is generally up to you, as is the method for indicating the endpoint of the ray. The targeted point or object might be indicated by drawing a shape or highlighting the targeted surface or object.</para><para>A target ray emitted by a hand controller:</para><para><see href="https://mdn.github.io/shared-assets/images/examples/hand-controller-target-ray.gif">A screenshot showing a target ray being emitted by a hand controller</see></para><para>The target ray can be anything from a simple line (ideally fading over distance) to an animated effect, such as the science-fiction &amp;quot;phaser&amp;quot; style shown in the screenshot above.</para>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR Device API</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Inputs">Inputs and input sources</see><br/>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Gamepads">Using gamepads in WebXR applications</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/targetRayMode"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A string indicating which method to use when generating and presenting the target ray to<br/>the user. The possible values are:</value>
</XRInputSourceTargetRayMode>
</docs>