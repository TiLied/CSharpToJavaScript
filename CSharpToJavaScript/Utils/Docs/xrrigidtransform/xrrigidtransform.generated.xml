<docs>
<XRRigidTransform>
<summary>
The <strong><c>XRRigidTransform</c></strong> is a <see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API">WebXR API</see> interface that represents the 3D geometric transform described by a position and orientation.
</summary>
<remarks>
<para><c>XRRigidTransform</c> is used to specify transforms throughout the WebXR APIs, including:</para><para>Using <c>XRRigidTransform</c> in these places rather than bare arrays that provide the matrix data has an advantage. It automatically computes the inverse of the transform and even caches it making subsequent requests significantly faster.</para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform"> <em>See also on MDN</em> </seealso></para>
</remarks>
</XRRigidTransform>
<XRRigidTransformOrientation>
<summary>
The read-only <see cref="XRRigidTransform"/> property<br/><strong><c>orientation</c></strong> is a <see cref="DOMPointReadOnly"/><br/>containing a normalized <see href="https://developer.mozilla.org/en-US/docs/Glossary/quaternion">quaternion</see> (also called a <strong>unit</strong><strong><br/></strong><strong>quaternion</strong> or <strong><see href="https://en.wikipedia.org/wiki/Versor">versor</see></strong>)<br/>specifying the rotational component of the transform represented by the object.<br/>If you specify a quaternion whose length is not exactly 1.0 meters, it will be<br/>normalized for you.
</summary>
<remarks>
<para>-<see href="https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Movement_and_motion">Movement, orientation, and motion</see><br/>-<see href="https://en.wikipedia.org/wiki/Versor">Unit quaternions</see><br/>-<see href="https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation">Quaternions and spatial rotation</see><br/></para>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/orientation"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A <see cref="DOMPointReadOnly"/> object which contains a unit quaternion providing the<br/>orientation component of the transform. As a unit quaternion, the length of the returned<br/>quaternion is always 1.0 meters.</value>
</XRRigidTransformOrientation>
<XRRigidTransformMatrix>
<summary>
The read-only <see cref="XRRigidTransform"/> property <strong><c>matrix</c></strong> returns the transform matrix represented by the object. The returned matrix can then be premultiplied with a column vector to rotate the vector by the 3D rotation specified by the <see cref="XRRigidTransform.Orientation"/>, then translate it by the <see cref="XRRigidTransform.Position"/>.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/matrix"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A {{jsxref("Float32Array")}} containing 16 entries, which represents the 4x4 transform matrix described by the <see cref="XRRigidTransform.Position"/> and <see cref="XRRigidTransform.Orientation"/> properties.</value>
</XRRigidTransformMatrix>
<XRRigidTransformInverse>
<summary>
The read-only <strong><c>inverse</c></strong> property<br/>of the <see cref="XRRigidTransform"/> interface returns another<br/><see cref="XRRigidTransform"/> object which is the inverse of its owning<br/>transform. That is, you can always get the inverse of any<br/><c>XRRigidTransform</c> using its <c>inverse</c> property, instead of having<br/>to explicitly generate it.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/inverse"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>An <see cref="XRRigidTransform"/> which contains the inverse of the<br/><c>XRRigidTransform</c> on which it&amp;apos;s accessed.Applying the inverse of a transform to any object previously transformed by the parent<br/><c>XRRigidTransform</c> always undoes the transformation, resulting in the object<br/>returning to its previous pose. In other words, its position and orientation both return<br/>to their prior configurations.</value>
</XRRigidTransformInverse>
<XRRigidTransformXRRigidTransform>
<summary>
The<br/><strong><c>XRRigidTransform()</c></strong> constructor creates<br/>a new <see cref="XRRigidTransform"/> object, representing the position and<br/>orientation of a point or object. Among other things,<br/><c>XRRigidTransform</c> is used when providing a transform to translate between<br/>coordinate systems across spaces.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/XRRigidTransform"> <em>See also on MDN</em> </seealso></para>
</remarks>
<returns>A new <see cref="XRRigidTransform"/> object which has been initialized to represent a<br/>transform matrix that would adjust the position and orientation of an object from the<br/>origin to the specified <c>position</c> and facing in the direction indicated by<br/><c>orientation</c>.</returns>
</XRRigidTransformXRRigidTransform>
<XRRigidTransformPosition>
<summary>
The read-only <see cref="XRRigidTransform"/> property<br/><strong><c>position</c></strong> is a <see cref="DOMPointReadOnly"/> object which<br/>provides the 3D point, specified in meters, describing the translation component of the<br/>transform.
</summary>
<remarks>
<para><seealso href="https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/position"> <em>See also on MDN</em> </seealso></para>
</remarks>
<value>A read-only <see cref="DOMPointReadOnly"/> indicating the 3D position component of the<br/>transform matrix. The units are meters.<blockquote class="NOTE"><h5>NOTE</h5>The <c>w</c> component of the point is always 1.0.</blockquote></value>
</XRRigidTransformPosition>
</docs>